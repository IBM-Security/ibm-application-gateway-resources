{"version":3,"file":"static/js/2331.251060bd.chunk.js","mappings":"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","sources":["content/loggingPage/loggingtracingAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"logging_tracing_component_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_component\"] = document.getElementById(\"logging_tracing_component_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_compress\"] = document.getElementById(\"logging_tracing_compress_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_file_name\"] = document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_level\"] = document.getElementById(\"logging_tracing_level_id\" + idPrefix).value;\n    json[\"logging_tracing_max_file_size\"] = document.getElementById(\"logging_tracing_max_file_size_id\" + idPrefix).value;\n    json[\"logging_tracing_max_rollover_files\"] = document.getElementById(\"logging_tracing_max_rollover_files_id\" + idPrefix).value;\n      \n    loadGrid( json[\"logging_tracing_component\"], json[\"logging_tracing_compress\"], json[\"logging_tracing_file_name\"], json[\"logging_tracing_level\"], json[\"logging_tracing_max_file_size\"], json[\"logging_tracing_max_rollover_files\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"logging_tracing_component_id\").value = \"\";\n    document.getElementById(\"logging_tracing_compress_id\").checked = false;\n    document.getElementById(\"logging_tracing_file_name_id\").value = \"\";\n    document.getElementById(\"logging_tracing_level_id\").value = \"\";\n    document.getElementById(\"logging_tracing_max_file_size_id\").value = \"\";\n    document.getElementById(\"logging_tracing_max_rollover_files_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"logging_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addlogging_tracingPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"logging_tracing_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"logging_tracing_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Logging_tracingAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [logging_tracing_component, setlogging_tracing_component] = useState(''),\n    updatelogging_tracing_component = useCallback((evt) => setlogging_tracing_component(evt.target.value), []);\n\n    const [logging_tracing_compress, setlogging_tracing_compress] = useState(true),\n    updatelogging_tracing_compress = useCallback((evt) => setlogging_tracing_compress(evt), []);\n\n    const [logging_tracing_file_name, setlogging_tracing_file_name] = useState(''),\n    updatelogging_tracing_file_name = useCallback((evt) => setlogging_tracing_file_name(evt.target.value), []);\n\n    const [logging_tracing_level, setlogging_tracing_level] = useState(0),\n    updatelogging_tracing_level = useCallback((evt) => {}, []);\n\n    const [logging_tracing_max_file_size, setlogging_tracing_max_file_size] = useState(1),\n    updatelogging_tracing_max_file_size = useCallback((evt) => {}, []);\n\n    const [logging_tracing_max_rollover_files, setlogging_tracing_max_rollover_files] = useState(1),\n    updatelogging_tracing_max_rollover_files = useCallback((evt) => {}, []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addlogging_tracingPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"logging_tracing_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading logging_tracing_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Logging / Tracing : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div logging_tracing_div\" + idPrefix}>\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  invalid={!props.logging_tracing_component_valid}  invalidText={props.logging_tracing_component_invalid_text}  value={props.logging_tracing_component}  id={\"logging_tracing_component_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_component_tooltip_id\" + idPrefix}  labelText=\"Component *\" onChange={props.updatelogging_tracing_component}/>\n          <ReactTooltip id={\"logging_tracing_component_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the tracing component to be enabled. Refer to the troubleshooting documentation for the full list of component names.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <Checkbox checked={props.logging_tracing_compress} id={\"logging_tracing_compress_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_compress_tooltip_id\" + idPrefix}  labelText=\"Compress\" onChange={props.updatelogging_tracing_compress}/>\n          <ReactTooltip id={\"logging_tracing_compress_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean which indicates whether rolled over log files should be automatically compressed to conserve disk space.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  invalid={!props.logging_tracing_file_name_valid}  invalidText={props.logging_tracing_file_name_invalid_text}  value={props.logging_tracing_file_name}  id={\"logging_tracing_file_name_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_file_name_tooltip_id\" + idPrefix}  labelText=\"File Name *\" onChange={props.updatelogging_tracing_file_name}/>\n          <ReactTooltip id={\"logging_tracing_file_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the generated log file.  If the file name is supplied without any path information the file will be written to the `/var/iag/logs` directory.  If the file name contains path information the hosting directory must be created and available before the container is started.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_level} id={\"logging_tracing_level_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_level_tooltip_id\" + idPrefix}  min={0}  max={9}  label=\"Level\" onChange={props.updatelogging_tracing_level}/>\n          <ReactTooltip id={\"logging_tracing_level_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The level of detail to be gathered by the tracing component in the range 0 to 9. Level 1 specifies the least detailed output and level 9 specifies the most detailed output. Level 0 will disable tracing for the component.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_max_file_size} id={\"logging_tracing_max_file_size_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_max_file_size_tooltip_id\" + idPrefix}  min={1}  label=\"Max File Size\" onChange={props.updatelogging_tracing_max_file_size}/>\n          <ReactTooltip id={\"logging_tracing_max_file_size_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum size (in MB) that the file can reach before it is rolled over.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_max_rollover_files} id={\"logging_tracing_max_rollover_files_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_max_rollover_files_tooltip_id\" + idPrefix}  min={1}  label=\"Max Rollover Files\" onChange={props.updatelogging_tracing_max_rollover_files}/>\n          <ReactTooltip id={\"logging_tracing_max_rollover_files_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of rollover files to be kept on disk.  When the number of rollover log files reaches the specified threshold, the oldest log file is deleted.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.logging_tracing_component || !props.logging_tracing_component_valid) || (!props.logging_tracing_file_name || !props.logging_tracing_file_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Logging_tracingAdd;\n"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Logging_tracingAdd","props","row","logging_tracing_component","setlogging_tracing_component","useState","updatelogging_tracing_component","useCallback","evt","target","logging_tracing_compress","setlogging_tracing_compress","updatelogging_tracing_compress","logging_tracing_file_name","setlogging_tracing_file_name","updatelogging_tracing_file_name","logging_tracing_level","setlogging_tracing_level","updatelogging_tracing_level","logging_tracing_max_file_size","setlogging_tracing_max_file_size","updatelogging_tracing_max_file_size","logging_tracing_max_rollover_files","setlogging_tracing_max_rollover_files","updatelogging_tracing_max_rollover_files","fetcheddata","setFetcheddata","React","dataLoad","setDataMain","functionName","data","eval","_jsx","children","id","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","logging_tracing_component_valid","invalidText","logging_tracing_component_invalid_text","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Checkbox","logging_tracing_file_name_valid","logging_tracing_file_name_invalid_text","NumberInput","min","max","label","Button","onClick","disabled"],"sourceRoot":""}