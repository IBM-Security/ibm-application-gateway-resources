{"version":3,"sources":["content/resource_serversPage/serversAdd.js"],"names":["ServerssslcertificateDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","setresource_servers_servers_ssl_certificate","doAdd","updateStyle","style","display","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","i","length","eval","ServersAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_React$useState3","_React$useState4","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","useEffect","resource_servers_servers_ssl_certificateloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","newId","wrap","_context","prev","next","certificate","window","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_useState","_useState2","resource_servers_servers_host","setresource_servers_servers_host","updateresource_servers_servers_host","evt","target","_useState3","_useState4","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","_useState5","_useState6","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","_useState7","_useState8","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","validateField","setresource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_invalid_text","_useState9","_useState10","resource_servers_servers_ssl_certificate_certificate_valid","_useState11","_useState12","resource_servers_servers_ssl_certificate_certificate_invalid_text","_useState13","_useState14","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","_useState15","_useState16","resource_servers_servers_ssl_sni","setresource_servers_servers_ssl_sni","updateresource_servers_servers_ssl_sni","_useState17","_useState18","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","_useState19","_useState20","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","_useState21","_useState22","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","_useState23","_useState24","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_19__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_20__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","onClick","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","invalid","invalidText","resource_servers_servers_host_invalid_text","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","min","max","label","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_17__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","setData","editing","name","parentIdPrefix"],"mappings":"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","file":"static/js/109.0b5f9f3d.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_sni\"] = document.getElementById(\"resource_servers_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_ssl_sni\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setresource_servers_servers_ssl_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_servers_host_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_port_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_virtual_host_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_ssl_server_dn_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_ssl_sni_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_url_style_windows_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_priority_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_uuid_id\").value = \"\";\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = []\n    setresource_servers_servers_ssl_certificate(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst ServersAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => {\n      setresource_servers_servers_ssl_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_invalid_text, \"Resource Servers Servers Ssl Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_ssl_sni, setresource_servers_servers_ssl_sni] = useState(''),\n    updateresource_servers_servers_ssl_sni = useCallback((evt) => setresource_servers_servers_ssl_sni(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_servers_host_valid}  invalidText={props.resource_servers_servers_host_invalid_text}  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_sni}  id={\"resource_servers_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateresource_servers_servers_ssl_sni}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>Specifies the expected SNI of the resource server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default ServersAdd;\n"],"sourceRoot":""}