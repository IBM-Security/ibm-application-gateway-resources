{"version":3,"sources":["content/serverPage/serverclient_ip_rulesAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Server_client_ip_rulesAdd","props","row","_useState","useState","_useState2","_slicedToArray","server_client_ip_rules_client_ip_rules","setserver_client_ip_rules_client_ip_rules","updateserver_client_ip_rules_client_ip_rules","useCallback","evt","target","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","server_client_ip_rules_client_ip_rules_valid","invalidText","server_client_ip_rules_client_ip_rules_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled"],"mappings":"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","file":"static/js/336.8c082ea9.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_client_ip_rules_client_ip_rules_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_client_ip_rules_client_ip_rules\"] = document.getElementById(\"server_client_ip_rules_client_ip_rules_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"server_client_ip_rules_client_ip_rules\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_client_ip_rules_client_ip_rules_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserver_client_ip_rulesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_client_ip_rules_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_client_ip_rules_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Server_client_ip_rulesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [server_client_ip_rules_client_ip_rules, setserver_client_ip_rules_client_ip_rules] = useState(''),\n    updateserver_client_ip_rules_client_ip_rules = useCallback((evt) => setserver_client_ip_rules_client_ip_rules(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserver_client_ip_rulesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_client_ip_rules_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_client_ip_rules_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / Client IP Rules : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_client_ip_rules_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_client_ip_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_client_ip_rules_client_ip_rules_valid}  invalidText={props.server_client_ip_rules_client_ip_rules_invalid_text}  value={props.server_client_ip_rules_client_ip_rules}  id={\"server_client_ip_rules_client_ip_rules_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_client_ip_rules_client_ip_rules_tooltip_id\" + idPrefix}  labelText=\"IP Pattern *\" onChange={props.updateserver_client_ip_rules_client_ip_rules}/>\n          <ReactTooltip id={\"server_client_ip_rules_client_ip_rules_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A client IP address pattern(s).<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_client_ip_rules_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_client_ip_rules_client_ip_rules || !props.server_client_ip_rules_client_ip_rules_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Server_client_ip_rulesAdd;\n"],"sourceRoot":""}