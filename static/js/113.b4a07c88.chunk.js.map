{"version":3,"sources":["content/resource_serversPage/serversAdd.js"],"names":["ServerssslcertificateDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","setresource_servers_servers_ssl_certificate","doAdd","updateStyle","style","display","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","i","length","eval","ServersAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_React$useState3","_React$useState4","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","useEffect","resource_servers_servers_ssl_certificateloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","newId","wrap","_context","prev","next","certificate","window","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_useState","_useState2","resource_servers_servers_host","setresource_servers_servers_host","updateresource_servers_servers_host","evt","target","_useState3","_useState4","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","_useState5","_useState6","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","_useState7","_useState8","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","validateField","setresource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_invalid_text","_useState9","_useState10","resource_servers_servers_ssl_certificate_certificate_valid","_useState11","_useState12","resource_servers_servers_ssl_certificate_certificate_invalid_text","_useState13","_useState14","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","_useState15","_useState16","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","_useState17","_useState18","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","_useState19","_useState20","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","_useState21","_useState22","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_18__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_19__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","onClick","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","invalid","invalidText","resource_servers_servers_host_invalid_text","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","min","max","label","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","setData","editing","name","parentIdPrefix"],"mappings":"68QA2BA,IAAMA,iCAAmCC,gDAAK,kBAAMC,QAAAC,IAAA,CAAAC,oBAAAC,EAAA,GAAAD,oBAAAC,EAAA,OAAAC,KAAAF,oBAAAG,KAAA,aAC9CC,yBAA2BP,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aACtCE,0BAA4BR,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAGrCG,aAAe,aAGfC,WAAa,SAACC,EAAUC,EAAUC,QAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,IAEuF,IAA/FC,SAASC,eAAe,mCAAqCL,GAAUM,MAAMC,SAAS,OACvFJ,EAAI,8BAAoCC,SAASC,eAAe,mCAAqCL,GAAUM,OAEjHH,EAAI,8BAAoCC,SAASC,eAAe,mCAAqCL,GAAUM,OACL,IAAvGF,SAASC,eAAe,2CAA6CL,GAAUM,MAAMC,SAAS,OAC/FJ,EAAI,sCAA4CC,SAASC,eAAe,2CAA6CL,GAAUM,QAEtB,IAAxGF,SAASC,eAAe,4CAA8CL,GAAUM,MAAMC,SAAS,OAChGJ,EAAI,uCAA6CC,SAASC,eAAe,4CAA8CL,GAAUM,OAEnIH,EAAI,oDAA0DC,SAASC,eAAe,yDAA2DL,GAAUQ,QAAQC,WACnKN,EAAI,2CAAiDC,SAASC,eAAe,gDAAkDL,GAAUQ,QAAQC,WACjJN,EAAI,kCAAwCC,SAASC,eAAe,uCAAyCL,GAAUM,OACrB,IAA/FF,SAASC,eAAe,mCAAqCL,GAAUM,MAAMC,SAAS,OACvFJ,EAAI,8BAAoCC,SAASC,eAAe,mCAAqCL,GAAUM,OAEjHH,EAAI,yCAA+CO,gDAAgDC,yCAEnGZ,EAAUI,EAAI,8BAAmCA,EAAI,8BAAmCA,EAAI,sCAA2CA,EAAI,uCAA4CA,EAAI,oDAAyDA,EAAI,2CAAgDA,EAAI,kCAAuCA,EAAI,8BAAmCA,EAAI,0CAA8C,GAE5aS,YAAYZ,EAAUC,IAGlBY,UAAY,SAACC,EAA6Cd,EAAUe,EAAOd,QAC/DC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,oCAAoCC,MAAQ,GACpEF,SAASC,eAAe,oCAAoCC,MAAQ,GACpEF,SAASC,eAAe,4CAA4CC,MAAQ,GAC5EF,SAASC,eAAe,6CAA6CC,MAAQ,GAC7EF,SAASC,eAAe,0DAA0DG,SAAU,EAC5FJ,SAASC,eAAe,iDAAiDG,SAAU,EACnFJ,SAASC,eAAe,wCAAwCC,MAAQ,GACxEF,SAASC,eAAe,oCAAoCC,MAAQ,GACpEI,gDAAgDC,yCAA2C,GAC3FG,EAA4CJ,gDAAgDC,0CAGzFI,GACDA,IAGFH,YAAYZ,EAAWC,IAGnBW,YAAc,SAACZ,EAAUC,GAC7Be,iDAAY,cAAgBhB,EAAU,UAAW,SACjDI,SAASC,eAAe,iBAAmBL,GAAUiB,MAAMC,QAAU,OAEhEjB,GACDA,KAIAkB,SAAW,SAACnB,QACEE,IAAbF,IAAwBA,EAAW,IAEtCgB,iDAAY,+BAAiChB,EAAU,UAAW,SAClEI,SAASC,eAAe,+BAAiCL,GAAUiB,MAAMC,QAAU,QAInFE,mDAAqD,CACvD,CACAC,OAAQ,cACRC,IAAK,gBAKHZ,gDAAkD,CAACC,yCAA0C,IAE7FY,kDAAoD,SAApDA,kDAAqDvB,SAAUwB,aAIjE,QAHgBtB,IAAbF,WAAwBA,SAAW,IAGnCwB,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBrB,SAASC,eAAe,0DAA4DL,UAAUM,MAAQ,GAEtGU,iDAAY,+BAAiChB,SAAU,UAAW,QAElEI,SAASC,eAAe,gCAAkCL,UAAUiB,MAAMC,QAAU,QAEpFd,SAASC,eAAe,+BAAiCL,UAAUiB,MAAMC,QAAU,QAIjFU,WAAa,SAAbA,WAAcC,OAEhB,IAAIC,IAAMD,MAAMC,IACV/B,SAAW8B,MAAM9B,SACjBE,QAAU4B,MAAM5B,QAChBD,SAAY6B,MAAM7B,SAAU6B,MAAM7B,SAAS,GALvB+B,gBAOsEC,6CAAMC,SAAS,IAPrFC,iBAAAC,OAAAC,oKAAA,EAAAD,CAAAJ,gBAAA,GAOnBpB,yCAPmBuB,iBAAA,GAOuBpB,4CAPvBoB,iBAAA,GAAAG,iBAQoFL,6CAAMC,UAAS,GARnGK,iBAAAH,OAAAC,oKAAA,EAAAD,CAAAE,iBAAA,GAQnBE,gDARmBD,iBAAA,GAQ8BE,mDAR9BF,iBAAA,GAU1BN,6CAAMS,UAAU,WACdC,oDACC,CAACH,kDAEJ,IAAMG,iDAAmDV,6CAAMW,YAAN,eAAAC,EAAAT,OAAAU,uKAAA,EAAAV,CAAAW,sBAAAC,KAAkB,SAAAC,EAAOC,EAAsDC,GAA7D,IAAAC,EAAA1B,EAAA2B,EAAAC,EAAA,OAAAP,sBAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACzE,IAEE,GADIN,EAAQ,GACTF,EACD,GAAGC,EAAK,CACN,IAAQzB,EAAI,EAAGA,EAAIf,gDAAgDC,yCAAyCe,OAAQD,IAC9G2B,GAAW1C,gDAAgDC,yCAAyCc,GAAGiC,YAAahD,gDAAgDC,yCAAyCc,GAAGiC,YAAY,IAAM,IACxK,GAA1DC,OAAOC,iDAAqH,QAA1DD,OAAOC,iDAA8DR,GAAUO,OAAOE,gDAC1JV,EAAMW,KAAKpD,gDAAgDC,yCAAyCc,IAGpG4B,GAAUJ,GAA2G,IAAM,GAC/HE,EAAMW,KAAK,CACTC,GAAIV,EACJK,YAAaT,SAIf,IAAQxB,EAAI,EAAGA,EAAIf,gDAAgDC,yCAAyCe,OAAQD,IAC/Gf,gDAAgDC,yCAAyCc,GAAGiC,cAAgBT,GAC7GE,EAAMW,KAAKpD,gDAAgDC,yCAAyCc,SAK1G0B,EAAQzC,gDAAgDC,yCAE1DD,gDAAgDC,yCAA2CwC,EAE3FrC,4CADa,CAACH,yCAA0CwC,GACPxC,0CAGjD,MAAOnB,GACPwE,QAAQC,IAAIzE,GAjC2D,OAAA+D,EAAAW,OAAA,UAmClE,GAnCkE,wBAAAX,EAAAY,SAAAnB,MAAlB,gBAAAoB,EAAAC,GAAA,OAAAzB,EAAA0B,MAAAC,KAAAC,YAAA,IAd/BC,UAsDgDxC,oDAAS,IAtDzDyC,WAAAvC,OAAAC,oKAAA,EAAAD,CAAAsC,UAAA,GAsDnBE,8BAtDmBD,WAAA,GAsDYE,iCAtDZF,WAAA,GAuD1BG,oCAAsClC,uDAAY,SAACmC,GAAD,OAASF,iCAAiCE,EAAIC,OAAOzE,QAAQ,IAvDrF0E,WAyDgD/C,oDAAS,KAzDzDgD,WAAA9C,OAAAC,oKAAA,EAAAD,CAAA6C,WAAA,GAyDnBE,8BAzDmBD,WAAA,GAyDYE,iCAzDZF,WAAA,GA0D1BG,oCAAsCzC,uDAAY,SAACmC,KAAY,IA1DrCO,WA4DgEpD,oDAAS,IA5DzEqD,WAAAnD,OAAAC,oKAAA,EAAAD,CAAAkD,WAAA,GA4DnBE,sCA5DmBD,WAAA,GA4DoBE,yCA5DpBF,WAAA,GA6D1BG,4CAA8C9C,uDAAY,SAACmC,GAAD,OAASU,yCAAyCV,EAAIC,OAAOzE,QAAQ,IA7DrGoF,WA+D8FzD,oDAAS,IA/DvG0D,WAAAxD,OAAAC,oKAAA,EAAAD,CAAAuD,WAAA,GA+DnBzC,qDA/DmB0C,WAAA,GA+DmCC,wDA/DnCD,WAAA,GAgE1BE,2DAA6DlD,uDAAY,SAACmC,GACxEc,wDAAwDd,EAAIC,OAAOzE,OACnE,IAAI8C,EAAS0B,EAAIC,OAAOzE,MACxBwF,iDAAcpF,gDAAgDC,yCAA0CoF,8DAA+DC,qEAAsE,2CAA4C,cAAe5C,IACvS,IApEuB6C,WAsE0GhE,qDAAS,GAtEnHiE,YAAA/D,OAAAC,oKAAA,EAAAD,CAAA8D,WAAA,GAsEnBE,2DAtEmBD,YAAA,GAsEyCH,8DAtEzCG,YAAA,GAAAE,YAuEwHnE,oDAAS,IAvEjIoE,YAAAlE,OAAAC,oKAAA,EAAAD,CAAAiE,YAAA,GAuEnBE,kEAvEmBD,YAAA,GAuEgDL,qEAvEhDK,YAAA,GAAAE,YA0EkEtE,oDAAS,IA1E3EuE,YAAArE,OAAAC,oKAAA,EAAAD,CAAAoE,YAAA,GA0EnBE,uCA1EmBD,YAAA,GA0EqBE,0CA1ErBF,YAAA,GA2E1BG,6CAA+ChE,uDAAY,SAACmC,GAAD,OAAS4B,0CAA0C5B,EAAIC,OAAOzE,QAAQ,IA3EvGsG,YA6E4F3E,qDAAS,GA7ErG4E,YAAA1E,OAAAC,oKAAA,EAAAD,CAAAyE,YAAA,GA6EnBE,oDA7EmBD,YAAA,GA6EkCE,uDA7ElCF,YAAA,GA8E1BG,0DAA4DrE,uDAAY,SAACmC,GAAD,OAASiC,uDAAuDjC,IAAM,IA9EpHmC,YAgF0EhF,qDAAS,GAhFnFiF,YAAA/E,OAAAC,oKAAA,EAAAD,CAAA8E,YAAA,GAgFnBE,2CAhFmBD,YAAA,GAgFyBE,8CAhFzBF,YAAA,GAiF1BG,iDAAmD1E,uDAAY,SAACmC,GAAD,OAASsC,8CAA8CtC,IAAM,IAjFlGwC,YAmFwDrF,oDAAS,GAnFjEsF,YAAApF,OAAAC,oKAAA,EAAAD,CAAAmF,YAAA,GAmFnBE,kCAnFmBD,YAAA,GAmFgBE,qCAnFhBF,YAAA,GAoF1BG,wCAA0C/E,uDAAY,SAACmC,KAAY,IApFzC6C,YAsFgD1F,oDAAS,IAtFzD2F,YAAAzF,OAAAC,oKAAA,EAAAD,CAAAwF,YAAA,GAsFnBE,8BAtFmBD,YAAA,GAsFYE,iCAtFZF,YAAA,GAuF1BG,oCAAsCpF,uDAAY,SAACmC,GAAD,OAASgD,iCAAiChD,EAAIC,OAAOzE,QAAQ,IAvFrF0H,iBA0FYhG,6CAAMC,UAAS,GA1F3BgG,iBAAA9F,OAAAC,oKAAA,EAAAD,CAAA6F,iBAAA,GA0FnBE,YA1FmBD,iBAAA,GA0FNE,eA1FMF,iBAAA,GA2F1BjG,6CAAMS,UAAU,WACd2F,YACC,CAACF,cACJ,IAAME,SAAW,WAEf,IAAI,IAAI3G,EAAI,EAAGA,EAAIf,gDAAgDC,yCAAyCe,OAAQD,IAC/Gf,gDAAgDC,yCAAyCc,GAAGsC,KAAOJ,OAAOE,+CAC7G+B,6DAAyJ1F,IAAhGQ,gDAAgDC,yCAAyCc,SAAgIvB,IAA5GQ,gDAAgDC,yCAAyCc,GAAGiC,YAA4BhD,gDAAgDC,yCAAyCc,GAAGiC,YAAY,IAKxY,OAAO,GAGH2E,YAAc,SAAdA,YAAeC,aAAcC,MAC9BD,cAAgBC,MACjB5G,KAAK2G,aAAL3G,CAAmB4G,OAIvB,OACEC,2CAAAC,EAAAC,cAAA,WAEEF,2CAAAC,EAAAC,cAAA,OAAK3E,GAAI,iBAAmB/D,SAAUiB,MAAO,CAACC,QAAQ,QAASyH,UAAU,yBAEvEH,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAM7E,GAAK,+BAAiC/D,SAAU6I,WAAY,cAAgB7I,SAAU8I,UAAQ,EAACH,UAAU,gBAAgB1H,MAAO,CAAC8H,SAAS,SAC5IP,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,KACEJ,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAKI,OAAQ,cAAgBhJ,UAA7B,WACAwI,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAKI,OAAQ,UAAYhJ,UAAzB,OACAwI,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAKI,OAAQ,gBAAkBhJ,UAA/B,cAEFwI,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAU3H,MAAO,CAACgI,MAAM,OAAQF,SAAS,QAASG,MAAO,gBAAkBlJ,UACzEwI,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB1H,MAAO,CAACkI,OAAO,OAAQJ,SAAS,SACnEP,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6DAA+D3I,UAC9EwI,2CAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,iCAAqEH,2CAAAC,EAAAC,cAAA,WADvE,qBAC8FF,2CAAAC,EAAAC,cAAA,gCAA2BF,2CAAAC,EAAAC,cAAA,WADzH,gEAIAF,2CAAAC,EAAAC,cAAA,OAAKC,UAAW,+CAAiD3I,UACjEwI,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UAC9EwI,2CAAAC,EAAAC,cAAA,uBAAkBF,2CAAAC,EAAAC,cAAA,YAEJF,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB1H,MAAO,CAACmI,WAAW,OAAOC,aAAa,SAE3Eb,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAACY,qDAAA,EAAD,CAAU9I,QAASqB,MAAMiF,oDAAqD/C,GAAI,yDAA2D/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,iEAAmE7J,SAAW8J,UAAU,mBAAmBC,SAAUlI,MAAMmF,4DAC/XwB,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,iEAAmE/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,sEAAkG3B,2CAAAC,EAAAC,cAAA,cAGvNF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAACY,qDAAA,EAAD,CAAU9I,QAASqB,MAAMsF,2CAA4CpD,GAAI,gDAAkD/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,wDAA0D7J,SAAW8J,UAAU,UAAUC,SAAUlI,MAAMwF,mDAC3VmB,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,wDAA0D/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,6MAAyO3B,2CAAAC,EAAAC,cAAA,iBAOnVF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UAC9DwI,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQC,QAAS,WAAQzJ,YAAYZ,SAAWC,WAAhD,UACAuI,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQE,UAAYzI,MAAMqD,gCAAkCrD,MAAM0I,sCAA0C1I,MAAM8C,gCAAkC9C,MAAM2I,oCAAsCH,QAAS,WAAQvK,WAAWC,SAAUC,SAAWC,WAAjP,UAGNuI,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAU3H,MAAO,CAACgI,MAAM,OAAQF,SAAS,QAASG,MAAO,cAAgBlJ,UACvEwI,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB1H,MAAO,CAACkI,OAAO,OAAQJ,SAAS,SACnEP,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6DAA+D3I,UAC9EwI,2CAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,iCAAqEH,2CAAAC,EAAAC,cAAA,WADvE,qBAC8FF,2CAAAC,EAAAC,cAAA,8BAAyBF,2CAAAC,EAAAC,cAAA,WADvH,iEAIAF,2CAAAC,EAAAC,cAAA,OAAKC,UAAW,+CAAiD3I,UACjEwI,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAYC,SAAU7I,MAAM2I,oCAAsCG,YAAa9I,MAAM+I,2CAA6CtK,MAAOuB,MAAM8C,8BAAgCZ,GAAI,mCAAqC/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,2CAA6C7J,SAAW8J,UAAU,SAASC,SAAUlI,MAAMgD,sCAC1a2D,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,2CAA6C/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,wCAAoE3B,2CAAAC,EAAAC,cAAA,cAGnKF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAACmC,qDAAA,EAAD,CAAavK,MAAOuB,MAAMqD,8BAA+BnB,GAAI,mCAAqC/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,2CAA6C7J,SAAW8K,IAAK,EAAIC,IAAK,MAAQC,MAAM,SAASjB,SAAUlI,MAAMuD,sCACtUoD,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,2CAA6C/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,6CAAyE3B,2CAAAC,EAAAC,cAAA,cAGxKF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAYnK,MAAOuB,MAAM0D,sCAAwCxB,GAAI,2CAA6C/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,mDAAqD7J,SAAW8J,UAAU,eAAeC,SAAUlI,MAAM4D,8CAClV+C,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,mDAAqD/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,yVAAqX3B,2CAAAC,EAAAC,cAAA,cAG5dF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAACmC,qDAAA,EAAD,CAAavK,MAAOuB,MAAM2F,kCAAmCzD,GAAI,uCAAyC/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,+CAAiD7J,SAAW8K,IAAK,EAAIC,IAAK,EAAIC,MAAM,WAAWjB,SAAUlI,MAAM6F,0CAChVc,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,+CAAiD/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,qKAAiM3B,2CAAAC,EAAAC,cAAA,cAGpSF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAYnK,MAAOuB,MAAMgG,8BAAgC9D,GAAI,mCAAqC/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,2CAA6C7J,SAAW8J,UAAU,OAAOC,SAAUlI,MAAMkG,sCAClTS,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,2CAA6C/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,oPAAgR3B,2CAAAC,EAAAC,cAAA,WAAhR,mMAAqdF,2CAAAC,EAAAC,cAAA,gBAKljBF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UAC9DwI,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQC,QAAS,WAAQzJ,YAAYZ,SAAWC,WAAhD,UACAuI,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQE,UAAYzI,MAAMqD,gCAAkCrD,MAAM0I,sCAA0C1I,MAAM8C,gCAAkC9C,MAAM2I,oCAAsCH,QAAS,WAAQvK,WAAWC,SAAUC,SAAWC,WAAjP,UAGNuI,2CAAAC,EAAAC,cAACE,6CAAA,EAAD,CAAU3H,MAAO,CAACgI,MAAM,OAAQF,SAAS,QAASG,MAAO,UAAYlJ,UACnEwI,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB1H,MAAO,CAACkI,OAAO,OAAQJ,SAAS,SACnEP,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6DAA+D3I,UAC9EwI,2CAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,iCAAqEH,2CAAAC,EAAAC,cAAA,WADvE,qBAC8FF,2CAAAC,EAAAC,cAAA,0BAAqBF,2CAAAC,EAAAC,cAAA,WADnH,gCAIAF,2CAAAC,EAAAC,cAAA,OAAKC,UAAW,+CAAiD3I,UACjEwI,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UAC9EwI,2CAAAC,EAAAC,cAAA,iBAAYF,2CAAAC,EAAAC,cAAA,YAEEF,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB1H,MAAO,CAACmI,WAAW,OAAOC,aAAa,SAE3Eb,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UAC9EwI,2CAAAC,EAAAC,cAAA,MAAIuC,SAAS,IAAK1B,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,sDAAwD7J,UAAtL,eAAiNwI,2CAAAC,EAAAC,cAAA,YAEzMF,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,sDAAwD/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,qIAAiK3B,2CAAAC,EAAAC,cAAA,aAE3QF,2CAAAC,EAAAC,cAAA,OAAK3E,GAAI,mDAAqD/D,SAAUiB,MAAO,CAACmI,WAAW,OAAOC,aAAa,SAC7Gb,2CAAAC,EAAAC,cAAA,OAAKC,UAAW,6CAA+C3I,UAC7DwI,2CAAAC,EAAAC,cAACwC,qDAAA,EAAD,CAAWnH,GAAI,gDAAkD/D,SAAUmL,YAAU,EACjFC,QAAShK,mDACTiK,KAAM3K,gDAAgDC,yCACtD2K,OAAQ,SAAAC,GAAA,IACNF,EADME,EACNF,KACAD,EAFMG,EAENH,QACAI,EAHMD,EAGNC,eAEAC,GALMF,EAING,YAJMH,EAKNE,eALMF,EAMNI,gBANMJ,EAONK,cAPML,EAQNM,uBARM,OAUVrD,2CAAAC,EAAAC,cAACoD,qDAAA,EAAD,KACEtD,2CAAAC,EAAAC,cAACqD,qDAAA,EAAD,CAAcC,aAAW,sBACvBxD,2CAAAC,EAAAC,cAACuD,sDAAA,EAAD,KACEzD,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQC,QAAS,WAAO9I,kDAAkDvB,SAAU,CAAC4F,wDAAwD,IAAQG,+DAA8D,OAAnN,SAGJyC,2CAAAC,EAAAC,cAACwD,sDAAA,EAAD/J,OAAAgK,OAAA,CAAOC,KAAK,UAAaX,KACvBjD,2CAAAC,EAAAC,cAAC2D,sDAAA,EAAD,KACE7D,2CAAAC,EAAAC,cAAC4D,sDAAA,EAAD,KACGlB,EAAQmB,IAAI,SAAAlL,GAAM,OACjBmH,2CAAAC,EAAAC,cAAC8D,sDAAA,EAAgBhB,EAAe,CAAEnK,WAC/BA,EAAOA,UAGZmH,2CAAAC,EAAAC,cAAC8D,sDAAA,EAAD,kBAKJhE,2CAAAC,EAAAC,cAAC+D,sDAAA,EAAD,KACGpB,EAAKkB,IAAI,SAAAzK,GAAG,OACX0G,2CAAAC,EAAAC,cAAC4D,sDAAA,EAAD,CAAUhL,IAAKQ,EAAIiC,IAChBjC,EAAI4K,MAAMH,IAAI,SAAAI,GAAI,OACjBnE,2CAAAC,EAAAC,cAACkE,sDAAA,EAAD,CAAWtL,IAAKqL,EAAK5I,IAAK4I,EAAKrM,SAEjCkI,2CAAAC,EAAAC,cAACkE,sDAAA,EAAD,KACEpE,2CAAAC,EAAAC,cAACmE,mCAAA,SAAD,CAAUC,SAAUtE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAACvJ,iCAAD,CAAkC2C,IAAKA,EAAK/B,SAAU2C,oDAExD8F,2CAAAC,EAAAC,cAACmE,mCAAA,SAAD,CAAUC,SAAUtE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAAC9I,0BAAD,CAA4B2I,KAAM7H,gDAAgDC,yCAA0CoM,QAAS1E,YAAavG,IAAKA,EAAK/B,SAAU2C,iDAAkD0F,SAAUA,SAAU4E,SAAS,EAAMC,KAAM,2CAA4CjN,SAAUA,SAAW,OAAQkN,eAAgBlN,SAClX6F,2DAA4DA,2DAA4D5C,qDAAsDA,qDAC9KkD,2DAA4DA,2DAC5DG,kEAAmEA,iFAa/DkC,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UACtEwI,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAYnK,MAAOuB,MAAM4E,uCAAyC1C,GAAI,4CAA8C/D,SAAWuJ,QAAS,SAAC/J,GAAD,OAAOgK,8CAAaC,KAAKjK,EAAEuF,SAAS2E,OAAQ,SAAClK,GAAD,OAAOgK,8CAAaG,KAAKnK,EAAEuF,SAAS6E,YAAA,EAASC,WAAU,oDAAsD7J,SAAW8J,UAAU,YAAYC,SAAUlI,MAAM8E,+CAClV6B,2CAAAC,EAAAC,cAACsB,4CAAA,EAAD,CAAcjG,GAAI,oDAAsD/D,SAAUiK,MAAM,MAAMC,OAAO,SAAS1B,2CAAAC,EAAAC,cAAA,OAAKzH,MAAO,CAAEkJ,SAAU,MAAxB,8FAA0H3B,2CAAAC,EAAAC,cAAA,iBAOhOF,2CAAAC,EAAAC,cAAA,OAAKC,UAAY,6CAA+C3I,UAC9DwI,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQC,QAAS,WAAQzJ,YAAYZ,SAAWC,WAAhD,UACAuI,2CAAAC,EAAAC,cAAC0B,qDAAA,EAAD,CAAQE,UAAYzI,MAAMqD,gCAAkCrD,MAAM0I,sCAA0C1I,MAAM8C,gCAAkC9C,MAAM2I,oCAAsCH,QAAS,WAAQvK,WAAWC,SAAUC,SAAWC,WAAjP,WAIFuI,2CAAAC,EAAAC,cAACmE,mCAAA,SAAD,CAAUC,SAAUtE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAAC/I,yBAAD,CAA0BI,SAAU2C,iDAAkDzC,QAAS,WAAOkB,SAASnB,WAAaA,SAAUA,SAC9I6F,2DAA4DA,2DAA4D5C,qDAAsDA,qDAC9KkD,2DAA4DA,2DAC5DG,kEAAmEA,qEAG7DkC,2CAAAC,EAAAC,cAACmE,mCAAA,SAAD,CAAUC,SAAUtE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAAC9I,0BAAD,CAA4BG,SAAU2C,iDAAkD0F,SAAUA,SAAU6E,KAAM,2CAA4CjN,SAAUA,SAAW,OAAQkN,eAAgBlN,SACnN6F,2DAA4DA,2DAA4D5C,qDAAsDA,qDAC9KkD,2DAA4DA,2DAC5DG,kEAAmEA,wEAQhE1E","file":"static/js/113.b4a07c88.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setresource_servers_servers_ssl_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_servers_host_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_port_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_virtual_host_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_ssl_server_dn_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_url_style_windows_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_priority_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_uuid_id\").value = \"\";\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = []\n    setresource_servers_servers_ssl_certificate(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst ServersAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => {\n      setresource_servers_servers_ssl_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_invalid_text, \"Resource Servers Servers Ssl Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_servers_host_valid}  invalidText={props.resource_servers_servers_host_invalid_text}  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default ServersAdd;\n"],"sourceRoot":""}