{"version":3,"sources":["content/resource_serversPage/serversEdit.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ServerssslcertificateDeleteModal","lazy","__webpack_require__","e","bind","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","json","document","getElementById","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","pName","len","style","display","updateStyle","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","resource_servers_servers_ssl_certificatehandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","port","host","ssl","certificate","newItem","i2","id","resource_servers","ServersEdit","props","row","toolbarName","_React$useState","React","useState","_React$useState2","_slicedToArray","setresource_servers_servers_ssl_certificate","_React$useState3","_React$useState4","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","useEffect","resource_servers_servers_ssl_certificateloadGrid","useCallback","_ref","_asyncToGenerator","_callee","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","newId","_context","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","console","log","_x","_x2","apply","arguments","_useState","_useState2","resource_servers_servers_host","setresource_servers_servers_host","updateresource_servers_servers_host","evt","target","_useState3","_useState4","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","_useState5","_useState6","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","_useState7","_useState8","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","_useState9","_useState10","resource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_valid","_useState11","_useState12","resource_servers_servers_ssl_certificate_certificate_invalid_text","setresource_servers_servers_ssl_certificate_certificate_invalid_text","_useState13","_useState14","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","_useState15","_useState16","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","_useState17","_useState18","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","_useState19","_useState20","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","_useState21","_useState22","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","setDataMain","functionName","editing","createElement","Icon","assign","editProps","editIcon","onClick","title","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","Checkbox","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","TextInput","NumberInput","min","max","label","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback"],"mappings":"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","file":"static/js/114.89760e48.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].port)?data[i].port:\"\") + ((data[i].host)?data[i].host:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.certificate !== undefined ) {\n              if(typeof data[i].ssl.certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.certificate;\n                newItem[\"certificate\"] = data[i].ssl.certificate;\n                resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.certificate[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].id;\n                  } else if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2];\n                  }\n                  if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2];\n                  }\n                  resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n                }\n              }\n              setData(\"setresource_servers_servers_ssl_certificate\", resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.resource_servers !== undefined ) {\n      }\n    }\n  };\nconst ServersEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => setresource_servers_servers_ssl_certificate_certificate(evt.target.value), []);\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ServersEdit;\n"],"sourceRoot":""}