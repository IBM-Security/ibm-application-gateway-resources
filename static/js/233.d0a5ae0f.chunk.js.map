{"version":3,"sources":["content/servicesPage/serviceskerberosrealmsEdit.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"names":["ServiceskerberosrealmspropertiesDeleteModal","lazy","__webpack_require__","e","then","bind","ServiceskerberosrealmspropertiesAdd","ServiceskerberosrealmspropertiesEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_kerberos_realms_propertiesrowData","services_kerberos_realms_properties","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","len","slice","style","display","updateStyle","closeAdd","services_kerberos_realms_propertiesheaderData","header","key","services_kerberos_realms_propertieshandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","tempId","name","properties","newItem","push","i2","toString","id","services","kerberos","realms","serviceskerberos_realms","Serviceskerberos_realmsEdit","props","row","toolbarName","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setservices_kerberos_realms_properties","_React$useState3","_React$useState4","fetchedservices_kerberos_realms_properties","setFetchedservices_kerberos_realms_properties","useEffect","services_kerberos_realms_propertiesloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","services_kerberos_realms_properties_name","services_kerberos_realms_properties_value","add","attrs","newId","wrap","_context","prev","next","services_kerberos_realms_propertiesediting","services_kerberos_realms_propertiesrowId","console","log","abrupt","stop","_x","_x2","_x3","apply","this","arguments","_useState","_useState2","services_kerberos_realms_name","setservices_kerberos_realms_name","updateservices_kerberos_realms_name","evt","target","_useState3","_useState4","services_kerberos_realms_kdc","setservices_kerberos_realms_kdc","updateservices_kerberos_realms_kdc","_useState5","_useState6","setservices_kerberos_realms_properties_name","updateservices_kerberos_realms_properties_name","_useState7","_useState8","services_kerberos_realms_properties_name_valid","setservices_kerberos_realms_properties_name_valid","_useState9","_useState10","services_kerberos_realms_properties_name_invalid_text","setservices_kerberos_realms_properties_name_invalid_text","_useState11","_useState12","setservices_kerberos_realms_properties_value","updateservices_kerberos_realms_properties_value","_useState13","_useState14","services_kerberos_realms_hostname","setservices_kerberos_realms_hostname","updateservices_kerberos_realms_hostname","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","setDataMain","functionName","editing","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","assign","editProps","editIcon","onClick","title","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_18__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_19__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","disabled","services_kerberos_realms_name_valid","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","obj","defineProperty","configurable","writable","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_extends","hasOwnProperty","isPrefixed","split","Icon","svgData","iconTitle","description","fill","fillRule","icon","role","iconRef","other","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","concat","viewBox","ref","svgContent","svgProp","circle","index","circleProps","cx","cy","r","path","d","polygon","points","propTypes","string","isRequired","shape","func","defaultProps","__webpack_exports__"],"mappings":"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","file":"static/js/233.d0a5ae0f.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServiceskerberosrealmspropertiesDeleteModal = lazy(() => import('./serviceskerberosrealmspropertiesDeleteModal'));\nconst ServiceskerberosrealmspropertiesAdd = lazy(() => import('./serviceskerberosrealmspropertiesAdd'));\nconst ServiceskerberosrealmspropertiesEdit = lazy(() => import('./serviceskerberosrealmspropertiesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_realms_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_name\"] = document.getElementById(\"services_kerberos_realms_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_kdc_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_kdc\"] = document.getElementById(\"services_kerberos_realms_kdc_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_hostname\"] = document.getElementById(\"services_kerberos_realms_hostname_id\" + idPrefix).value;\n    }\n    json[\"services_kerberos_realms_properties\"] = services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties;\n      \n    loadGrid( json[\"services_kerberos_realms_name\"], json[\"services_kerberos_realms_kdc\"], json[\"services_kerberos_realms_hostname\"], json[\"services_kerberos_realms_properties\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_kerberos_realms\")) {\n        var len = \"_kerberos_realms\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserviceskerberos_realmsPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_kerberos_realms\")) {\n        var len = \"_kerberos_realms\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserviceskerberos_realmsPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_realms_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_realms_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_kerberos_realms_propertiesheaderData = [\n    {\n    header: 'Name',\n    key: 'name',\n  },\n{\n    header: 'Value',\n    key: 'value',\n  },\n\n];\n\nconst services_kerberos_realms_propertiesrowData = {services_kerberos_realms_properties: []};\n\nconst services_kerberos_realms_propertieshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_kerberos_realms_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserviceskerberosrealms_propertiesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_kerberos_realms_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].name)?data[i].name:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].properties !== undefined ) {\n              if(typeof data[i].properties === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].properties;\n                newItem[\"name\"] = data[i].properties;\n                services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].properties.length; i2++) {\n                  data[i].properties[i2].name = data[i].properties[i2].name.toString();\n                  if(data[i].properties[i2].id === undefined) {\n                    var tempId = ((data[i].properties[i2].name)?data[i].properties[i2].name.toString():\"\");\n                    data[i].properties[i2].id = tempId;\n                  }\n                  services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.push(data[i].properties[i2]);\n                }\n              }\n              setData(\"setservices_kerberos_realms_properties\", services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.services !== undefined && json.services.kerberos !== undefined && json.services.kerberos.realms !== undefined ) {\n        for(var i = 0; i < json.services.kerberos.realms.length; i++) {\n          var tempId = ((json.serviceskerberos_realms[i].name)?json.serviceskerberos_realms[i].name:\"\");\n          if(tempId === window[oName + \"rowId\"]) {\n            if(json !== undefined && json.services !== undefined && json.services.kerberos !== undefined && json.services.kerberos.realms[i] !== undefined && json.services.kerberos.realms[i].properties !== undefined ) {\n              for(var i2 = 0; i2 < json.services.kerberos.realms[i].properties.length; i2++) {\n                json.services.kerberos.realms[i].properties[i2].name = json.services.kerberos.realms[i].properties[i2].name.toString();\n                if(json.services.kerberos.realms[i].properties[i2].id == undefined) {\n                  var tempId = ((json.services.kerberos.realms[i].properties[i2].name)?json.services.kerberos.realms[i].properties[i2].name.toString():\"\");\n                  json.services.kerberos.realms[i].properties[i2].id = tempId;\n                }\n\n                services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.push(json.services.kerberos.realms[i].properties[i2]);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\nconst Serviceskerberos_realmsEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [services_kerberos_realms_properties, setservices_kerberos_realms_properties] = React.useState([]);\n    const [fetchedservices_kerberos_realms_properties, setFetchedservices_kerberos_realms_properties] = React.useState(false);\n\n    React.useEffect(() => {\n      services_kerberos_realms_propertiesloadGrid();\n    }, [fetchedservices_kerberos_realms_properties]);\n\n    const services_kerberos_realms_propertiesloadGrid = React.useCallback(async (services_kerberos_realms_properties_name, services_kerberos_realms_properties_value, add) => {\n      try {\n        var attrs = [];\n        if(services_kerberos_realms_properties_name) {\n          if(add) {\n            for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n              var tempId = ((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name)?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name:\"\") + \"\";\n              if((window.services_kerberos_realms_propertiesediting != true && window.services_kerberos_realms_propertiesediting != \"true\") || tempId != window.services_kerberos_realms_propertiesrowId) {\n                attrs.push(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i]);\n              }\n            }\n            var newId = ((services_kerberos_realms_properties_name)?services_kerberos_realms_properties_name:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              name: services_kerberos_realms_properties_name,\nvalue: services_kerberos_realms_properties_value,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n              if(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name !== services_kerberos_realms_properties_name ) {\n                attrs.push(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties;\n        }\n        services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties = attrs;\n        const data = {services_kerberos_realms_properties: attrs};\n        setservices_kerberos_realms_properties(data.services_kerberos_realms_properties);\n\n        if(services_kerberos_realms_properties_name !== undefined && services_kerberos_realms_properties_name !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [services_kerberos_realms_name, setservices_kerberos_realms_name] = useState(''),\n    updateservices_kerberos_realms_name = useCallback((evt) => setservices_kerberos_realms_name(evt.target.value), []);\n\n    const [services_kerberos_realms_kdc, setservices_kerberos_realms_kdc] = useState(''),\n    updateservices_kerberos_realms_kdc = useCallback((evt) => setservices_kerberos_realms_kdc(evt.target.value), []);\n\n    const [services_kerberos_realms_properties_name, setservices_kerberos_realms_properties_name] = useState(''),\n    updateservices_kerberos_realms_properties_name = useCallback((evt) => setservices_kerberos_realms_properties_name(evt.target.value), []);\n    const [services_kerberos_realms_properties_name_valid, setservices_kerberos_realms_properties_name_valid] = useState(true);\n    const [services_kerberos_realms_properties_name_invalid_text, setservices_kerberos_realms_properties_name_invalid_text] = useState(\"\");\n\n\n    const [services_kerberos_realms_properties_value, setservices_kerberos_realms_properties_value] = useState(''),\n    updateservices_kerberos_realms_properties_value = useCallback((evt) => setservices_kerberos_realms_properties_value(evt.target.value), []);\n\n    const [services_kerberos_realms_hostname, setservices_kerberos_realms_hostname] = useState(''),\n    updateservices_kerberos_realms_hostname = useCallback((evt) => setservices_kerberos_realms_hostname(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n        if(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].id === window.services_kerberos_realms_propertiesrowId) {\n        setservices_kerberos_realms_properties_name((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i] !== undefined && services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name !== undefined )?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name:\"\");\n        setservices_kerberos_realms_properties_value((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i] !== undefined && services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].value !== undefined )?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].value:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserviceskerberos_realmsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"services_kerberos_realms_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"properties_tab\" + idPrefix}>Properties</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n  <h3>Realms</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_name}  id={\"services_kerberos_realms_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_kerberos_realms_name}/>\n          <ReactTooltip id={\"services_kerberos_realms_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the Kerberos Realm being configured.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_kdc}  id={\"services_kerberos_realms_kdc_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_kdc_tooltip_id\" + idPrefix}  labelText=\"KDC\" onChange={props.updateservices_kerberos_realms_kdc}/>\n          <ReactTooltip id={\"services_kerberos_realms_kdc_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or address of a host running a KDC for that realm. An optional port number, separated from the hostname by a colon, may be included.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_hostname}  id={\"services_kerberos_realms_hostname_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname\" onChange={props.updateservices_kerberos_realms_hostname}/>\n          <ReactTooltip id={\"services_kerberos_realms_hostname_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The hostname for this realm.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_name || !props.services_kerberos_realms_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"properties_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms : </span><br/>                  <h2>Properties Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_tooltip_id\" + idPrefix} >Properties</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_kerberos_realms_properties_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Advanced additional properties to be added to the Realm configuration. These properties correspond to the properties in the [realms] &lt;realm name&gt; section of krb5.conf.<br/></div></ReactTooltip>\n\n                <div id={\"services_kerberos_realms_propertiesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <DataTable id={\"services_kerberos_realms_propertiesTable\" + idPrefix} isSortable\n                        headers={services_kerberos_realms_propertiesheaderData}\n                        rows={services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_kerberos_realms_propertieshandleAdd(idPrefix, [setservices_kerberos_realms_properties_name(''),    setservices_kerberos_realms_properties_name_valid(true),    setservices_kerberos_realms_properties_value(''),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberosrealmspropertiesDeleteModal row={row} loadGrid={services_kerberos_realms_propertiesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberosrealmspropertiesEdit  data={services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties} setData={setDataMain} row={row} loadGrid={services_kerberos_realms_propertiesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_kerberos_realms_properties\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_name || !props.services_kerberos_realms_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberosrealmspropertiesAdd loadGrid={services_kerberos_realms_propertiesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberosrealmspropertiesEdit  loadGrid={services_kerberos_realms_propertiesloadGrid} dataLoad={dataLoad} name={\"services_kerberos_realms_properties\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Serviceskerberos_realmsEdit;\n","function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"]);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"sourceRoot":""}