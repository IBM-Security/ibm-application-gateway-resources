{"version":3,"sources":["content/serverPage/serversslfront_endsniAdd.js"],"names":["ServersslfrontEndsnicertificateDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServersslfrontEndsnicertificateAdd","ServersslfrontEndsnicertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","server_ssl_front_end_sni_certificaterowData","server_ssl_front_end_sni_certificate","handleClose","handleAdd","setserver_ssl_front_end_sni_certificate","doAdd","updateStyle","style","display","closeAdd","server_ssl_front_end_sni_certificateheaderData","header","key","server_ssl_front_end_sni_certificatehandleAdd","clearFields","i","length","eval","Serversslfront_end_sniAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_React$useState3","_React$useState4","fetchedserver_ssl_front_end_sni_certificate","setFetchedserver_ssl_front_end_sni_certificate","useEffect","server_ssl_front_end_sni_certificateloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","server_ssl_front_end_sni_certificate_certificate","add","attrs","tempId","newId","wrap","_context","prev","next","certificate","window","server_ssl_front_end_sni_certificateediting","server_ssl_front_end_sni_certificaterowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_useState","_useState2","setserver_ssl_front_end_sni_certificate_certificate","updateserver_ssl_front_end_sni_certificate_certificate","evt","target","validateField","setserver_ssl_front_end_sni_certificate_certificate_valid","setserver_ssl_front_end_sni_certificate_certificate_invalid_text","_useState3","_useState4","server_ssl_front_end_sni_certificate_certificate_valid","_useState5","_useState6","server_ssl_front_end_sni_certificate_certificate_invalid_text","_useState7","_useState8","server_ssl_front_end_sni_hostname","setserver_ssl_front_end_sni_hostname","updateserver_ssl_front_end_sni_hostname","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_17__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","invalid","server_ssl_front_end_sni_hostname_valid","invalidText","server_ssl_front_end_sni_hostname_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_18__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","onClick","disabled","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","setData","editing","name","parentIdPrefix"],"mappings":"s/EA2BMA,2CAA6CC,gDAAK,kBAAMC,QAAAC,IAAA,CAAAC,oBAAAC,EAAA,IAAAD,oBAAAC,EAAA,OAAAC,KAAAF,oBAAAG,KAAA,aACxDC,mCAAqCP,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAChDE,oCAAsCR,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAG/CG,aAAe,aAGfC,WAAa,SAACC,EAAUC,EAAUC,QAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,IAE2F,IAAnGC,SAASC,eAAe,uCAAyCL,GAAUM,MAAMC,SAAS,OAC3FJ,EAAI,kCAAwCC,SAASC,eAAe,uCAAyCL,GAAUM,OAEzHH,EAAI,qCAA2CK,4CAA4CC,qCAE3FV,EAAUI,EAAI,kCAAuCA,EAAI,sCAA0C,GAEnGO,YAAYV,EAAUC,IAGlBU,UAAY,SAACC,EAAyCZ,EAAUa,EAAOZ,QAC3DC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,wCAAwCC,MAAQ,GACxEE,4CAA4CC,qCAAuC,GACnFG,EAAwCJ,4CAA4CC,sCAGjFI,GACDA,IAGFH,YAAYV,EAAWC,IAGnBS,YAAc,SAACV,EAAUC,GAC7Ba,iDAAY,aAAed,EAAU,UAAW,SAChDI,SAASC,eAAe,gCAAkCL,GAAUe,MAAMC,QAAU,OAE/Ef,GACDA,KAIAgB,SAAW,SAACjB,QACEE,IAAbF,IAAwBA,EAAW,IAEtCc,iDAAY,+BAAiCd,EAAU,UAAW,SAClEI,SAASC,eAAe,+BAAiCL,GAAUe,MAAMC,QAAU,QAInFE,+CAAiD,CACnD,CACAC,OAAQ,cACRC,IAAK,gBAKHZ,4CAA8C,CAACC,qCAAsC,IAErFY,8CAAgD,SAAhDA,8CAAiDrB,SAAUsB,aAI7D,QAHgBpB,IAAbF,WAAwBA,SAAW,IAGnCsB,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBnB,SAASC,eAAe,sDAAwDL,UAAUM,MAAQ,GAElGQ,iDAAY,+BAAiCd,SAAU,UAAW,QAElEI,SAASC,eAAe,2CAA6CL,UAAUe,MAAMC,QAAU,QAE/FZ,SAASC,eAAe,+BAAiCL,UAAUe,MAAMC,QAAU,QAIjFU,0BAA4B,SAA5BA,0BAA6BC,OAE/B,IAAIC,IAAMD,MAAMC,IACV7B,SAAW4B,MAAM5B,SACjBE,QAAU0B,MAAM1B,QAChBD,SAAY2B,MAAM3B,SAAU2B,MAAM3B,SAAS,GALR6B,gBAO+CC,6CAAMC,SAAS,IAP9DC,iBAAAC,OAAAC,oKAAA,EAAAD,CAAAJ,gBAAA,GAOlCpB,qCAPkCuB,iBAAA,GAOIpB,wCAPJoB,iBAAA,GAAAG,iBAQ6DL,6CAAMC,UAAS,GAR5EK,iBAAAH,OAAAC,oKAAA,EAAAD,CAAAE,iBAAA,GAQlCE,4CARkCD,iBAAA,GAQWE,+CARXF,iBAAA,GAUzCN,6CAAMS,UAAU,WACdC,gDACC,CAACH,8CAEJ,IAAMG,6CAA+CV,6CAAMW,YAAN,eAAAC,EAAAT,OAAAU,uKAAA,EAAAV,CAAAW,8JAAAC,EAAAC,KAAkB,SAAAC,EAAOC,EAAkDC,GAAzD,IAAAC,EAAA3B,EAAA4B,EAAAC,EAAA,OAAAR,8JAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrE,IAEE,GADIN,EAAQ,GACTF,EACD,GAAGC,EAAK,CACN,IAAQ1B,EAAI,EAAGA,EAAIf,4CAA4CC,qCAAqCe,OAAQD,IACtG4B,GAAW3C,4CAA4CC,qCAAqCc,GAAGkC,YAAajD,4CAA4CC,qCAAqCc,GAAGkC,YAAY,IAAM,IAC5J,GAAtDC,OAAOC,6CAA6G,QAAtDD,OAAOC,6CAA0DR,GAAUO,OAAOE,4CAClJV,EAAMW,KAAKrD,4CAA4CC,qCAAqCc,IAG5F6B,GAAUJ,GAAmG,IAAM,GACvHE,EAAMW,KAAK,CACTC,GAAIV,EACJK,YAAaT,SAIf,IAAQzB,EAAI,EAAGA,EAAIf,4CAA4CC,qCAAqCe,OAAQD,IACvGf,4CAA4CC,qCAAqCc,GAAGkC,cAAgBT,GACrGE,EAAMW,KAAKrD,4CAA4CC,qCAAqCc,SAKlG2B,EAAQ1C,4CAA4CC,qCAEtDD,4CAA4CC,qCAAuCyC,EAEnFtC,wCADa,CAACH,qCAAsCyC,GACPzC,2CAEWP,IAArD8C,GAAuH,OAArDA,GACjEnD,eAIJ,MAAOL,GACPuE,QAAQC,IAAIxE,GArCuD,OAAA8D,EAAAW,OAAA,UAuC9D,GAvC8D,wBAAAX,EAAAY,SAAAnB,MAAlB,gBAAAoB,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,IAdZC,UA0DuEzC,oDAAS,IA1DhF0C,WAAAxC,OAAAC,oKAAA,EAAAD,CAAAuC,UAAA,GA0DlCxB,iDA1DkCyB,WAAA,GA0DgBC,oDA1DhBD,WAAA,GA2DzCE,uDAAyDlC,uDAAY,SAACmC,GACpEF,oDAAoDE,EAAIC,OAAOvE,OAC/D,IAAI6C,EAASyB,EAAIC,OAAOvE,MACxBwE,iDAActE,4CAA4CC,qCAAsCsE,0DAA2DC,iEAAkE,uCAAwC,cAAe7B,IACnR,IA/DsC8B,WAiEmFlD,qDAAS,GAjE5FmD,WAAAjD,OAAAC,oKAAA,EAAAD,CAAAgD,WAAA,GAiElCE,uDAjEkCD,WAAA,GAiEsBH,0DAjEtBG,WAAA,GAAAE,WAkEiGrD,oDAAS,IAlE1GsD,WAAApD,OAAAC,oKAAA,EAAAD,CAAAmD,WAAA,GAkElCE,8DAlEkCD,WAAA,GAkE6BL,iEAlE7BK,WAAA,GAAAE,WAqEyCxD,oDAAS,IArElDyD,WAAAvD,OAAAC,oKAAA,EAAAD,CAAAsD,WAAA,GAqElCE,kCArEkCD,WAAA,GAqECE,qCArEDF,WAAA,GAsEzCG,wCAA0ClD,uDAAY,SAACmC,GAAD,OAASc,qCAAqCd,EAAIC,OAAOvE,QAAQ,IAtE9EsF,iBAyEH9D,6CAAMC,UAAS,GAzEZ8D,iBAAA5D,OAAAC,oKAAA,EAAAD,CAAA2D,iBAAA,GAyElCE,YAzEkCD,iBAAA,GAyErBE,eAzEqBF,iBAAA,GA0EzC/D,6CAAMS,UAAU,WACdyD,YACC,CAACF,cACJ,IAAME,SAAW,WAEf,IAAI,IAAIzE,EAAI,EAAGA,EAAIf,4CAA4CC,qCAAqCe,OAAQD,IACvGf,4CAA4CC,qCAAqCc,GAAGuC,KAAOJ,OAAOE,2CACrGc,yDAA6IxE,IAAxFM,4CAA4CC,qCAAqCc,SAAwHrB,IAApGM,4CAA4CC,qCAAqCc,GAAGkC,YAA4BjD,4CAA4CC,qCAAqCc,GAAGkC,YAAY,IAK5W,OAAO,GAGHwC,YAAc,SAAdA,YAAeC,aAAcC,MAC9BD,cAAgBC,MACjB1E,KAAKyE,aAALzE,CAAmB0E,OAIvB,OACEC,2CAAAvD,EAAAwD,cAAA,WAEED,2CAAAvD,EAAAwD,cAAA,OAAKvC,GAAI,gCAAkC9D,SAAUe,MAAO,CAACC,QAAQ,QAASsF,UAAU,yBAEtFF,2CAAAvD,EAAAwD,cAACE,6CAAA,EAAD,CAAMzC,GAAK,+BAAiC9D,SAAUwG,WAAY,cAAgBxG,SAAUyG,UAAQ,EAACH,UAAU,gBAAgBvF,MAAO,CAAC2F,SAAS,SAC5IN,2CAAAvD,EAAAwD,cAACE,6CAAA,EAAD,KACEH,2CAAAvD,EAAAwD,cAACE,6CAAA,EAAD,CAAKI,OAAQ,cAAgB3G,UAA7B,WACAoG,2CAAAvD,EAAAwD,cAACE,6CAAA,EAAD,CAAKI,OAAQ,kBAAoB3G,UAAjC,gBAEFoG,2CAAAvD,EAAAwD,cAACE,6CAAA,EAAD,CAAUxF,MAAO,CAAC6F,MAAM,OAAQF,SAAS,QAASG,MAAO,cAAgB7G,UACvEoG,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAU,oBAAoBvF,MAAO,CAAC+F,OAAO,OAAQJ,SAAS,SACnEN,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6DAA+DtG,UAC9EoG,2CAAAvD,EAAAwD,cAAA,QAAMC,UAAU,kBAAhB,qCAAyEF,2CAAAvD,EAAAwD,cAAA,WAD3E,qBACkGD,2CAAAvD,EAAAwD,cAAA,8BAAyBD,2CAAAvD,EAAAwD,cAAA,WAD3H,iEAIAD,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAW,+CAAiDtG,UACjEoG,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6CAA+CtG,UAC9EoG,2CAAAvD,EAAAwD,cAAA,iBAAYD,2CAAAvD,EAAAwD,cAAA,YAEED,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAU,qBAAqBvF,MAAO,CAACgG,WAAW,OAAOC,aAAa,SAE3EZ,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6CAA+CtG,UACtEoG,2CAAAvD,EAAAwD,cAACY,qDAAA,EAAD,CAAYC,SAAUvF,MAAMwF,wCAA0CC,YAAazF,MAAM0F,+CAAiD/G,MAAOqB,MAAM8D,kCAAoC3B,GAAI,uCAAyC9D,SAAWsH,QAAS,SAAC9H,GAAD,OAAO+H,8CAAaC,KAAKhI,EAAEqF,SAAS4C,OAAQ,SAACjI,GAAD,OAAO+H,8CAAaG,KAAKlI,EAAEqF,SAAS8C,YAAA,EAASC,WAAU,+CAAiD5H,SAAW6H,UAAU,aAAaC,SAAUnG,MAAMgE,0CAClcS,2CAAAvD,EAAAwD,cAAC0B,4CAAA,EAAD,CAAcjE,GAAI,+CAAiD9D,SAAUgI,MAAM,MAAMC,OAAO,SAAS7B,2CAAAvD,EAAAwD,cAAA,OAAKtF,MAAO,CAAEmH,SAAU,MAAxB,2CAAuE9B,2CAAAvD,EAAAwD,cAAA,iBAOxKD,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6CAA+CtG,UAC9DoG,2CAAAvD,EAAAwD,cAAC8B,qDAAA,EAAD,CAAQC,QAAS,WAAQ1H,YAAYV,SAAWC,WAAhD,UACAmG,2CAAAvD,EAAAwD,cAAC8B,qDAAA,EAAD,CAAQE,UAAY1G,MAAM8D,oCAAsC9D,MAAMwF,wCAA0CiB,QAAS,WAAQtI,WAAWC,SAAUC,SAAWC,WAAjK,UAGNmG,2CAAAvD,EAAAwD,cAACE,6CAAA,EAAD,CAAUxF,MAAO,CAAC6F,MAAM,OAAQF,SAAS,QAASG,MAAO,kBAAoB7G,UAC3EoG,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAU,oBAAoBvF,MAAO,CAAC+F,OAAO,OAAQJ,SAAS,SACnEN,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6DAA+DtG,UAC9EoG,2CAAAvD,EAAAwD,cAAA,QAAMC,UAAU,kBAAhB,qCAAyEF,2CAAAvD,EAAAwD,cAAA,WAD3E,qBACkGD,2CAAAvD,EAAAwD,cAAA,kCAA6BD,2CAAAvD,EAAAwD,cAAA,YAE/HD,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAW,+CAAiDtG,UACjEoG,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6CAA+CtG,UAC9EoG,2CAAAvD,EAAAwD,cAAA,MAAIiC,SAAS,IAAKhB,QAAS,SAAC9H,GAAD,OAAO+H,8CAAaC,KAAKhI,EAAEqF,SAAS4C,OAAQ,SAACjI,GAAD,OAAO+H,8CAAaG,KAAKlI,EAAEqF,SAAS8C,YAAA,EAASC,WAAU,kDAAoD5H,UAAlL,eAA6MoG,2CAAAvD,EAAAwD,cAAA,YAErMD,2CAAAvD,EAAAwD,cAAC0B,4CAAA,EAAD,CAAcjE,GAAI,kDAAoD9D,SAAUgI,MAAM,MAAMC,OAAO,SAAS7B,2CAAAvD,EAAAwD,cAAA,OAAKtF,MAAO,CAAEmH,SAAU,MAAxB,6RAAyT9B,2CAAAvD,EAAAwD,cAAA,aAE/ZD,2CAAAvD,EAAAwD,cAAA,OAAKvC,GAAI,+CAAiD9D,SAAUe,MAAO,CAACgG,WAAW,OAAOC,aAAa,SACzGZ,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAW,6CAA+CtG,UAC7DoG,2CAAAvD,EAAAwD,cAACkC,qDAAA,EAAD,CAAWzE,GAAI,4CAA8C9D,SAAUwI,YAAU,EAC7EC,QAASvH,+CACTwH,KAAMlI,4CAA4CC,qCAClDkI,OAAQ,SAAAC,GAAA,IACNF,EADME,EACNF,KACAD,EAFMG,EAENH,QACAI,EAHMD,EAGNC,eAEAC,GALMF,EAING,YAJMH,EAKNE,eALMF,EAMNI,gBANMJ,EAONK,cAPML,EAQNM,uBARM,OAUV9C,2CAAAvD,EAAAwD,cAAC8C,qDAAA,EAAD,KACE/C,2CAAAvD,EAAAwD,cAAC+C,qDAAA,EAAD,CAAcC,aAAW,sBACvBjD,2CAAAvD,EAAAwD,cAACiD,qDAAA,EAAD,KACElD,2CAAAvD,EAAAwD,cAAC8B,qDAAA,EAAD,CAAQC,QAAS,WAAO/G,8CAA8CrB,SAAU,CAAC0E,oDAAoD,IAAQK,2DAA0D,OAAvM,SAGJqB,2CAAAvD,EAAAwD,cAACkD,sDAAA,EAADtH,OAAAuH,OAAA,CAAOC,KAAK,UAAaX,KACvB1C,2CAAAvD,EAAAwD,cAACqD,sDAAA,EAAD,KACEtD,2CAAAvD,EAAAwD,cAACsD,sDAAA,EAAD,KACGlB,EAAQmB,IAAI,SAAAzI,GAAM,OACjBiF,2CAAAvD,EAAAwD,cAACwD,sDAAA,EAAgBhB,EAAe,CAAE1H,WAC/BA,EAAOA,UAGZiF,2CAAAvD,EAAAwD,cAACwD,sDAAA,EAAD,kBAKJzD,2CAAAvD,EAAAwD,cAACyD,sDAAA,EAAD,KACGpB,EAAKkB,IAAI,SAAAhI,GAAG,OACXwE,2CAAAvD,EAAAwD,cAACsD,sDAAA,EAAD,CAAUvI,IAAKQ,EAAIkC,IAChBlC,EAAImI,MAAMH,IAAI,SAAAI,GAAI,OACjB5D,2CAAAvD,EAAAwD,cAAC4D,sDAAA,EAAD,CAAW7I,IAAK4I,EAAKlG,IAAKkG,EAAK1J,SAEjC8F,2CAAAvD,EAAAwD,cAAC4D,sDAAA,EAAD,KACE7D,2CAAAvD,EAAAwD,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAvD,EAAAwD,cAAA,aAClBD,2CAAAvD,EAAAwD,cAAClH,2CAAD,CAA4CyC,IAAKA,EAAK7B,SAAUyC,gDAElE4D,2CAAAvD,EAAAwD,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAvD,EAAAwD,cAAA,aAClBD,2CAAAvD,EAAAwD,cAACzG,oCAAD,CAAsCuG,KAAM3F,4CAA4CC,qCAAsC2J,QAASnE,YAAarE,IAAKA,EAAK7B,SAAUyC,6CAA8CwD,SAAUA,SAAUqE,SAAS,EAAMC,KAAM,uCAAwCtK,SAAUA,SAAW,OAAQuK,eAAgBvK,SAC5W2E,uDAAwDA,uDAAwD3B,iDAAkDA,iDAClKmC,uDAAwDA,uDACxDG,8DAA+DA,+EAezDc,2CAAAvD,EAAAwD,cAAA,OAAKC,UAAY,6CAA+CtG,UAC9DoG,2CAAAvD,EAAAwD,cAAC8B,qDAAA,EAAD,CAAQC,QAAS,WAAQ1H,YAAYV,SAAWC,WAAhD,UACAmG,2CAAAvD,EAAAwD,cAAC8B,qDAAA,EAAD,CAAQE,UAAY1G,MAAM8D,oCAAsC9D,MAAMwF,wCAA0CiB,QAAS,WAAQtI,WAAWC,SAAUC,SAAWC,WAAjK,WAIFmG,2CAAAvD,EAAAwD,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAvD,EAAAwD,cAAA,aAClBD,2CAAAvD,EAAAwD,cAAC1G,mCAAD,CAAoCI,SAAUyC,6CAA8CvC,QAAS,WAAOgB,SAASjB,WAAaA,SAAUA,SACpJ2E,uDAAwDA,uDAAwD3B,iDAAkDA,iDAClKmC,uDAAwDA,uDACxDG,8DAA+DA,iEAGzDc,2CAAAvD,EAAAwD,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAvD,EAAAwD,cAAA,aAClBD,2CAAAvD,EAAAwD,cAACzG,oCAAD,CAAsCG,SAAUyC,6CAA8CwD,SAAUA,SAAUsE,KAAM,uCAAwCtK,SAAUA,SAAW,OAAQuK,eAAgBvK,SACrN2E,uDAAwDA,uDAAwD3B,iDAAkDA,iDAClKmC,uDAAwDA,uDACxDG,8DAA+DA,oEAQ5D5D","file":"static/js/308.af932b17.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServersslfrontEndsnicertificateDeleteModal = lazy(() => import('./serversslfront_endsnicertificateDeleteModal'));\nconst ServersslfrontEndsnicertificateAdd = lazy(() => import('./serversslfront_endsnicertificateAdd'));\nconst ServersslfrontEndsnicertificateEdit = lazy(() => import('./serversslfront_endsnicertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_ssl_front_end_sni_hostname\"] = document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value;\n    }\n    json[\"server_ssl_front_end_sni_certificate\"] = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n      \n    loadGrid( json[\"server_ssl_front_end_sni_hostname\"], json[\"server_ssl_front_end_sni_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setserver_ssl_front_end_sni_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_ssl_front_end_sni_hostname_id\").value = \"\";\n    server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = []\n    setserver_ssl_front_end_sni_certificate(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversslfront_end_sniPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst server_ssl_front_end_sni_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst server_ssl_front_end_sni_certificaterowData = {server_ssl_front_end_sni_certificate: []};\n\nconst server_ssl_front_end_sni_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"server_ssl_front_end_sni_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversslfront_endsni_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serversslfront_end_sniAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate] = React.useState([]);\n    const [fetchedserver_ssl_front_end_sni_certificate, setFetchedserver_ssl_front_end_sni_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      server_ssl_front_end_sni_certificateloadGrid();\n    }, [fetchedserver_ssl_front_end_sni_certificate]);\n\n    const server_ssl_front_end_sni_certificateloadGrid = React.useCallback(async (server_ssl_front_end_sni_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(server_ssl_front_end_sni_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              var tempId = ((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate)?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\") + \"\";\n              if((window.server_ssl_front_end_sni_certificateediting != true && window.server_ssl_front_end_sni_certificateediting != \"true\") || tempId != window.server_ssl_front_end_sni_certificaterowId) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n            var newId = ((server_ssl_front_end_sni_certificate_certificate)?server_ssl_front_end_sni_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: server_ssl_front_end_sni_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== server_ssl_front_end_sni_certificate_certificate ) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n        }\n        server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = attrs;\n        const data = {server_ssl_front_end_sni_certificate: attrs};\n        setserver_ssl_front_end_sni_certificate(data.server_ssl_front_end_sni_certificate);\n\n        if(server_ssl_front_end_sni_certificate_certificate !== undefined && server_ssl_front_end_sni_certificate_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [server_ssl_front_end_sni_certificate_certificate, setserver_ssl_front_end_sni_certificate_certificate] = useState(''),\n    updateserver_ssl_front_end_sni_certificate_certificate = useCallback((evt) => {\n      setserver_ssl_front_end_sni_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_invalid_text, \"Server Ssl Front End Sni Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [server_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_valid] = useState(true);\n    const [server_ssl_front_end_sni_certificate_certificate_invalid_text, setserver_ssl_front_end_sni_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [server_ssl_front_end_sni_hostname, setserver_ssl_front_end_sni_hostname] = useState(''),\n    updateserver_ssl_front_end_sni_hostname = useCallback((evt) => setserver_ssl_front_end_sni_hostname(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n        if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].id === window.server_ssl_front_end_sni_certificaterowId) {\n        setserver_ssl_front_end_sni_certificate_certificate((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i] !== undefined && server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== undefined )?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversslfront_end_sniPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_ssl_front_end_sni_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"certificate_tab\" + idPrefix}>Certificate</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3>SNI</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_ssl_front_end_sni_hostname_valid}  invalidText={props.server_ssl_front_end_sni_hostname_invalid_text}  value={props.server_ssl_front_end_sni_hostname}  id={\"server_ssl_front_end_sni_hostname_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname *\" onChange={props.updateserver_ssl_front_end_sni_hostname}/>\n          <ReactTooltip id={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the host for this SNI entry.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"certificate_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>Certificate Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>PEM based personal certificate files which will be used when communicating with clients which indicate this host. These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"server_ssl_front_end_sni_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <DataTable id={\"server_ssl_front_end_sni_certificateTable\" + idPrefix} isSortable\n                        headers={server_ssl_front_end_sni_certificateheaderData}\n                        rows={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {server_ssl_front_end_sni_certificatehandleAdd(idPrefix, [setserver_ssl_front_end_sni_certificate_certificate(''),    setserver_ssl_front_end_sni_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateDeleteModal row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateEdit  data={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate} setData={setDataMain} row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateAdd loadGrid={server_ssl_front_end_sni_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateEdit  loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serversslfront_end_sniAdd;\n"],"sourceRoot":""}