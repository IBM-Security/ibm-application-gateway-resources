{"version":3,"sources":["content/resource_serversPage/forms_loginlogin_resourcesfieldsAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Forms_loginlogin_resources_fieldsAdd","props","row","_useState","useState","_useState2","_slicedToArray","resource_servers_forms_login_login_resources_fields_name","setresource_servers_forms_login_login_resources_fields_name","updateresource_servers_forms_login_login_resources_fields_name","useCallback","evt","target","_useState3","_useState4","resource_servers_forms_login_login_resources_fields_source","setresource_servers_forms_login_login_resources_fields_source","updateresource_servers_forms_login_login_resources_fields_source","_useState5","_useState6","resource_servers_forms_login_login_resources_fields_value","setresource_servers_forms_login_login_resources_fields_value","updateresource_servers_forms_login_login_resources_fields_value","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","resource_servers_forms_login_login_resources_fields_name_valid","invalidText","resource_servers_forms_login_login_resources_fields_name_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Select","SelectItem","text","Button","onClick","disabled"],"mappings":"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","file":"static/js/9.463fbd2c.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_forms_login_login_resources_fields_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_forms_login_login_resources_fields_name\"] = document.getElementById(\"resource_servers_forms_login_login_resources_fields_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_forms_login_login_resources_fields_source_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_forms_login_login_resources_fields_source\"] = document.getElementById(\"resource_servers_forms_login_login_resources_fields_source_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_forms_login_login_resources_fields_value_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_forms_login_login_resources_fields_value\"] = document.getElementById(\"resource_servers_forms_login_login_resources_fields_value_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"resource_servers_forms_login_login_resources_fields_name\"], json[\"resource_servers_forms_login_login_resources_fields_source\"], json[\"resource_servers_forms_login_login_resources_fields_value\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_forms_login_login_resources_fields_name_id\").value = \"\";\n    document.getElementById(\"resource_servers_forms_login_login_resources_fields_source_id\").value = \"\";\n    document.getElementById(\"resource_servers_forms_login_login_resources_fields_value_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"fields_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addforms_loginlogin_resources_fieldsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_forms_login_login_resources_fields_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_forms_login_login_resources_fields_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Forms_loginlogin_resources_fieldsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [resource_servers_forms_login_login_resources_fields_name, setresource_servers_forms_login_login_resources_fields_name] = useState(''),\n    updateresource_servers_forms_login_login_resources_fields_name = useCallback((evt) => setresource_servers_forms_login_login_resources_fields_name(evt.target.value), []);\n\n    const [resource_servers_forms_login_login_resources_fields_source, setresource_servers_forms_login_login_resources_fields_source] = useState(''),\n    updateresource_servers_forms_login_login_resources_fields_source = useCallback((evt) => setresource_servers_forms_login_login_resources_fields_source(evt.target.value), []);\n\n    const [resource_servers_forms_login_login_resources_fields_value, setresource_servers_forms_login_login_resources_fields_value] = useState(''),\n    updateresource_servers_forms_login_login_resources_fields_value = useCallback((evt) => setresource_servers_forms_login_login_resources_fields_value(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addforms_loginlogin_resources_fieldsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_forms_login_login_resources_fields_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Forms Login / Login Resources / Fields : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n  <h3>Fields</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_forms_login_login_resources_fields_name_valid}  invalidText={props.resource_servers_forms_login_login_resources_fields_name_invalid_text}  value={props.resource_servers_forms_login_login_resources_fields_name}  id={\"resource_servers_forms_login_login_resources_fields_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_forms_login_login_resources_fields_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateresource_servers_forms_login_login_resources_fields_name}/>\n          <ReactTooltip id={\"resource_servers_forms_login_login_resources_fields_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the form field that will be populated.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n                <Select\n                  value={props.resource_servers_forms_login_login_resources_fields_source}\n                   id={\"resource_servers_forms_login_login_resources_fields_source_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_forms_login_login_resources_fields_source_tooltip_id\" + idPrefix}                   labelText=\"Source\"\n                  onChange={props.updateresource_servers_forms_login_login_resources_fields_source}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"static\" value=\"static\" />\n                  <SelectItem text=\"attribute\" value=\"attribute\" />\n                  <SelectItem text=\"service\" value=\"service\" />\n                </Select>\n          <ReactTooltip id={\"resource_servers_forms_login_login_resources_fields_source_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The data source which will be used to populate this form field.<br/>See the  Login Form Field Types table  for an explanation of the values.<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_forms_login_login_resources_fields_value}  id={\"resource_servers_forms_login_login_resources_fields_value_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_forms_login_login_resources_fields_value_tooltip_id\" + idPrefix}  labelText=\"Value\" onChange={props.updateresource_servers_forms_login_login_resources_fields_value}/>\n          <ReactTooltip id={\"resource_servers_forms_login_login_resources_fields_value_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This entry defines what information for the given source will be used to populate this form field.<br/>See the  Login Form Field Values table for an explanation of the values.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_forms_login_login_resources_fields_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_forms_login_login_resources_fields_name || !props.resource_servers_forms_login_login_resources_fields_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Forms_loginlogin_resources_fieldsAdd;\n"],"sourceRoot":""}