{"version":3,"sources":["content/policiesPage/policiesrate_limitingAdd.js"],"names":["PoliciesrateLimitingmethodsDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","PoliciesrateLimitingmethodsAdd","PoliciesrateLimitingmethodsEdit","PoliciesrateLimitingpathsDeleteModal","PoliciesrateLimitingpathsAdd","PoliciesrateLimitingpathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","policies_rate_limiting_methodsrowData","policies_rate_limiting_methods","policies_rate_limiting_pathsrowData","policies_rate_limiting_paths","handleClose","handleAdd","setpolicies_rate_limiting_methods","setpolicies_rate_limiting_paths","doAdd","updateStyle","style","display","closeAdd","policies_rate_limiting_methodsheaderData","header","key","policies_rate_limiting_methodshandleAdd","clearFields","i","length","eval","policies_rate_limiting_pathsheaderData","policies_rate_limiting_pathshandleAdd","Policies_rate_limitingAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_React$useState3","_React$useState4","fetchedpolicies_rate_limiting_methods","setFetchedpolicies_rate_limiting_methods","useEffect","policies_rate_limiting_methodsloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","policies_rate_limiting_methods_methods","add","attrs","tempId","newId","wrap","_context","prev","next","methods","window","policies_rate_limiting_methodsediting","policies_rate_limiting_methodsrowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedpolicies_rate_limiting_paths","setFetchedpolicies_rate_limiting_paths","policies_rate_limiting_pathsloadGrid","_ref2","_callee2","policies_rate_limiting_paths_paths","_context2","paths","policies_rate_limiting_pathsediting","policies_rate_limiting_pathsrowId","_x3","_x4","_useState","_useState2","policies_rate_limiting_name","setpolicies_rate_limiting_name","updatepolicies_rate_limiting_name","evt","target","_useState3","_useState4","setpolicies_rate_limiting_methods_methods","updatepolicies_rate_limiting_methods_methods","validateField","setpolicies_rate_limiting_methods_methods_valid","setpolicies_rate_limiting_methods_methods_invalid_text","_useState5","_useState6","policies_rate_limiting_methods_methods_valid","_useState7","_useState8","policies_rate_limiting_methods_methods_invalid_text","_useState9","_useState10","setpolicies_rate_limiting_paths_paths","updatepolicies_rate_limiting_paths_paths","setpolicies_rate_limiting_paths_paths_valid","setpolicies_rate_limiting_paths_paths_invalid_text","_useState11","_useState12","policies_rate_limiting_paths_paths_valid","_useState13","_useState14","policies_rate_limiting_paths_paths_invalid_text","_useState15","_useState16","policies_rate_limiting_rule","setpolicies_rate_limiting_rule","updatepolicies_rate_limiting_rule","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_17__","defaultTab","vertical","overflow","tabFor","width","tabId","height","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","invalid","policies_rate_limiting_name_valid","invalidText","policies_rate_limiting_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_18__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","onClick","disabled","tabIndex","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","setData","editing","name","parentIdPrefix","_ref4"],"mappings":"s/EA2BMA,uCAAyCC,gDAAK,kBAAMC,QAAAC,IAAA,CAAAC,oBAAAC,EAAA,IAAAD,oBAAAC,EAAA,OAAAC,KAAAF,oBAAAG,KAAA,aACpDC,+BAAiCP,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAC5CE,gCAAkCR,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAC7CG,qCAAuCT,gDAAK,kBAAMC,QAAAC,IAAA,CAAAC,oBAAAC,EAAA,IAAAD,oBAAAC,EAAA,OAAAC,KAAAF,oBAAAG,KAAA,aAClDI,6BAA+BV,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAC1CK,8BAAgCX,gDAAK,kBAAMG,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAGzCM,aAAe,aAGfC,WAAa,SAACC,EAAUC,EAAUC,QAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,IAEqF,IAA7FC,SAASC,eAAe,iCAAmCL,GAAUM,MAAMC,SAAS,OACrFJ,EAAI,4BAAkCC,SAASC,eAAe,iCAAmCL,GAAUM,QAEb,IAA7FF,SAASC,eAAe,iCAAmCL,GAAUM,MAAMC,SAAS,OACrFJ,EAAI,4BAAkCC,SAASC,eAAe,iCAAmCL,GAAUM,OAE7GH,EAAI,+BAAqCK,sCAAsCC,+BAC/EN,EAAI,6BAAmCO,oCAAoCC,6BAE3EZ,EAAUI,EAAI,4BAAiCA,EAAI,4BAAiCA,EAAI,+BAAoCA,EAAI,8BAAkC,GAElKS,YAAYZ,EAAUC,IAGlBY,UAAY,SAACC,EAAmCC,EAAiCf,EAAUgB,EAAOf,QACtFC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,kCAAkCC,MAAQ,GAClEF,SAASC,eAAe,kCAAkCC,MAAQ,GAClEE,sCAAsCC,+BAAiC,GACvEK,EAAkCN,sCAAsCC,gCAExEC,oCAAoCC,6BAA+B,GACnEI,EAAgCL,oCAAoCC,8BAGjEK,GACDA,IAGFJ,YAAYZ,EAAWC,IAGnBW,YAAc,SAACZ,EAAUC,GAC7BgB,iDAAY,eAAiBjB,EAAU,UAAW,SAClDI,SAASC,eAAe,gCAAkCL,GAAUkB,MAAMC,QAAU,OAE/ElB,GACDA,KAIAmB,SAAW,SAACpB,QACEE,IAAbF,IAAwBA,EAAW,IAEtCiB,iDAAY,6BAA+BjB,EAAU,UAAW,SAChEI,SAASC,eAAe,6BAA+BL,GAAUkB,MAAMC,QAAU,QAIjFE,yCAA2C,CAC7C,CACAC,OAAQ,SACRC,IAAK,YAKHf,sCAAwC,CAACC,+BAAgC,IAEzEe,wCAA0C,SAA1CA,wCAA2CxB,SAAUyB,aAIvD,QAHgBvB,IAAbF,WAAwBA,SAAW,IAGnCyB,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBtB,SAASC,eAAe,4CAA8CL,UAAUM,MAAQ,GAExFW,iDAAY,6BAA+BjB,SAAU,UAAW,QAEhEI,SAASC,eAAe,uCAAyCL,UAAUkB,MAAMC,QAAU,QAE3Ff,SAASC,eAAe,6BAA+BL,UAAUkB,MAAMC,QAAU,QAG/EU,uCAAyC,CAC3C,CACAP,OAAQ,OACRC,IAAK,UAKHb,oCAAsC,CAACC,6BAA8B,IAErEmB,sCAAwC,SAAxCA,sCAAyC9B,SAAUyB,aAIrD,QAHgBvB,IAAbF,WAAwBA,SAAW,IAGnCyB,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBtB,SAASC,eAAe,wCAA0CL,UAAUM,MAAQ,GAEpFW,iDAAY,6BAA+BjB,SAAU,UAAW,QAEhEI,SAASC,eAAe,qCAAuCL,UAAUkB,MAAMC,QAAU,QAEzFf,SAASC,eAAe,6BAA+BL,UAAUkB,MAAMC,QAAU,QAI/EY,0BAA4B,SAA5BA,0BAA6BC,OAE/B,IAAIC,IAAMD,MAAMC,IACVlC,SAAWiC,MAAMjC,SACjBE,QAAU+B,MAAM/B,QAChBD,SAAYgC,MAAMhC,SAAUgC,MAAMhC,SAAS,GALRkC,gBAOmCC,6CAAMC,SAAS,IAPlDC,iBAAAC,OAAAC,oKAAA,EAAAD,CAAAJ,gBAAA,GAOlCzB,+BAPkC4B,iBAAA,GAOFvB,kCAPEuB,iBAAA,GAAAG,iBAQiDL,6CAAMC,UAAS,GARhEK,iBAAAH,OAAAC,oKAAA,EAAAD,CAAAE,iBAAA,GAQlCE,sCARkCD,iBAAA,GAQKE,yCARLF,iBAAA,GAUzCN,6CAAMS,UAAU,WACdC,0CACC,CAACH,wCAEJ,IAAMG,uCAAyCV,6CAAMW,YAAN,eAAAC,EAAAT,OAAAU,uKAAA,EAAAV,CAAAW,8JAAAC,EAAAC,KAAkB,SAAAC,EAAOC,EAAwCC,GAA/C,IAAAC,EAAA7B,EAAA8B,EAAAC,EAAA,OAAAR,8JAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC/D,IAEE,GADIN,EAAQ,GACTF,EACD,GAAGC,EAAK,CACN,IAAQ5B,EAAI,EAAGA,EAAIlB,sCAAsCC,+BAA+BkB,OAAQD,IAC1F8B,GAAWhD,sCAAsCC,+BAA+BiB,GAAGoC,QAAStD,sCAAsCC,+BAA+BiB,GAAGoC,QAAQ,IAAM,IAClI,GAAhDC,OAAOC,uCAAiG,QAAhDD,OAAOC,uCAAoDR,GAAUO,OAAOE,sCACtIV,EAAMW,KAAK1D,sCAAsCC,+BAA+BiB,IAGhF+B,GAAUJ,GAA+E,IAAM,GACnGE,EAAMW,KAAK,CACTC,GAAIV,EACJK,QAAST,SAIX,IAAQ3B,EAAI,EAAGA,EAAIlB,sCAAsCC,+BAA+BkB,OAAQD,IAC3FlB,sCAAsCC,+BAA+BiB,GAAGoC,UAAYT,GACrFE,EAAMW,KAAK1D,sCAAsCC,+BAA+BiB,SAKtF6B,EAAQ/C,sCAAsCC,+BAEhDD,sCAAsCC,+BAAiC8C,EAEvEzC,kCADa,CAACL,+BAAgC8C,GACP9C,qCAEOP,IAA3CmD,GAAmG,OAA3CA,GACvDxD,eAIJ,MAAOR,GACP+E,QAAQC,IAAIhF,GArCiD,OAAAsE,EAAAW,OAAA,UAuCxD,GAvCwD,wBAAAX,EAAAY,SAAAnB,MAAlB,gBAAAoB,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,IAdNC,iBAwD+B1C,6CAAMC,SAAS,IAxD9C0C,iBAAAxC,OAAAC,oKAAA,EAAAD,CAAAuC,iBAAA,GAwDlClE,6BAxDkCmE,iBAAA,GAwDJ/D,gCAxDI+D,iBAAA,GAAAC,iBAyD6C5C,6CAAMC,UAAS,GAzD5D4C,iBAAA1C,OAAAC,oKAAA,EAAAD,CAAAyC,iBAAA,GAyDlCE,oCAzDkCD,iBAAA,GAyDGE,uCAzDHF,iBAAA,GA2DzC7C,6CAAMS,UAAU,WACduC,wCACC,CAACF,sCAEJ,IAAME,qCAAuChD,6CAAMW,YAAN,eAAAsC,EAAA9C,OAAAU,uKAAA,EAAAV,CAAAW,8JAAAC,EAAAC,KAAkB,SAAAkC,EAAOC,EAAoChC,GAA3C,IAAAC,EAAA7B,EAAA8B,EAAAC,EAAA,OAAAR,8JAAAC,EAAAQ,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAC7D,IAEE,GADIN,EAAQ,GACT+B,EACD,GAAGhC,EAAK,CACN,IAAQ5B,EAAI,EAAGA,EAAIhB,oCAAoCC,6BAA6BgB,OAAQD,IACtF8B,GAAW9C,oCAAoCC,6BAA6Be,GAAG8D,MAAO9E,oCAAoCC,6BAA6Be,GAAG8D,MAAM,IAAM,IACxH,GAA9CzB,OAAO0B,qCAA6F,QAA9C1B,OAAO0B,qCAAkDjC,GAAUO,OAAO2B,oCAClInC,EAAMW,KAAKxD,oCAAoCC,6BAA6Be,IAG5E+B,GAAU6B,GAAuE,IAAM,GAC3F/B,EAAMW,KAAK,CACTC,GAAIV,EACJ+B,MAAOF,SAIT,IAAQ5D,EAAI,EAAGA,EAAIhB,oCAAoCC,6BAA6BgB,OAAQD,IACvFhB,oCAAoCC,6BAA6Be,GAAG8D,QAAUF,GAC/E/B,EAAMW,KAAKxD,oCAAoCC,6BAA6Be,SAKlF6B,EAAQ7C,oCAAoCC,6BAE9CD,oCAAoCC,6BAA+B4C,EAEnExC,gCADa,CAACJ,6BAA8B4C,GACP5C,mCAEKT,IAAvCoF,GAA2F,OAAvCA,GACnDzF,eAIJ,MAAOR,GACP+E,QAAQC,IAAIhF,GArC+C,OAAAkG,EAAAjB,OAAA,UAuCtD,GAvCsD,wBAAAiB,EAAAhB,SAAAc,MAAlB,gBAAAM,EAAAC,GAAA,OAAAR,EAAAV,MAAAC,KAAAC,YAAA,IA/DJiB,UA2G6BzD,oDAAS,IA3GtC0D,WAAAxD,OAAAC,oKAAA,EAAAD,CAAAuD,UAAA,GA2GlCE,4BA3GkCD,WAAA,GA2GLE,+BA3GKF,WAAA,GA4GzCG,kCAAoCnD,uDAAY,SAACoD,GAAD,OAASF,+BAA+BE,EAAIC,OAAO7F,QAAQ,IA5GlE8F,WA8GmDhE,oDAAS,IA9G5DiE,WAAA/D,OAAAC,oKAAA,EAAAD,CAAA8D,WAAA,GA8GlC/C,uCA9GkCgD,WAAA,GA8GMC,0CA9GND,WAAA,GA+GzCE,6CAA+CzD,uDAAY,SAACoD,GAC1DI,0CAA0CJ,EAAIC,OAAO7F,OACrD,IAAIkD,EAAS0C,EAAIC,OAAO7F,MACxBkG,iDAAchG,sCAAsCC,+BAAgCgG,gDAAiDC,uDAAwD,iCAAkC,UAAWlD,IACzO,IAnHsCmD,WAqH+DvE,qDAAS,GArHxEwE,WAAAtE,OAAAC,oKAAA,EAAAD,CAAAqE,WAAA,GAqHlCE,6CArHkCD,WAAA,GAqHYH,gDArHZG,WAAA,GAAAE,WAsH6E1E,oDAAS,IAtHtF2E,WAAAzE,OAAAC,oKAAA,EAAAD,CAAAwE,WAAA,GAsHlCE,oDAtHkCD,WAAA,GAsHmBL,uDAtHnBK,WAAA,GAAAE,WAyH2C7E,oDAAS,IAzHpD8E,YAAA5E,OAAAC,oKAAA,EAAAD,CAAA2E,WAAA,GAyHlC3B,mCAzHkC4B,YAAA,GAyHEC,sCAzHFD,YAAA,GA0HzCE,yCAA2CtE,uDAAY,SAACoD,GACtDiB,sCAAsCjB,EAAIC,OAAO7F,OACjD,IAAIkD,EAAS0C,EAAIC,OAAO7F,MACxBkG,iDAAc9F,oCAAoCC,6BAA8B0G,4CAA6CC,mDAAoD,+BAAgC,QAAS9D,IACzN,IA9HsC+D,YAgIuDnF,qDAAS,GAhIhEoF,YAAAlF,OAAAC,oKAAA,EAAAD,CAAAiF,YAAA,GAgIlCE,yCAhIkCD,YAAA,GAgIQH,4CAhIRG,YAAA,GAAAE,YAiIqEtF,oDAAS,IAjI9EuF,YAAArF,OAAAC,oKAAA,EAAAD,CAAAoF,YAAA,GAiIlCE,gDAjIkCD,YAAA,GAiIeL,mDAjIfK,YAAA,GAAAE,YAoI6BzF,oDAAS,IApItC0F,YAAAxF,OAAAC,oKAAA,EAAAD,CAAAuF,YAAA,GAoIlCE,4BApIkCD,YAAA,GAoILE,+BApIKF,YAAA,GAqIzCG,kCAAoCnF,uDAAY,SAACoD,GAAD,OAAS8B,+BAA+B9B,EAAIC,OAAO7F,QAAQ,IArIlE4H,iBAwIH/F,6CAAMC,UAAS,GAxIZ+F,kBAAA7F,OAAAC,oKAAA,EAAAD,CAAA4F,iBAAA,GAwIlCE,YAxIkCD,kBAAA,GAwIrBE,eAxIqBF,kBAAA,GAyIzChG,6CAAMS,UAAU,WACd0F,YACC,CAACF,cACJ,IAAME,SAAW,WAEf,IAAI,IAAI5G,EAAI,EAAGA,EAAIlB,sCAAsCC,+BAA+BkB,OAAQD,IAC3FlB,sCAAsCC,+BAA+BiB,GAAGyC,KAAOJ,OAAOE,qCACzFqC,+CAAuHpG,IAA5EM,sCAAsCC,+BAA+BiB,SAAwGxB,IAApFM,sCAAsCC,+BAA+BiB,GAAGoC,QAAwBtD,sCAAsCC,+BAA+BiB,GAAGoC,QAAQ,IAItT,IAAQpC,EAAI,EAAGA,EAAIhB,oCAAoCC,6BAA6BgB,OAAQD,IACvFhB,oCAAoCC,6BAA6Be,GAAGyC,KAAOJ,OAAO2B,mCACrFyB,2CAA+GjH,IAAxEQ,oCAAoCC,6BAA6Be,SAAkGxB,IAA9EQ,oCAAoCC,6BAA6Be,GAAG8D,MAAsB9E,oCAAoCC,6BAA6Be,GAAG8D,MAAM,IAKlS,OAAO,GAGH+C,YAAc,SAAdA,YAAeC,aAAcC,MAC9BD,cAAgBC,MACjB7G,KAAK4G,aAAL5G,CAAmB6G,OAIvB,OACEC,2CAAAxF,EAAAyF,cAAA,WAEED,2CAAAxF,EAAAyF,cAAA,OAAKxE,GAAI,gCAAkCnE,SAAUkB,MAAO,CAACC,QAAQ,QAASyH,UAAU,yBAEtFF,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAM1E,GAAK,6BAA+BnE,SAAU8I,WAAY,cAAgB9I,SAAU+I,UAAQ,EAACH,UAAU,gBAAgB1H,MAAO,CAAC8H,SAAS,SAC1IN,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,KACEH,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAKI,OAAQ,cAAgBjJ,UAA7B,WACA0I,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAKI,OAAQ,cAAgBjJ,UAA7B,WACA0I,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAKI,OAAQ,YAAcjJ,UAA3B,UAEF0I,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAU3H,MAAO,CAACgI,MAAM,OAAQF,SAAS,QAASG,MAAO,cAAgBnJ,UACvE0I,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAU,oBAAoB1H,MAAO,CAACkI,OAAO,OAAQJ,SAAS,SACnEN,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2DAA6D5I,UAC5E0I,2CAAAxF,EAAAyF,cAAA,QAAMC,UAAU,kBAAhB,+BAAmEF,2CAAAxF,EAAAyF,cAAA,WADrE,qBAC4FD,2CAAAxF,EAAAyF,cAAA,8BAAyBD,2CAAAxF,EAAAyF,cAAA,WADrH,iEAIAD,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAW,6CAA+C5I,UAC/D0I,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UACpE0I,2CAAAxF,EAAAyF,cAACU,qDAAA,EAAD,CAAYC,SAAUtH,MAAMuH,kCAAoCC,YAAaxH,MAAMyH,yCAA2CnJ,MAAO0B,MAAM+D,4BAA8B5B,GAAI,iCAAmCnE,SAAW0J,QAAS,SAACrK,GAAD,OAAOsK,8CAAaC,KAAKvK,EAAE8G,SAAS0D,OAAQ,SAACxK,GAAD,OAAOsK,8CAAaG,KAAKzK,EAAE8G,SAAS4D,YAAA,EAASC,WAAU,yCAA2ChK,SAAWiK,UAAU,SAASC,SAAUlI,MAAMiE,oCAChayC,2CAAAxF,EAAAyF,cAACwB,4CAAA,EAAD,CAAchG,GAAI,yCAA2CnE,SAAUoK,MAAM,MAAMC,OAAO,SAAS3B,2CAAAxF,EAAAyF,cAAA,OAAKzH,MAAO,CAAEoJ,SAAU,MAAxB,0DAAsF5B,2CAAAxF,EAAAyF,cAAA,cAGnLD,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UACpE0I,2CAAAxF,EAAAyF,cAACU,qDAAA,EAAD,CAAY/I,MAAO0B,MAAM+F,4BAA8B5D,GAAI,iCAAmCnE,SAAW0J,QAAS,SAACrK,GAAD,OAAOsK,8CAAaC,KAAKvK,EAAE8G,SAAS0D,OAAQ,SAACxK,GAAD,OAAOsK,8CAAaG,KAAKzK,EAAE8G,SAAS4D,YAAA,EAASC,WAAU,yCAA2ChK,SAAWiK,UAAU,OAAOC,SAAUlI,MAAMiG,oCAC5SS,2CAAAxF,EAAAyF,cAACwB,4CAAA,EAAD,CAAchG,GAAI,yCAA2CnE,SAAUoK,MAAM,MAAMC,OAAO,SAAS3B,2CAAAxF,EAAAyF,cAAA,OAAKzH,MAAO,CAAEoJ,SAAU,MAAxB,0BAAsD5B,2CAAAxF,EAAAyF,cAAA,gBAKjJD,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UAC5D0I,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQC,QAAS,WAAQ5J,YAAYZ,SAAWC,WAAhD,UACAyI,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQE,UAAYzI,MAAM+D,8BAAgC/D,MAAMuH,kCAAoCiB,QAAS,WAAQ1K,WAAWC,SAAUC,SAAWC,WAArJ,UAGNyI,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAU3H,MAAO,CAACgI,MAAM,OAAQF,SAAS,QAASG,MAAO,YAAcnJ,UACrE0I,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAU,oBAAoB1H,MAAO,CAACkI,OAAO,OAAQJ,SAAS,SACnEN,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2DAA6D5I,UAC5E0I,2CAAAxF,EAAAyF,cAAA,QAAMC,UAAU,kBAAhB,+BAAmEF,2CAAAxF,EAAAyF,cAAA,WADrE,qBAC4FD,2CAAAxF,EAAAyF,cAAA,4BAAuBD,2CAAAxF,EAAAyF,cAAA,YAEnHD,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAW,6CAA+C5I,UAC/D0I,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UAC5E0I,2CAAAxF,EAAAyF,cAAA,MAAI+B,SAAS,IAAKhB,QAAS,SAACrK,GAAD,OAAOsK,8CAAaC,KAAKvK,EAAE8G,SAAS0D,OAAQ,SAACxK,GAAD,OAAOsK,8CAAaG,KAAKzK,EAAE8G,SAAS4D,YAAA,EAASC,WAAU,0CAA4ChK,UAA1K,SAA+L0I,2CAAAxF,EAAAyF,cAAA,YAEvLD,2CAAAxF,EAAAyF,cAACwB,4CAAA,EAAD,CAAchG,GAAI,0CAA4CnE,SAAUoK,MAAM,MAAMC,OAAO,SAAS3B,2CAAAxF,EAAAyF,cAAA,OAAKzH,MAAO,CAAEoJ,SAAU,MAAxB,oZAAgb5B,2CAAAxF,EAAAyF,cAAA,aAE9gBD,2CAAAxF,EAAAyF,cAAA,OAAKxE,GAAI,uCAAyCnE,SAAUkB,MAAO,CAACyJ,WAAW,OAAOC,aAAa,SACjGlC,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAW,2CAA6C5I,UAC3D0I,2CAAAxF,EAAAyF,cAACkC,qDAAA,EAAD,CAAW1G,GAAI,oCAAsCnE,SAAU8K,YAAU,EACrEC,QAASlJ,uCACTmJ,KAAMtK,oCAAoCC,6BAC1CsK,OAAQ,SAAAC,GAAA,IACNF,EADME,EACNF,KACAD,EAFMG,EAENH,QACAI,EAHMD,EAGNC,eAEAC,GALMF,EAING,YAJMH,EAKNE,eALMF,EAMNI,gBANMJ,EAONK,cAPML,EAQNM,uBARM,OAUV9C,2CAAAxF,EAAAyF,cAAC8C,qDAAA,EAAD,KACE/C,2CAAAxF,EAAAyF,cAAC+C,qDAAA,EAAD,CAAcC,aAAW,sBACvBjD,2CAAAxF,EAAAyF,cAACiD,qDAAA,EAAD,KACElD,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQC,QAAS,WAAO1I,sCAAsC9B,SAAU,CAACmH,sCAAsC,IAAQE,6CAA4C,OAAnK,SAGJqB,2CAAAxF,EAAAyF,cAACkD,sDAAA,EAADvJ,OAAAwJ,OAAA,CAAOC,KAAK,UAAaX,KACvB1C,2CAAAxF,EAAAyF,cAACqD,sDAAA,EAAD,KACEtD,2CAAAxF,EAAAyF,cAACsD,sDAAA,EAAD,KACGlB,EAAQmB,IAAI,SAAA5K,GAAM,OACjBoH,2CAAAxF,EAAAyF,cAACwD,sDAAA,EAAgBhB,EAAe,CAAE7J,WAC/BA,EAAOA,UAGZoH,2CAAAxF,EAAAyF,cAACwD,sDAAA,EAAD,kBAKJzD,2CAAAxF,EAAAyF,cAACyD,sDAAA,EAAD,KACGpB,EAAKkB,IAAI,SAAAjK,GAAG,OACXyG,2CAAAxF,EAAAyF,cAACsD,sDAAA,EAAD,CAAU1K,IAAKU,EAAIkC,IAChBlC,EAAIoK,MAAMH,IAAI,SAAAI,GAAI,OACjB5D,2CAAAxF,EAAAyF,cAAC4D,sDAAA,EAAD,CAAWhL,IAAK+K,EAAKnI,IAAKmI,EAAKhM,SAEjCoI,2CAAAxF,EAAAyF,cAAC4D,sDAAA,EAAD,KACE7D,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAACjJ,qCAAD,CAAsCuC,IAAKA,EAAKlC,SAAUoF,wCAE5DuD,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAAC/I,8BAAD,CAAgC6I,KAAM/H,oCAAoCC,6BAA8B+L,QAASnE,YAAatG,IAAKA,EAAKlC,SAAUoF,qCAAsCmD,SAAUA,SAAUqE,SAAS,EAAMC,KAAM,+BAAgC5M,SAAUA,SAAW,OAAQ6M,eAAgB7M,SACtUoH,yCAA0CA,yCAA0C9B,mCAAoCA,mCACxHmC,yCAA0CA,yCAC1CG,gDAAiDA,iEAe3Cc,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UAC5D0I,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQC,QAAS,WAAQ5J,YAAYZ,SAAWC,WAAhD,UACAyI,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQE,UAAYzI,MAAM+D,8BAAgC/D,MAAMuH,kCAAoCiB,QAAS,WAAQ1K,WAAWC,SAAUC,SAAWC,WAArJ,UAGNyI,2CAAAxF,EAAAyF,cAACE,6CAAA,EAAD,CAAU3H,MAAO,CAACgI,MAAM,OAAQF,SAAS,QAASG,MAAO,cAAgBnJ,UACvE0I,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAU,oBAAoB1H,MAAO,CAACkI,OAAO,OAAQJ,SAAS,SACnEN,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2DAA6D5I,UAC5E0I,2CAAAxF,EAAAyF,cAAA,QAAMC,UAAU,kBAAhB,+BAAmEF,2CAAAxF,EAAAyF,cAAA,WADrE,qBAC4FD,2CAAAxF,EAAAyF,cAAA,8BAAyBD,2CAAAxF,EAAAyF,cAAA,YAErHD,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAW,6CAA+C5I,UAC/D0I,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UAC5E0I,2CAAAxF,EAAAyF,cAAA,MAAI+B,SAAS,IAAKhB,QAAS,SAACrK,GAAD,OAAOsK,8CAAaC,KAAKvK,EAAE8G,SAAS0D,OAAQ,SAACxK,GAAD,OAAOsK,8CAAaG,KAAKzK,EAAE8G,SAAS4D,YAAA,EAASC,WAAU,4CAA8ChK,UAA5K,WAAmM0I,2CAAAxF,EAAAyF,cAAA,YAE3LD,2CAAAxF,EAAAyF,cAACwB,4CAAA,EAAD,CAAchG,GAAI,4CAA8CnE,SAAUoK,MAAM,MAAMC,OAAO,SAAS3B,2CAAAxF,EAAAyF,cAAA,OAAKzH,MAAO,CAAEoJ,SAAU,MAAxB,8HAA0J5B,2CAAAxF,EAAAyF,cAAA,aAE1PD,2CAAAxF,EAAAyF,cAAA,OAAKxE,GAAI,yCAA2CnE,SAAUkB,MAAO,CAACyJ,WAAW,OAAOC,aAAa,SACnGlC,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAW,2CAA6C5I,UAC3D0I,2CAAAxF,EAAAyF,cAACkC,qDAAA,EAAD,CAAW1G,GAAI,sCAAwCnE,SAAU8K,YAAU,EACvEC,QAAS1J,yCACT2J,KAAMxK,sCAAsCC,+BAC5CwK,OAAQ,SAAA6B,GAAA,IACN9B,EADM8B,EACN9B,KACAD,EAFM+B,EAEN/B,QACAI,EAHM2B,EAGN3B,eAEAC,GALM0B,EAINzB,YAJMyB,EAKN1B,eALM0B,EAMNxB,gBANMwB,EAONvB,cAPMuB,EAQNtB,uBARM,OAUV9C,2CAAAxF,EAAAyF,cAAC8C,qDAAA,EAAD,KACE/C,2CAAAxF,EAAAyF,cAAC+C,qDAAA,EAAD,CAAcC,aAAW,sBACvBjD,2CAAAxF,EAAAyF,cAACiD,qDAAA,EAAD,KACElD,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQC,QAAS,WAAOhJ,wCAAwCxB,SAAU,CAACsG,0CAA0C,IAAQG,iDAAgD,OAA7K,SAGJiC,2CAAAxF,EAAAyF,cAACkD,sDAAA,EAADvJ,OAAAwJ,OAAA,CAAOC,KAAK,UAAaX,KACvB1C,2CAAAxF,EAAAyF,cAACqD,sDAAA,EAAD,KACEtD,2CAAAxF,EAAAyF,cAACsD,sDAAA,EAAD,KACGlB,EAAQmB,IAAI,SAAA5K,GAAM,OACjBoH,2CAAAxF,EAAAyF,cAACwD,sDAAA,EAAgBhB,EAAe,CAAE7J,WAC/BA,EAAOA,UAGZoH,2CAAAxF,EAAAyF,cAACwD,sDAAA,EAAD,kBAKJzD,2CAAAxF,EAAAyF,cAACyD,sDAAA,EAAD,KACGpB,EAAKkB,IAAI,SAAAjK,GAAG,OACXyG,2CAAAxF,EAAAyF,cAACsD,sDAAA,EAAD,CAAU1K,IAAKU,EAAIkC,IAChBlC,EAAIoK,MAAMH,IAAI,SAAAI,GAAI,OACjB5D,2CAAAxF,EAAAyF,cAAC4D,sDAAA,EAAD,CAAWhL,IAAK+K,EAAKnI,IAAKmI,EAAKhM,SAEjCoI,2CAAAxF,EAAAyF,cAAC4D,sDAAA,EAAD,KACE7D,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAAC3J,uCAAD,CAAwCiD,IAAKA,EAAKlC,SAAU8C,0CAE9D6F,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAAClJ,gCAAD,CAAkCgJ,KAAMjI,sCAAsCC,+BAAgCiM,QAASnE,YAAatG,IAAKA,EAAKlC,SAAU8C,uCAAwCyF,SAAUA,SAAUqE,SAAS,EAAMC,KAAM,iCAAkC5M,SAAUA,SAAW,OAAQ6M,eAAgB7M,SAChVuG,6CAA8CA,6CAA8ClD,uCAAwCA,uCACpIwD,6CAA8CA,6CAC9CG,oDAAqDA,qEAe/C0B,2CAAAxF,EAAAyF,cAAA,OAAKC,UAAY,2CAA6C5I,UAC5D0I,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQC,QAAS,WAAQ5J,YAAYZ,SAAWC,WAAhD,UACAyI,2CAAAxF,EAAAyF,cAAC4B,qDAAA,EAAD,CAAQE,UAAYzI,MAAM+D,8BAAgC/D,MAAMuH,kCAAoCiB,QAAS,WAAQ1K,WAAWC,SAAUC,SAAWC,WAArJ,WAIFyI,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAACnJ,+BAAD,CAAgCO,SAAU8C,uCAAwC5C,QAAS,WAAOmB,SAASpB,WAAaA,SAAUA,SAC1IuG,6CAA8CA,6CAA8ClD,uCAAwCA,uCACpIwD,6CAA8CA,6CAC9CG,oDAAqDA,uDAG/C0B,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAAClJ,gCAAD,CAAkCM,SAAU8C,uCAAwCyF,SAAUA,SAAUsE,KAAM,iCAAkC5M,SAAUA,SAAW,OAAQ6M,eAAgB7M,SACrMuG,6CAA8CA,6CAA8ClD,uCAAwCA,uCACpIwD,6CAA8CA,6CAC9CG,oDAAqDA,uDAG/C0B,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAAChJ,6BAAD,CAA8BI,SAAUoF,qCAAsClF,QAAS,WAAOmB,SAASpB,WAAaA,SAAUA,SACtIoH,yCAA0CA,yCAA0C9B,mCAAoCA,mCACxHmC,yCAA0CA,yCAC1CG,gDAAiDA,mDAG3Cc,2CAAAxF,EAAAyF,cAAC6D,mCAAA,SAAD,CAAUC,SAAU/D,2CAAAxF,EAAAyF,cAAA,aAClBD,2CAAAxF,EAAAyF,cAAC/I,8BAAD,CAAgCG,SAAUoF,qCAAsCmD,SAAUA,SAAUsE,KAAM,+BAAgC5M,SAAUA,SAAW,OAAQ6M,eAAgB7M,SAC/LoH,yCAA0CA,yCAA0C9B,mCAAoCA,mCACxHmC,yCAA0CA,yCAC1CG,gDAAiDA,sDAQ9C7F","file":"static/js/284.74ab8b08.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PoliciesrateLimitingmethodsDeleteModal = lazy(() => import('./policiesrate_limitingmethodsDeleteModal'));\nconst PoliciesrateLimitingmethodsAdd = lazy(() => import('./policiesrate_limitingmethodsAdd'));\nconst PoliciesrateLimitingmethodsEdit = lazy(() => import('./policiesrate_limitingmethodsEdit'));\nconst PoliciesrateLimitingpathsDeleteModal = lazy(() => import('./policiesrate_limitingpathsDeleteModal'));\nconst PoliciesrateLimitingpathsAdd = lazy(() => import('./policiesrate_limitingpathsAdd'));\nconst PoliciesrateLimitingpathsEdit = lazy(() => import('./policiesrate_limitingpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_rate_limiting_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_rate_limiting_name\"] = document.getElementById(\"policies_rate_limiting_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_rate_limiting_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_rate_limiting_rule\"] = document.getElementById(\"policies_rate_limiting_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_rate_limiting_methods\"] = policies_rate_limiting_methodsrowData.policies_rate_limiting_methods;\n    json[\"policies_rate_limiting_paths\"] = policies_rate_limiting_pathsrowData.policies_rate_limiting_paths;\n      \n    loadGrid( json[\"policies_rate_limiting_name\"], json[\"policies_rate_limiting_rule\"], json[\"policies_rate_limiting_methods\"], json[\"policies_rate_limiting_paths\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_rate_limiting_methods, setpolicies_rate_limiting_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_rate_limiting_name_id\").value = \"\";\n    document.getElementById(\"policies_rate_limiting_rule_id\").value = \"\";\n    policies_rate_limiting_methodsrowData.policies_rate_limiting_methods = []\n    setpolicies_rate_limiting_methods(policies_rate_limiting_methodsrowData.policies_rate_limiting_methods);\n\n    policies_rate_limiting_pathsrowData.policies_rate_limiting_paths = []\n    setpolicies_rate_limiting_paths(policies_rate_limiting_pathsrowData.policies_rate_limiting_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicies_rate_limitingPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_rate_limiting_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_rate_limiting_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_rate_limiting_methodsheaderData = [\n    {\n    header: 'Method',\n    key: 'methods',\n  },\n\n];\n\nconst policies_rate_limiting_methodsrowData = {policies_rate_limiting_methods: []};\n\nconst policies_rate_limiting_methodshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_rate_limiting_methods_methods_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_rate_limiting_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciesrate_limiting_methodsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_rate_limiting_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst policies_rate_limiting_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_rate_limiting_pathsrowData = {policies_rate_limiting_paths: []};\n\nconst policies_rate_limiting_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_rate_limiting_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_rate_limiting_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciesrate_limiting_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_rate_limiting_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policies_rate_limitingAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_rate_limiting_methods, setpolicies_rate_limiting_methods] = React.useState([]);\n    const [fetchedpolicies_rate_limiting_methods, setFetchedpolicies_rate_limiting_methods] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_rate_limiting_methodsloadGrid();\n    }, [fetchedpolicies_rate_limiting_methods]);\n\n    const policies_rate_limiting_methodsloadGrid = React.useCallback(async (policies_rate_limiting_methods_methods, add) => {\n      try {\n        var attrs = [];\n        if(policies_rate_limiting_methods_methods) {\n          if(add) {\n            for(var i = 0; i < policies_rate_limiting_methodsrowData.policies_rate_limiting_methods.length; i++) {\n              var tempId = ((policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i].methods)?policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i].methods:\"\") + \"\";\n              if((window.policies_rate_limiting_methodsediting != true && window.policies_rate_limiting_methodsediting != \"true\") || tempId != window.policies_rate_limiting_methodsrowId) {\n                attrs.push(policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i]);\n              }\n            }\n            var newId = ((policies_rate_limiting_methods_methods)?policies_rate_limiting_methods_methods:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              methods: policies_rate_limiting_methods_methods,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_rate_limiting_methodsrowData.policies_rate_limiting_methods.length; i++) {\n              if(policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i].methods !== policies_rate_limiting_methods_methods ) {\n                attrs.push(policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_rate_limiting_methodsrowData.policies_rate_limiting_methods;\n        }\n        policies_rate_limiting_methodsrowData.policies_rate_limiting_methods = attrs;\n        const data = {policies_rate_limiting_methods: attrs};\n        setpolicies_rate_limiting_methods(data.policies_rate_limiting_methods);\n\n        if(policies_rate_limiting_methods_methods !== undefined && policies_rate_limiting_methods_methods !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [policies_rate_limiting_paths, setpolicies_rate_limiting_paths] = React.useState([]);\n    const [fetchedpolicies_rate_limiting_paths, setFetchedpolicies_rate_limiting_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_rate_limiting_pathsloadGrid();\n    }, [fetchedpolicies_rate_limiting_paths]);\n\n    const policies_rate_limiting_pathsloadGrid = React.useCallback(async (policies_rate_limiting_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_rate_limiting_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_rate_limiting_pathsrowData.policies_rate_limiting_paths.length; i++) {\n              var tempId = ((policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i].paths)?policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i].paths:\"\") + \"\";\n              if((window.policies_rate_limiting_pathsediting != true && window.policies_rate_limiting_pathsediting != \"true\") || tempId != window.policies_rate_limiting_pathsrowId) {\n                attrs.push(policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i]);\n              }\n            }\n            var newId = ((policies_rate_limiting_paths_paths)?policies_rate_limiting_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_rate_limiting_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_rate_limiting_pathsrowData.policies_rate_limiting_paths.length; i++) {\n              if(policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i].paths !== policies_rate_limiting_paths_paths ) {\n                attrs.push(policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_rate_limiting_pathsrowData.policies_rate_limiting_paths;\n        }\n        policies_rate_limiting_pathsrowData.policies_rate_limiting_paths = attrs;\n        const data = {policies_rate_limiting_paths: attrs};\n        setpolicies_rate_limiting_paths(data.policies_rate_limiting_paths);\n\n        if(policies_rate_limiting_paths_paths !== undefined && policies_rate_limiting_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_rate_limiting_name, setpolicies_rate_limiting_name] = useState(''),\n    updatepolicies_rate_limiting_name = useCallback((evt) => setpolicies_rate_limiting_name(evt.target.value), []);\n\n    const [policies_rate_limiting_methods_methods, setpolicies_rate_limiting_methods_methods] = useState(''),\n    updatepolicies_rate_limiting_methods_methods = useCallback((evt) => {\n      setpolicies_rate_limiting_methods_methods(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_rate_limiting_methodsrowData.policies_rate_limiting_methods, setpolicies_rate_limiting_methods_methods_valid, setpolicies_rate_limiting_methods_methods_invalid_text, \"Policies Rate Limiting Methods\", \"methods\", tempId);\n    }, []);\n\n    const [policies_rate_limiting_methods_methods_valid, setpolicies_rate_limiting_methods_methods_valid] = useState(true);\n    const [policies_rate_limiting_methods_methods_invalid_text, setpolicies_rate_limiting_methods_methods_invalid_text] = useState(\"\");\n\n\n    const [policies_rate_limiting_paths_paths, setpolicies_rate_limiting_paths_paths] = useState(''),\n    updatepolicies_rate_limiting_paths_paths = useCallback((evt) => {\n      setpolicies_rate_limiting_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_rate_limiting_pathsrowData.policies_rate_limiting_paths, setpolicies_rate_limiting_paths_paths_valid, setpolicies_rate_limiting_paths_paths_invalid_text, \"Policies Rate Limiting Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_rate_limiting_paths_paths_valid, setpolicies_rate_limiting_paths_paths_valid] = useState(true);\n    const [policies_rate_limiting_paths_paths_invalid_text, setpolicies_rate_limiting_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_rate_limiting_rule, setpolicies_rate_limiting_rule] = useState(''),\n    updatepolicies_rate_limiting_rule = useCallback((evt) => setpolicies_rate_limiting_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_rate_limiting_methodsrowData.policies_rate_limiting_methods.length; i++) {\n        if(policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i].id === window.policies_rate_limiting_methodsrowId) {\n        setpolicies_rate_limiting_methods_methods((policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i] !== undefined && policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i].methods !== undefined )?policies_rate_limiting_methodsrowData.policies_rate_limiting_methods[i].methods:\"\");\n        }\n      }\n\n      for(var i = 0; i < policies_rate_limiting_pathsrowData.policies_rate_limiting_paths.length; i++) {\n        if(policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i].id === window.policies_rate_limiting_pathsrowId) {\n        setpolicies_rate_limiting_paths_paths((policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i] !== undefined && policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i].paths !== undefined )?policies_rate_limiting_pathsrowData.policies_rate_limiting_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicies_rate_limitingPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_rate_limiting_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"methods_tab\" + idPrefix}>Methods</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_rate_limiting_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Rate Limiting : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_rate_limiting_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_rate_limiting_name_valid}  invalidText={props.policies_rate_limiting_name_invalid_text}  value={props.policies_rate_limiting_name}  id={\"policies_rate_limiting_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_rate_limiting_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_rate_limiting_name}/>\n          <ReactTooltip id={\"policies_rate_limiting_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name to be associated with this rate limiting rule.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n          <TextInput  value={props.policies_rate_limiting_rule}  id={\"policies_rate_limiting_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_rate_limiting_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_rate_limiting_rule}/>\n          <ReactTooltip id={\"policies_rate_limiting_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The rate limiting rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_rate_limiting_name || !props.policies_rate_limiting_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_rate_limiting_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Rate Limiting : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_rate_limiting_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_rate_limiting_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_rate_limiting_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths to which this rate limiting rule will be applied. The path supports wildcards. This entry is an array and can be used to specify multiple paths. Note that the policy will be duplicated and applied for each specified path, multiple paths do not share a common request bucket. To share a common request bucket for multiple paths, provide a single path pattern which matches all required paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_rate_limiting_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n                    <DataTable id={\"policies_rate_limiting_pathsTable\" + idPrefix} isSortable\n                        headers={policies_rate_limiting_pathsheaderData}\n                        rows={policies_rate_limiting_pathsrowData.policies_rate_limiting_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_rate_limiting_pathshandleAdd(idPrefix, [setpolicies_rate_limiting_paths_paths(''),    setpolicies_rate_limiting_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesrateLimitingpathsDeleteModal row={row} loadGrid={policies_rate_limiting_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesrateLimitingpathsEdit  data={policies_rate_limiting_pathsrowData.policies_rate_limiting_paths} setData={setDataMain} row={row} loadGrid={policies_rate_limiting_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_rate_limiting_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_rate_limiting_paths_paths={updatepolicies_rate_limiting_paths_paths} policies_rate_limiting_paths_paths={policies_rate_limiting_paths_paths}\n            policies_rate_limiting_paths_paths_valid={policies_rate_limiting_paths_paths_valid}\n            policies_rate_limiting_paths_paths_invalid_text={policies_rate_limiting_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_rate_limiting_name || !props.policies_rate_limiting_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"methods_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_rate_limiting_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Rate Limiting : </span><br/>                  <h2>Methods Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_rate_limiting_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_rate_limiting_methods_tooltip_id\" + idPrefix} >Methods</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_rate_limiting_methods_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The methods to which this rate limiting rule will be applied. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n\n                <div id={\"policies_rate_limiting_methodsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n                    <DataTable id={\"policies_rate_limiting_methodsTable\" + idPrefix} isSortable\n                        headers={policies_rate_limiting_methodsheaderData}\n                        rows={policies_rate_limiting_methodsrowData.policies_rate_limiting_methods}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_rate_limiting_methodshandleAdd(idPrefix, [setpolicies_rate_limiting_methods_methods(''),    setpolicies_rate_limiting_methods_methods_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesrateLimitingmethodsDeleteModal row={row} loadGrid={policies_rate_limiting_methodsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesrateLimitingmethodsEdit  data={policies_rate_limiting_methodsrowData.policies_rate_limiting_methods} setData={setDataMain} row={row} loadGrid={policies_rate_limiting_methodsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_rate_limiting_methods\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_rate_limiting_methods_methods={updatepolicies_rate_limiting_methods_methods} policies_rate_limiting_methods_methods={policies_rate_limiting_methods_methods}\n            policies_rate_limiting_methods_methods_valid={policies_rate_limiting_methods_methods_valid}\n            policies_rate_limiting_methods_methods_invalid_text={policies_rate_limiting_methods_methods_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_rate_limiting_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_rate_limiting_name || !props.policies_rate_limiting_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesrateLimitingmethodsAdd loadGrid={policies_rate_limiting_methodsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_rate_limiting_methods_methods={updatepolicies_rate_limiting_methods_methods} policies_rate_limiting_methods_methods={policies_rate_limiting_methods_methods}\n            policies_rate_limiting_methods_methods_valid={policies_rate_limiting_methods_methods_valid}\n            policies_rate_limiting_methods_methods_invalid_text={policies_rate_limiting_methods_methods_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesrateLimitingmethodsEdit  loadGrid={policies_rate_limiting_methodsloadGrid} dataLoad={dataLoad} name={\"policies_rate_limiting_methods\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_rate_limiting_methods_methods={updatepolicies_rate_limiting_methods_methods} policies_rate_limiting_methods_methods={policies_rate_limiting_methods_methods}\n            policies_rate_limiting_methods_methods_valid={policies_rate_limiting_methods_methods_valid}\n            policies_rate_limiting_methods_methods_invalid_text={policies_rate_limiting_methods_methods_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesrateLimitingpathsAdd loadGrid={policies_rate_limiting_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_rate_limiting_paths_paths={updatepolicies_rate_limiting_paths_paths} policies_rate_limiting_paths_paths={policies_rate_limiting_paths_paths}\n            policies_rate_limiting_paths_paths_valid={policies_rate_limiting_paths_paths_valid}\n            policies_rate_limiting_paths_paths_invalid_text={policies_rate_limiting_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesrateLimitingpathsEdit  loadGrid={policies_rate_limiting_pathsloadGrid} dataLoad={dataLoad} name={\"policies_rate_limiting_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_rate_limiting_paths_paths={updatepolicies_rate_limiting_paths_paths} policies_rate_limiting_paths_paths={policies_rate_limiting_paths_paths}\n            policies_rate_limiting_paths_paths_valid={policies_rate_limiting_paths_paths_valid}\n            policies_rate_limiting_paths_paths_invalid_text={policies_rate_limiting_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policies_rate_limitingAdd;\n"],"sourceRoot":""}