{"version":3,"file":"static/js/4793.f2bccf89.chunk.js","mappings":"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","sources":["content/policiesPage/policieshttp_transformationsresponseAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationsresponsepathsDeleteModal = lazy(() => import('./policieshttp_transformationsresponsepathsDeleteModal'));\nconst PolicieshttpTransformationsresponsepathsAdd = lazy(() => import('./policieshttp_transformationsresponsepathsAdd'));\nconst PolicieshttpTransformationsresponsepathsEdit = lazy(() => import('./policieshttp_transformationsresponsepathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_host\"] = document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_method\"] = document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_name\"] = document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_rule\"] = document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_response_paths\"] = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n      \n    loadGrid( json[\"policies_http_transformations_response_host\"], json[\"policies_http_transformations_response_method\"], json[\"policies_http_transformations_response_name\"], json[\"policies_http_transformations_response_rule\"], json[\"policies_http_transformations_response_paths\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_response_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_response_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_rule_id\").value = \"\";\n    policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = []\n    setpolicies_http_transformations_response_paths(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_responsePage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_response_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_response_pathsrowData = {policies_http_transformations_response_paths: []};\n\nconst policies_http_transformations_response_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_responseAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_paths, setFetchedpolicies_http_transformations_response_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_response_paths]);\n\n    const policies_http_transformations_response_pathsloadGrid = React.useCallback(async (policies_http_transformations_response_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              var tempId = ((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths)?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_response_pathsediting != true && window.policies_http_transformations_response_pathsediting != \"true\") || tempId != window.policies_http_transformations_response_pathsrowId) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_paths_paths)?policies_http_transformations_response_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_response_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== policies_http_transformations_response_paths_paths ) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n        }\n        policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = attrs;\n        const data = {policies_http_transformations_response_paths: attrs};\n        setpolicies_http_transformations_response_paths(data.policies_http_transformations_response_paths);\n\n        if(policies_http_transformations_response_paths_paths !== undefined && policies_http_transformations_response_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_response_host, setpolicies_http_transformations_response_host] = useState(''),\n    updatepolicies_http_transformations_response_host = useCallback((evt) => setpolicies_http_transformations_response_host(evt.target.value), []);\n\n    const [policies_http_transformations_response_method, setpolicies_http_transformations_response_method] = useState(''),\n    updatepolicies_http_transformations_response_method = useCallback((evt) => setpolicies_http_transformations_response_method(evt.target.value), []);\n\n    const [policies_http_transformations_response_name, setpolicies_http_transformations_response_name] = useState(''),\n    updatepolicies_http_transformations_response_name = useCallback((evt) => setpolicies_http_transformations_response_name(evt.target.value), []);\n\n    const [policies_http_transformations_response_paths_paths, setpolicies_http_transformations_response_paths_paths] = useState(''),\n    updatepolicies_http_transformations_response_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_response_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_invalid_text, \"Policies Http Transformations Response Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_response_paths_paths_invalid_text, setpolicies_http_transformations_response_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_response_rule, setpolicies_http_transformations_response_rule] = useState(''),\n    updatepolicies_http_transformations_response_rule = useCallback((evt) => setpolicies_http_transformations_response_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n        if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].id === window.policies_http_transformations_response_pathsrowId) {\n        setpolicies_http_transformations_response_paths_paths((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i] !== undefined && policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== undefined )?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_responsePage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_response_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3>Response</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_host}  id={\"policies_http_transformations_response_host_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_response_host}/>\n          <ReactTooltip id={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_method}  id={\"policies_http_transformations_response_method_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_response_method}/>\n          <ReactTooltip id={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_response_name_valid}  invalidText={props.policies_http_transformations_response_name_invalid_text}  value={props.policies_http_transformations_response_name}  id={\"policies_http_transformations_response_name_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_response_name}/>\n          <ReactTooltip id={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_rule}  id={\"policies_http_transformations_response_rule_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_response_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_pathsheaderData}\n                        rows={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_pathshandleAdd(idPrefix, [setpolicies_http_transformations_response_paths_paths(''),    setpolicies_http_transformations_response_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsDeleteModal row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsEdit  data={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsAdd loadGrid={policies_http_transformations_response_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsEdit  loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_responseAdd;\n"],"names":["PolicieshttpTransformationsresponsepathsDeleteModal","lazy","PolicieshttpTransformationsresponsepathsAdd","PolicieshttpTransformationsresponsepathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","policies_http_transformations_response_pathsrowData","policies_http_transformations_response_paths","handleClose","handleAdd","setpolicies_http_transformations_response_paths","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_response_pathsheaderData","header","key","policies_http_transformations_response_pathshandleAdd","clearFields","i","length","eval","Policieshttp_transformations_responseAdd","props","row","React","fetchedpolicies_http_transformations_response_paths","setFetchedpolicies_http_transformations_response_paths","policies_http_transformations_response_pathsloadGrid","async","policies_http_transformations_response_paths_paths","add","attrs","tempId","paths","window","policies_http_transformations_response_pathsediting","policies_http_transformations_response_pathsrowId","push","newId","id","e","console","log","policies_http_transformations_response_host","setpolicies_http_transformations_response_host","useState","updatepolicies_http_transformations_response_host","useCallback","evt","target","policies_http_transformations_response_method","setpolicies_http_transformations_response_method","updatepolicies_http_transformations_response_method","policies_http_transformations_response_name","setpolicies_http_transformations_response_name","updatepolicies_http_transformations_response_name","setpolicies_http_transformations_response_paths_paths","updatepolicies_http_transformations_response_paths_paths","validateField","setpolicies_http_transformations_response_paths_paths_valid","setpolicies_http_transformations_response_paths_paths_invalid_text","policies_http_transformations_response_paths_paths_valid","policies_http_transformations_response_paths_paths_invalid_text","policies_http_transformations_response_rule","setpolicies_http_transformations_response_rule","updatepolicies_http_transformations_response_rule","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","invalid","policies_http_transformations_response_name_valid","invalidText","policies_http_transformations_response_name_invalid_text","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix"],"sourceRoot":""}