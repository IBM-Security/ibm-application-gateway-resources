{"version":3,"sources":["content/servicesPage/servicesrediscollectionsAdd.js"],"names":["ServicesrediscollectionsserversDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServicesrediscollectionsserversAdd","ServicesrediscollectionsserversEdit","ServicesrediscollectionsserversssltrustCertificatesDeleteModal","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","ServicesrediscollectionsserverssslclientCertificateDeleteModal","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_redis_collections_serversrowData","services_redis_collections_servers","handleClose","handleAdd","setservices_redis_collections_servers","setservices_redis_collections_servers_ssl_trust_certificates","setservices_redis_collections_servers_ssl_client_certificate","doAdd","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","updateStyle","style","display","closeAdd","services_redis_collections_serversheaderData","header","key","services_redis_collections_servershandleAdd","clearFields","i","length","eval","services_redis_collections_servers_ssl_trust_certificatesheaderData","services_redis_collections_servers_ssl_trust_certificateshandleAdd","services_redis_collections_servers_ssl_client_certificateheaderData","services_redis_collections_servers_ssl_client_certificatehandleAdd","Servicesredis_collectionsAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_React$useState3","_React$useState4","fetchedservices_redis_collections_servers","setFetchedservices_redis_collections_servers","useEffect","services_redis_collections_serversloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","services_redis_collections_servers_name","services_redis_collections_servers_host","services_redis_collections_servers_port","services_redis_collections_servers_username","services_redis_collections_servers_password","services_redis_collections_servers_ssl_sni","add","attrs","tempId","newId","wrap","_context","prev","next","name","window","services_redis_collections_serversediting","services_redis_collections_serversrowId","push","id","host","port","username","password","ssl","trust_certificates","client_certificate","sni","console","log","abrupt","stop","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8","_x9","apply","this","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","services_redis_collections_servers_ssl_trust_certificatesloadGrid","_ref2","_callee2","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","_context2","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","_x10","_x11","_React$useState9","_React$useState10","_React$useState11","_React$useState12","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","_ref3","_callee3","services_redis_collections_servers_ssl_client_certificate_client_certificate","_context3","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","_x12","_x13","_useState","_useState2","services_redis_collections_name","setservices_redis_collections_name","updateservices_redis_collections_name","evt","target","_useState3","_useState4","services_redis_collections_matching_host","setservices_redis_collections_matching_host","updateservices_redis_collections_matching_host","_useState5","_useState6","services_redis_collections_max_pooled_connections","setservices_redis_collections_max_pooled_connections","updateservices_redis_collections_max_pooled_connections","_useState7","_useState8","services_redis_collections_idle_timeout","setservices_redis_collections_idle_timeout","updateservices_redis_collections_idle_timeout","_useState9","_useState10","services_redis_collections_connect_timeout","setservices_redis_collections_connect_timeout","updateservices_redis_collections_connect_timeout","_useState11","_useState12","services_redis_collections_io_timeout","setservices_redis_collections_io_timeout","updateservices_redis_collections_io_timeout","_useState13","_useState14","services_redis_collections_health_check_interval","setservices_redis_collections_health_check_interval","updateservices_redis_collections_health_check_interval","_useState15","_useState16","services_redis_collections_cross_domain_support_master_authn_server_url","setservices_redis_collections_cross_domain_support_master_authn_server_url","updateservices_redis_collections_cross_domain_support_master_authn_server_url","_useState17","_useState18","services_redis_collections_cross_domain_support_master_session_code_lifetime","setservices_redis_collections_cross_domain_support_master_session_code_lifetime","updateservices_redis_collections_cross_domain_support_master_session_code_lifetime","_useState19","_useState20","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","validateField","setservices_redis_collections_servers_name_valid","setservices_redis_collections_servers_name_invalid_text","_useState21","_useState22","services_redis_collections_servers_name_valid","_useState23","_useState24","services_redis_collections_servers_name_invalid_text","_useState25","_useState26","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","_useState27","_useState28","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","_useState29","_useState30","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","_useState31","_useState32","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","_useState33","_useState34","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","_React$useState13","_React$useState14","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_17__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","invalid","services_redis_collections_name_valid","invalidText","services_redis_collections_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_18__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","min","label","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","onClick","disabled","react_collapsible__WEBPACK_IMPORTED_MODULE_16___default","tabIndex","trigger","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","isSortable","headers","rows","render","_ref4","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/340.2111f1e7.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserversDeleteModal = lazy(() => import('./servicesrediscollectionsserversDeleteModal'));\nconst ServicesrediscollectionsserversAdd = lazy(() => import('./servicesrediscollectionsserversAdd'));\nconst ServicesrediscollectionsserversEdit = lazy(() => import('./servicesrediscollectionsserversEdit'));\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_name\"] = document.getElementById(\"services_redis_collections_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_matching_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_matching_host\"] = document.getElementById(\"services_redis_collections_matching_host_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_max_pooled_connections\"] = document.getElementById(\"services_redis_collections_max_pooled_connections_id\" + idPrefix).value;\n    json[\"services_redis_collections_idle_timeout\"] = document.getElementById(\"services_redis_collections_idle_timeout_id\" + idPrefix).value;\n    json[\"services_redis_collections_connect_timeout\"] = document.getElementById(\"services_redis_collections_connect_timeout_id\" + idPrefix).value;\n    json[\"services_redis_collections_io_timeout\"] = document.getElementById(\"services_redis_collections_io_timeout_id\" + idPrefix).value;\n    json[\"services_redis_collections_health_check_interval\"] = document.getElementById(\"services_redis_collections_health_check_interval_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_cross_domain_support_master_authn_server_url_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_cross_domain_support_master_authn_server_url\"] = document.getElementById(\"services_redis_collections_cross_domain_support_master_authn_server_url_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_cross_domain_support_master_session_code_lifetime\"] = document.getElementById(\"services_redis_collections_cross_domain_support_master_session_code_lifetime_id\" + idPrefix).value;\n    json[\"services_redis_collections_servers\"] = services_redis_collections_serversrowData.services_redis_collections_servers;\n      \n    loadGrid( json[\"services_redis_collections_name\"], json[\"services_redis_collections_matching_host\"], json[\"services_redis_collections_max_pooled_connections\"], json[\"services_redis_collections_idle_timeout\"], json[\"services_redis_collections_connect_timeout\"], json[\"services_redis_collections_io_timeout\"], json[\"services_redis_collections_health_check_interval\"], json[\"services_redis_collections_cross_domain_support_master_authn_server_url\"], json[\"services_redis_collections_cross_domain_support_master_session_code_lifetime\"], json[\"services_redis_collections_servers\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_redis_collections_servers, setservices_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_client_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_redis_collections_name_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_matching_host_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_max_pooled_connections_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_idle_timeout_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_connect_timeout_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_io_timeout_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_health_check_interval_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_cross_domain_support_master_authn_server_url_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_cross_domain_support_master_session_code_lifetime_id\").value = \"\";\n    services_redis_collections_serversrowData.services_redis_collections_servers = []\n    setservices_redis_collections_servers(services_redis_collections_serversrowData.services_redis_collections_servers);\n\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = []\n    setservices_redis_collections_servers_ssl_trust_certificates(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = []\n    setservices_redis_collections_servers_ssl_client_certificate(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservicesredis_collectionsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_serversheaderData = [\n    {\n    header: 'Name',\n    key: 'name',\n  },\n{\n    header: 'Host',\n    key: 'host',\n  },\n{\n    header: 'Port',\n    key: 'port',\n  },\n{\n    header: 'Username',\n    key: 'username',\n  },\n{\n    header: 'Password',\n    key: 'password',\n  },\n\n];\n\nconst services_redis_collections_serversrowData = {services_redis_collections_servers: []};\n\nconst services_redis_collections_servershandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollections_serversPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Servicesredis_collectionsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_redis_collections_servers, setservices_redis_collections_servers] = React.useState([]);\n    const [fetchedservices_redis_collections_servers, setFetchedservices_redis_collections_servers] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_serversloadGrid();\n    }, [fetchedservices_redis_collections_servers]);\n\n    const services_redis_collections_serversloadGrid = React.useCallback(async (services_redis_collections_servers_name, services_redis_collections_servers_host, services_redis_collections_servers_port, services_redis_collections_servers_username, services_redis_collections_servers_password, services_redis_collections_servers_ssl_sni, services_redis_collections_servers_ssl_client_certificate,services_redis_collections_servers_ssl_trust_certificates,add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_name) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_serversrowData.services_redis_collections_servers.length; i++) {\n              var tempId = ((services_redis_collections_serversrowData.services_redis_collections_servers[i].name)?services_redis_collections_serversrowData.services_redis_collections_servers[i].name:\"\") + \"\";\n              if((window.services_redis_collections_serversediting != true && window.services_redis_collections_serversediting != \"true\") || tempId != window.services_redis_collections_serversrowId) {\n                attrs.push(services_redis_collections_serversrowData.services_redis_collections_servers[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_name)?services_redis_collections_servers_name:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              name: services_redis_collections_servers_name,\nhost: services_redis_collections_servers_host,\nport: services_redis_collections_servers_port,\nusername: services_redis_collections_servers_username,\npassword: services_redis_collections_servers_password,\n    ssl: {\ntrust_certificates: services_redis_collections_servers_ssl_trust_certificates,\nclient_certificate: services_redis_collections_servers_ssl_client_certificate,\nsni: services_redis_collections_servers_ssl_sni,\n    },\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_serversrowData.services_redis_collections_servers.length; i++) {\n              if(services_redis_collections_serversrowData.services_redis_collections_servers[i].name !== services_redis_collections_servers_name ) {\n                attrs.push(services_redis_collections_serversrowData.services_redis_collections_servers[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_serversrowData.services_redis_collections_servers;\n        }\n        services_redis_collections_serversrowData.services_redis_collections_servers = attrs;\n        const data = {services_redis_collections_servers: attrs};\n        setservices_redis_collections_servers(data.services_redis_collections_servers);\n\n        if(services_redis_collections_servers_name !== undefined && services_redis_collections_servers_name !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_redis_collections_name, setservices_redis_collections_name] = useState(''),\n    updateservices_redis_collections_name = useCallback((evt) => setservices_redis_collections_name(evt.target.value), []);\n\n    const [services_redis_collections_matching_host, setservices_redis_collections_matching_host] = useState(''),\n    updateservices_redis_collections_matching_host = useCallback((evt) => setservices_redis_collections_matching_host(evt.target.value), []);\n\n    const [services_redis_collections_max_pooled_connections, setservices_redis_collections_max_pooled_connections] = useState(50),\n    updateservices_redis_collections_max_pooled_connections = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_idle_timeout, setservices_redis_collections_idle_timeout] = useState(10),\n    updateservices_redis_collections_idle_timeout = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_connect_timeout, setservices_redis_collections_connect_timeout] = useState(2),\n    updateservices_redis_collections_connect_timeout = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_io_timeout, setservices_redis_collections_io_timeout] = useState(30),\n    updateservices_redis_collections_io_timeout = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_health_check_interval, setservices_redis_collections_health_check_interval] = useState(10),\n    updateservices_redis_collections_health_check_interval = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_cross_domain_support_master_authn_server_url, setservices_redis_collections_cross_domain_support_master_authn_server_url] = useState(''),\n    updateservices_redis_collections_cross_domain_support_master_authn_server_url = useCallback((evt) => setservices_redis_collections_cross_domain_support_master_authn_server_url(evt.target.value), []);\n\n    const [services_redis_collections_cross_domain_support_master_session_code_lifetime, setservices_redis_collections_cross_domain_support_master_session_code_lifetime] = useState(30),\n    updateservices_redis_collections_cross_domain_support_master_session_code_lifetime = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => {\n      setservices_redis_collections_servers_name(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_serversrowData.services_redis_collections_servers, setservices_redis_collections_servers_name_valid, setservices_redis_collections_servers_name_invalid_text, \"Services Redis Collections Servers\", \"name\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_name_valid, setservices_redis_collections_servers_name_valid] = useState(true);\n    const [services_redis_collections_servers_name_invalid_text, setservices_redis_collections_servers_name_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_serversrowData.services_redis_collections_servers.length; i++) {\n        if(services_redis_collections_serversrowData.services_redis_collections_servers[i].id === window.services_redis_collections_serversrowId) {\n        setservices_redis_collections_servers_name((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].name !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].name:\"\");\n        setservices_redis_collections_servers_host((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].host !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].host:\"\");\n        setservices_redis_collections_servers_port((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].port !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].port:\"\");\n        setservices_redis_collections_servers_username((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].username !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].username:\"\");\n        setservices_redis_collections_servers_password((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].password !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].password:\"\");\n        setservices_redis_collections_servers_ssl_sni((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].ssl !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].ssl.sni !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].ssl.sni:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservicesredis_collectionsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_redis_collections_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"cross_domain_support_tab\" + idPrefix}>Cross Domain Support</Tab>\n                <Tab tabFor={\"servers_tab\" + idPrefix}>Servers</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n  <h3>Collections</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_redis_collections_name_valid}  invalidText={props.services_redis_collections_name_invalid_text}  value={props.services_redis_collections_name}  id={\"services_redis_collections_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_name}/>\n          <ReactTooltip id={\"services_redis_collections_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the redis collection.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_matching_host}  id={\"services_redis_collections_matching_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_matching_host_tooltip_id\" + idPrefix}  labelText=\"Matching Host\" onChange={props.updateservices_redis_collections_matching_host}/>\n          <ReactTooltip id={\"services_redis_collections_matching_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Any specific hosts (obtained from the Host header of the HTTP request) for which this collection should be used.<br/>This entry is only applicable to Redis collections being used  for storing session data.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_max_pooled_connections} id={\"services_redis_collections_max_pooled_connections_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_max_pooled_connections_tooltip_id\" + idPrefix}  min={0}  label=\"Max Pooled Connections\" onChange={props.updateservices_redis_collections_max_pooled_connections}/>\n          <ReactTooltip id={\"services_redis_collections_max_pooled_connections_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of pooled connections to a Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_idle_timeout} id={\"services_redis_collections_idle_timeout_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_idle_timeout_tooltip_id\" + idPrefix}  min={0}  label=\"Idle Timeout\" onChange={props.updateservices_redis_collections_idle_timeout}/>\n          <ReactTooltip id={\"services_redis_collections_idle_timeout_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds a pooled connection can remain idle before the connection is closed.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_connect_timeout} id={\"services_redis_collections_connect_timeout_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_connect_timeout_tooltip_id\" + idPrefix}  min={0}  label=\"Connect Timeout\" onChange={props.updateservices_redis_collections_connect_timeout}/>\n          <ReactTooltip id={\"services_redis_collections_connect_timeout_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds to wait for a connection to be established with a Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_io_timeout} id={\"services_redis_collections_io_timeout_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_io_timeout_tooltip_id\" + idPrefix}  min={0}  label=\"IO Timeout\" onChange={props.updateservices_redis_collections_io_timeout}/>\n          <ReactTooltip id={\"services_redis_collections_io_timeout_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds to wait for a valid response from a Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_health_check_interval} id={\"services_redis_collections_health_check_interval_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_health_check_interval_tooltip_id\" + idPrefix}  min={1}  label=\"Health Check Interval\" onChange={props.updateservices_redis_collections_health_check_interval}/>\n          <ReactTooltip id={\"services_redis_collections_health_check_interval_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The interval (in seconds) between health check requests sent to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_name || !props.services_redis_collections_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"cross_domain_support_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections : </span><br/>                  <h2>Cross Domain Support Settings</h2><hr/>\n                  <Collapsible tabIndex=\"0\" trigger=\"Specifies the configuration information associated with the sharing of sessions across multiple DNS domains\">\n                    <p>Specifies the configuration information associated with the sharing of sessions across multiple DNS domains.<br/>These entries are only applicable to Redis collections being used  for storing session data.</p>\n                  </Collapsible>\n\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n  <h3>Cross Domain Support</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_cross_domain_support_master_authn_server_url}  id={\"services_redis_collections_cross_domain_support_master_authn_server_url_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_cross_domain_support_master_authn_server_url_tooltip_id\" + idPrefix}  labelText=\"Master Authentication Server URL\" onChange={props.updateservices_redis_collections_cross_domain_support_master_authn_server_url}/>\n          <ReactTooltip id={\"services_redis_collections_cross_domain_support_master_authn_server_url_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The base URL of the master authentication server for this collection of Redis servers.  The master authentication server, if specified, will be responsible for the generation of all new sessions for this collection.  The entry should be of the format: `http&#123;s}://server&#123;:port}`.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_cross_domain_support_master_session_code_lifetime} id={\"services_redis_collections_cross_domain_support_master_session_code_lifetime_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_cross_domain_support_master_session_code_lifetime_tooltip_id\" + idPrefix}  min={1}  label=\"Master Session Code Lifetime\" onChange={props.updateservices_redis_collections_cross_domain_support_master_session_code_lifetime}/>\n          <ReactTooltip id={\"services_redis_collections_cross_domain_support_master_session_code_lifetime_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds that a session code, used when communicating the session information from the master authentication server, will remain valid.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_name || !props.services_redis_collections_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"servers_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections : </span><br/>                  <h2>Servers Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_tooltip_id\" + idPrefix} >Servers</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Used to define the configuration for the individual Redis servers within the collection.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_serversTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_serversTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_serversheaderData}\n                        rows={services_redis_collections_serversrowData.services_redis_collections_servers}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servershandleAdd(idPrefix, [setservices_redis_collections_servers_name(''),    setservices_redis_collections_servers_name_valid(true),    setservices_redis_collections_servers_host(''),    setservices_redis_collections_servers_port(6379),    setservices_redis_collections_servers_username(''),    setservices_redis_collections_servers_password(''),    setservices_redis_collections_servers_ssl_sni(''),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversDeleteModal row={row} loadGrid={services_redis_collections_serversloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversEdit  data={services_redis_collections_serversrowData.services_redis_collections_servers} setData={setDataMain} row={row} loadGrid={services_redis_collections_serversloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_name={updateservices_redis_collections_servers_name} services_redis_collections_servers_name={services_redis_collections_servers_name}\n            services_redis_collections_servers_name_valid={services_redis_collections_servers_name_valid}\n            services_redis_collections_servers_name_invalid_text={services_redis_collections_servers_name_invalid_text}\n            updateservices_redis_collections_servers_host={updateservices_redis_collections_servers_host} services_redis_collections_servers_host={services_redis_collections_servers_host}\n            updateservices_redis_collections_servers_port={updateservices_redis_collections_servers_port} services_redis_collections_servers_port={services_redis_collections_servers_port}\n            updateservices_redis_collections_servers_username={updateservices_redis_collections_servers_username} services_redis_collections_servers_username={services_redis_collections_servers_username}\n            updateservices_redis_collections_servers_password={updateservices_redis_collections_servers_password} services_redis_collections_servers_password={services_redis_collections_servers_password}\n            updateservices_redis_collections_servers_ssl_sni={updateservices_redis_collections_servers_ssl_sni} services_redis_collections_servers_ssl_sni={services_redis_collections_servers_ssl_sni}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_name || !props.services_redis_collections_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversAdd loadGrid={services_redis_collections_serversloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_name={updateservices_redis_collections_servers_name} services_redis_collections_servers_name={services_redis_collections_servers_name}\n            services_redis_collections_servers_name_valid={services_redis_collections_servers_name_valid}\n            services_redis_collections_servers_name_invalid_text={services_redis_collections_servers_name_invalid_text}\n            updateservices_redis_collections_servers_host={updateservices_redis_collections_servers_host} services_redis_collections_servers_host={services_redis_collections_servers_host}\n            updateservices_redis_collections_servers_port={updateservices_redis_collections_servers_port} services_redis_collections_servers_port={services_redis_collections_servers_port}\n            updateservices_redis_collections_servers_username={updateservices_redis_collections_servers_username} services_redis_collections_servers_username={services_redis_collections_servers_username}\n            updateservices_redis_collections_servers_password={updateservices_redis_collections_servers_password} services_redis_collections_servers_password={services_redis_collections_servers_password}\n            updateservices_redis_collections_servers_ssl_sni={updateservices_redis_collections_servers_ssl_sni} services_redis_collections_servers_ssl_sni={services_redis_collections_servers_ssl_sni}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversEdit  loadGrid={services_redis_collections_serversloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_name={updateservices_redis_collections_servers_name} services_redis_collections_servers_name={services_redis_collections_servers_name}\n            services_redis_collections_servers_name_valid={services_redis_collections_servers_name_valid}\n            services_redis_collections_servers_name_invalid_text={services_redis_collections_servers_name_invalid_text}\n            updateservices_redis_collections_servers_host={updateservices_redis_collections_servers_host} services_redis_collections_servers_host={services_redis_collections_servers_host}\n            updateservices_redis_collections_servers_port={updateservices_redis_collections_servers_port} services_redis_collections_servers_port={services_redis_collections_servers_port}\n            updateservices_redis_collections_servers_username={updateservices_redis_collections_servers_username} services_redis_collections_servers_username={services_redis_collections_servers_username}\n            updateservices_redis_collections_servers_password={updateservices_redis_collections_servers_password} services_redis_collections_servers_password={services_redis_collections_servers_password}\n            updateservices_redis_collections_servers_ssl_sni={updateservices_redis_collections_servers_ssl_sni} services_redis_collections_servers_ssl_sni={services_redis_collections_servers_ssl_sni}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Servicesredis_collectionsAdd;\n"],"sourceRoot":""}