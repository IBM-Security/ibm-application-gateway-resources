{"version":3,"file":"static/js/4436.c459266b.chunk.js","mappings":"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","sources":["content/resource_serversPage/serversAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setresource_servers_servers_ssl_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_servers_host_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_port_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_priority_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_ssl_server_dn_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_url_style_windows_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_uuid_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_virtual_host_id\").value = \"\";\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = []\n    setresource_servers_servers_ssl_certificate(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst ServersAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => {\n      setresource_servers_servers_ssl_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_invalid_text, \"Resource Servers Servers Ssl Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_servers_host_valid}  invalidText={props.resource_servers_servers_host_invalid_text}  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default ServersAdd;\n"],"names":["ServerssslcertificateDeleteModal","lazy","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","setresource_servers_servers_ssl_certificate","doAdd","updateStyle","style","display","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","i","length","eval","ServersAdd","props","row","React","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","resource_servers_servers_ssl_certificateloadGrid","async","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","certificate","window","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","push","newId","id","e","console","log","resource_servers_servers_host","setresource_servers_servers_host","useState","updateresource_servers_servers_host","useCallback","evt","target","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","validateField","setresource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_invalid_text","resource_servers_servers_ssl_certificate_certificate_valid","resource_servers_servers_ssl_certificate_certificate_invalid_text","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","Checkbox","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","onClick","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","TextInput","invalid","invalidText","resource_servers_servers_host_invalid_text","NumberInput","min","max","label","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix"],"sourceRoot":""}