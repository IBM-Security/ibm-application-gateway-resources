{"version":3,"sources":["content/servicesPage/serviceskerberoscapathsAdd.js"],"names":["ServiceskerberoscapathsrealmsDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServiceskerberoscapathsrealmsAdd","ServiceskerberoscapathsrealmsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_kerberos_capaths_realmsrowData","services_kerberos_capaths_realms","handleClose","handleAdd","setservices_kerberos_capaths_realms","doAdd","updateStyle","style","display","closeAdd","services_kerberos_capaths_realmsheaderData","header","key","services_kerberos_capaths_realmshandleAdd","clearFields","i","length","eval","Serviceskerberos_capathsAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_React$useState3","_React$useState4","fetchedservices_kerberos_capaths_realms","setFetchedservices_kerberos_capaths_realms","useEffect","services_kerberos_capaths_realmsloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","services_kerberos_capaths_realms_server_realm","services_kerberos_capaths_realms_inter_realm","add","attrs","tempId","newId","wrap","_context","prev","next","server_realm","window","services_kerberos_capaths_realmsediting","services_kerberos_capaths_realmsrowId","push","id","inter_realm","console","log","abrupt","stop","_x","_x2","_x3","apply","this","arguments","_useState","_useState2","services_kerberos_capaths_client_realm","setservices_kerberos_capaths_client_realm","updateservices_kerberos_capaths_client_realm","evt","target","_useState3","_useState4","setservices_kerberos_capaths_realms_server_realm","updateservices_kerberos_capaths_realms_server_realm","validateField","setservices_kerberos_capaths_realms_server_realm_valid","setservices_kerberos_capaths_realms_server_realm_invalid_text","_useState5","_useState6","services_kerberos_capaths_realms_server_realm_valid","_useState7","_useState8","services_kerberos_capaths_realms_server_realm_invalid_text","_useState9","_useState10","setservices_kerberos_capaths_realms_inter_realm","updateservices_kerberos_capaths_realms_inter_realm","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_17__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","invalid","services_kerberos_capaths_client_realm_valid","invalidText","services_kerberos_capaths_client_realm_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_18__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","onClick","disabled","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","setData","editing","name","parentIdPrefix"],"mappings":"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","file":"static/js/301.2f6274df.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServiceskerberoscapathsrealmsDeleteModal = lazy(() => import('./serviceskerberoscapathsrealmsDeleteModal'));\nconst ServiceskerberoscapathsrealmsAdd = lazy(() => import('./serviceskerberoscapathsrealmsAdd'));\nconst ServiceskerberoscapathsrealmsEdit = lazy(() => import('./serviceskerberoscapathsrealmsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_capaths_client_realm_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_capaths_client_realm\"] = document.getElementById(\"services_kerberos_capaths_client_realm_id\" + idPrefix).value;\n    }\n    json[\"services_kerberos_capaths_realms\"] = services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms;\n      \n    loadGrid( json[\"services_kerberos_capaths_client_realm\"], json[\"services_kerberos_capaths_realms\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_kerberos_capaths_realms, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_kerberos_capaths_client_realm_id\").value = \"\";\n    services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms = []\n    setservices_kerberos_capaths_realms(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserviceskerberos_capathsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_capaths_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_capaths_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_kerberos_capaths_realmsheaderData = [\n    {\n    header: 'Server Realm',\n    key: 'server_realm',\n  },\n{\n    header: 'Inter Realm',\n    key: 'inter_realm',\n  },\n\n];\n\nconst services_kerberos_capaths_realmsrowData = {services_kerberos_capaths_realms: []};\n\nconst services_kerberos_capaths_realmshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_kerberos_capaths_realms_server_realm_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_kerberos_capaths_realms_inter_realm_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_kerberos_capaths_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserviceskerberoscapaths_realmsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_kerberos_capaths_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serviceskerberos_capathsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_kerberos_capaths_realms, setservices_kerberos_capaths_realms] = React.useState([]);\n    const [fetchedservices_kerberos_capaths_realms, setFetchedservices_kerberos_capaths_realms] = React.useState(false);\n\n    React.useEffect(() => {\n      services_kerberos_capaths_realmsloadGrid();\n    }, [fetchedservices_kerberos_capaths_realms]);\n\n    const services_kerberos_capaths_realmsloadGrid = React.useCallback(async (services_kerberos_capaths_realms_server_realm, services_kerberos_capaths_realms_inter_realm, add) => {\n      try {\n        var attrs = [];\n        if(services_kerberos_capaths_realms_server_realm) {\n          if(add) {\n            for(var i = 0; i < services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms.length; i++) {\n              var tempId = ((services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm)?services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm:\"\") + \"\";\n              if((window.services_kerberos_capaths_realmsediting != true && window.services_kerberos_capaths_realmsediting != \"true\") || tempId != window.services_kerberos_capaths_realmsrowId) {\n                attrs.push(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i]);\n              }\n            }\n            var newId = ((services_kerberos_capaths_realms_server_realm)?services_kerberos_capaths_realms_server_realm:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              server_realm: services_kerberos_capaths_realms_server_realm,\ninter_realm: services_kerberos_capaths_realms_inter_realm,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms.length; i++) {\n              if(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm !== services_kerberos_capaths_realms_server_realm ) {\n                attrs.push(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms;\n        }\n        services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms = attrs;\n        const data = {services_kerberos_capaths_realms: attrs};\n        setservices_kerberos_capaths_realms(data.services_kerberos_capaths_realms);\n\n        if(services_kerberos_capaths_realms_server_realm !== undefined && services_kerberos_capaths_realms_server_realm !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_kerberos_capaths_client_realm, setservices_kerberos_capaths_client_realm] = useState(''),\n    updateservices_kerberos_capaths_client_realm = useCallback((evt) => setservices_kerberos_capaths_client_realm(evt.target.value), []);\n\n    const [services_kerberos_capaths_realms_server_realm, setservices_kerberos_capaths_realms_server_realm] = useState(''),\n    updateservices_kerberos_capaths_realms_server_realm = useCallback((evt) => {\n      setservices_kerberos_capaths_realms_server_realm(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms, setservices_kerberos_capaths_realms_server_realm_valid, setservices_kerberos_capaths_realms_server_realm_invalid_text, \"Services Kerberos Capaths Realms\", \"server_realm\", tempId);\n    }, []);\n\n    const [services_kerberos_capaths_realms_server_realm_valid, setservices_kerberos_capaths_realms_server_realm_valid] = useState(true);\n    const [services_kerberos_capaths_realms_server_realm_invalid_text, setservices_kerberos_capaths_realms_server_realm_invalid_text] = useState(\"\");\n\n\n    const [services_kerberos_capaths_realms_inter_realm, setservices_kerberos_capaths_realms_inter_realm] = useState(''),\n    updateservices_kerberos_capaths_realms_inter_realm = useCallback((evt) => setservices_kerberos_capaths_realms_inter_realm(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms.length; i++) {\n        if(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].id === window.services_kerberos_capaths_realmsrowId) {\n        setservices_kerberos_capaths_realms_server_realm((services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i] !== undefined && services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm !== undefined )?services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm:\"\");\n        setservices_kerberos_capaths_realms_inter_realm((services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i] !== undefined && services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].inter_realm !== undefined )?services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].inter_realm:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserviceskerberos_capathsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_kerberos_capaths_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"realms_tab\" + idPrefix}>Realms</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_capaths_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / capaths : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_capaths_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n  <h3>Capaths</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_kerberos_capaths_client_realm_valid}  invalidText={props.services_kerberos_capaths_client_realm_invalid_text}  value={props.services_kerberos_capaths_client_realm}  id={\"services_kerberos_capaths_client_realm_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_capaths_client_realm_tooltip_id\" + idPrefix}  labelText=\"Client Realm *\" onChange={props.updateservices_kerberos_capaths_client_realm}/>\n          <ReactTooltip id={\"services_kerberos_capaths_client_realm_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>The client realm for this authentication path.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_capaths_client_realm || !props.services_kerberos_capaths_client_realm_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"realms_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_capaths_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / capaths : </span><br/>                  <h2>Realms Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_kerberos_capaths_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_capaths_realms_tooltip_id\" + idPrefix} >Realms</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_kerberos_capaths_realms_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\"><div style={{ maxWidth: 300 }}>The realms associated with this capath.<br/></div></ReactTooltip>\n\n                <div id={\"services_kerberos_capaths_realmsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n                    <DataTable id={\"services_kerberos_capaths_realmsTable\" + idPrefix} isSortable\n                        headers={services_kerberos_capaths_realmsheaderData}\n                        rows={services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_kerberos_capaths_realmshandleAdd(idPrefix, [setservices_kerberos_capaths_realms_server_realm(''),    setservices_kerberos_capaths_realms_server_realm_valid(true),    setservices_kerberos_capaths_realms_inter_realm(''),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberoscapathsrealmsDeleteModal row={row} loadGrid={services_kerberos_capaths_realmsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberoscapathsrealmsEdit  data={services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms} setData={setDataMain} row={row} loadGrid={services_kerberos_capaths_realmsloadGrid} dataLoad={dataLoad} editing={true} name={\"services_kerberos_capaths_realms\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_capaths_realms_server_realm={updateservices_kerberos_capaths_realms_server_realm} services_kerberos_capaths_realms_server_realm={services_kerberos_capaths_realms_server_realm}\n            services_kerberos_capaths_realms_server_realm_valid={services_kerberos_capaths_realms_server_realm_valid}\n            services_kerberos_capaths_realms_server_realm_invalid_text={services_kerberos_capaths_realms_server_realm_invalid_text}\n            updateservices_kerberos_capaths_realms_inter_realm={updateservices_kerberos_capaths_realms_inter_realm} services_kerberos_capaths_realms_inter_realm={services_kerberos_capaths_realms_inter_realm}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_capaths_client_realm || !props.services_kerberos_capaths_client_realm_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberoscapathsrealmsAdd loadGrid={services_kerberos_capaths_realmsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_kerberos_capaths_realms_server_realm={updateservices_kerberos_capaths_realms_server_realm} services_kerberos_capaths_realms_server_realm={services_kerberos_capaths_realms_server_realm}\n            services_kerberos_capaths_realms_server_realm_valid={services_kerberos_capaths_realms_server_realm_valid}\n            services_kerberos_capaths_realms_server_realm_invalid_text={services_kerberos_capaths_realms_server_realm_invalid_text}\n            updateservices_kerberos_capaths_realms_inter_realm={updateservices_kerberos_capaths_realms_inter_realm} services_kerberos_capaths_realms_inter_realm={services_kerberos_capaths_realms_inter_realm}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberoscapathsrealmsEdit  loadGrid={services_kerberos_capaths_realmsloadGrid} dataLoad={dataLoad} name={\"services_kerberos_capaths_realms\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_capaths_realms_server_realm={updateservices_kerberos_capaths_realms_server_realm} services_kerberos_capaths_realms_server_realm={services_kerberos_capaths_realms_server_realm}\n            services_kerberos_capaths_realms_server_realm_valid={services_kerberos_capaths_realms_server_realm_valid}\n            services_kerberos_capaths_realms_server_realm_invalid_text={services_kerberos_capaths_realms_server_realm_invalid_text}\n            updateservices_kerberos_capaths_realms_inter_realm={updateservices_kerberos_capaths_realms_inter_realm} services_kerberos_capaths_realms_inter_realm={services_kerberos_capaths_realms_inter_realm}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serviceskerberos_capathsAdd;\n"],"sourceRoot":""}