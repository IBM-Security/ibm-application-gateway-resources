{"version":3,"sources":["content/resource_serversPage/serversAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ServerssslcertificateDeleteModal","lazy","all","__webpack_require__","bind","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","setresource_servers_servers_ssl_certificate","doAdd","updateStyle","style","display","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","eval","ServersAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","useEffect","resource_servers_servers_ssl_certificateloadGrid","useCallback","_ref","_asyncToGenerator","_callee","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","newId","_context","certificate","window","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","id","console","log","_x","_x2","apply","arguments","_useState","_useState2","resource_servers_servers_host","setresource_servers_servers_host","updateresource_servers_servers_host","evt","target","_useState3","_useState4","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","_useState5","_useState6","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","_useState7","_useState8","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","validateField","setresource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_invalid_text","_useState9","_useState10","resource_servers_servers_ssl_certificate_certificate_valid","_useState11","_useState12","resource_servers_servers_ssl_certificate_certificate_invalid_text","_useState13","_useState14","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","_useState15","_useState16","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","_useState17","_useState18","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","_useState19","_useState20","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","_useState21","_useState22","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","Checkbox","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","TextInput","invalid","invalidText","resource_servers_servers_host_invalid_text","NumberInput","min","max","label","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/128.b5470ac8.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setresource_servers_servers_ssl_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_servers_host_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_port_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_priority_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_ssl_server_dn_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_url_style_windows_id\").checked = false;\n    document.getElementById(\"resource_servers_servers_uuid_id\").value = \"\";\n    document.getElementById(\"resource_servers_servers_virtual_host_id\").value = \"\";\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = []\n    setresource_servers_servers_ssl_certificate(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst ServersAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => {\n      setresource_servers_servers_ssl_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_invalid_text, \"Resource Servers Servers Ssl Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_servers_host_valid}  invalidText={props.resource_servers_servers_host_invalid_text}  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default ServersAdd;\n"],"sourceRoot":""}