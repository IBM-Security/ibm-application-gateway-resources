{"version":3,"sources":["content/servicesPage/servicesrediscollectionsserversAdd.js"],"names":["ServicesrediscollectionsserversssltrustCertificatesDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","ServicesrediscollectionsserverssslclientCertificateDeleteModal","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","setservices_redis_collections_servers_ssl_trust_certificates","setservices_redis_collections_servers_ssl_client_certificate","doAdd","updateStyle","style","display","closeAdd","services_redis_collections_servers_ssl_trust_certificatesheaderData","header","key","services_redis_collections_servers_ssl_trust_certificateshandleAdd","clearFields","i","length","eval","services_redis_collections_servers_ssl_client_certificateheaderData","services_redis_collections_servers_ssl_client_certificatehandleAdd","Servicesrediscollections_serversAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_React$useState3","_React$useState4","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","useEffect","services_redis_collections_servers_ssl_trust_certificatesloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","add","attrs","tempId","newId","wrap","_context","prev","next","trust_certificates","window","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","_ref2","_callee2","services_redis_collections_servers_ssl_client_certificate_client_certificate","_context2","client_certificate","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","_x3","_x4","_useState","_useState2","services_redis_collections_servers_name","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","evt","target","_useState3","_useState4","services_redis_collections_servers_host","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","_useState5","_useState6","services_redis_collections_servers_port","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","_useState7","_useState8","services_redis_collections_servers_username","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","_useState9","_useState10","services_redis_collections_servers_password","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","_useState11","_useState12","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","validateField","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState13","_useState14","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","_useState15","_useState16","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState17","_useState18","setservices_redis_collections_servers_ssl_client_certificate_client_certificate","updateservices_redis_collections_servers_ssl_client_certificate_client_certificate","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState19","_useState20","services_redis_collections_servers_ssl_client_certificate_client_certificate_valid","_useState21","_useState22","services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState23","_useState24","services_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_18__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","invalid","services_redis_collections_servers_name_valid","invalidText","services_redis_collections_servers_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_19__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","min","label","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","onClick","disabled","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","setData","editing","name","parentIdPrefix","_ref4"],"mappings":"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","file":"static/js/62.c4991433.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_name\"] = document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_host\"] = document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_port\"] = document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_username\"] = document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_password\"] = document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_ssl_sni\"] = document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_ssl_client_certificate\"] = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n    json[\"services_redis_collections_servers_ssl_trust_certificates\"] = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"services_redis_collections_servers_name\"], json[\"services_redis_collections_servers_host\"], json[\"services_redis_collections_servers_port\"], json[\"services_redis_collections_servers_username\"], json[\"services_redis_collections_servers_password\"], json[\"services_redis_collections_servers_ssl_sni\"], json[\"services_redis_collections_servers_ssl_client_certificate\"], json[\"services_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_client_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_redis_collections_servers_name_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_host_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_port_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_username_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_password_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_ssl_sni_id\").value = \"\";\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = []\n    setservices_redis_collections_servers_ssl_trust_certificates(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = []\n    setservices_redis_collections_servers_ssl_client_certificate(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservicesrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Servicesrediscollections_serversAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => setservices_redis_collections_servers_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, \"Services Redis Collections Servers Ssl Trust Certificates\", \"trust_certificates\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateservices_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, \"Services Redis Collections Servers Ssl Client Certificate\", \"client_certificate\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].id === window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i] !== undefined && services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].id === window.services_redis_collections_servers_ssl_client_certificaterowId) {\n        setservices_redis_collections_servers_ssl_client_certificate_client_certificate((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i] !== undefined && services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservicesrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_redis_collections_servers_name_valid}  invalidText={props.services_redis_collections_servers_name_invalid_text}  value={props.services_redis_collections_servers_name}  id={\"services_redis_collections_servers_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_servers_name}/>\n          <ReactTooltip id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_host}  id={\"services_redis_collections_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_redis_collections_servers_host}/>\n          <ReactTooltip id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_servers_port} id={\"services_redis_collections_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateservices_redis_collections_servers_port}/>\n          <ReactTooltip id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_username}  id={\"services_redis_collections_servers_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_redis_collections_servers_username}/>\n          <ReactTooltip id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_password}  id={\"services_redis_collections_servers_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_redis_collections_servers_password}/>\n          <ReactTooltip id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  The SSL information associated with the Redis server.\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesEdit  data={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateEdit  data={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_ssl_sni}  id={\"services_redis_collections_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesAdd loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesEdit  loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateAdd loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateEdit  loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Servicesrediscollections_serversAdd;\n"],"sourceRoot":""}