{"version":3,"file":"static/js/4481.fce3172c.chunk.js","mappings":"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","sources":["content/servicesPage/servicesrediscollectionsserversAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_host\"] = document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_name\"] = document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_password\"] = document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_port\"] = document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_ssl_sni\"] = document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_username\"] = document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_ssl_client_certificate\"] = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n    json[\"services_redis_collections_servers_ssl_trust_certificates\"] = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"services_redis_collections_servers_host\"], json[\"services_redis_collections_servers_name\"], json[\"services_redis_collections_servers_password\"], json[\"services_redis_collections_servers_port\"], json[\"services_redis_collections_servers_ssl_sni\"], json[\"services_redis_collections_servers_username\"], json[\"services_redis_collections_servers_ssl_client_certificate\"], json[\"services_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_trust_certificates, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_redis_collections_servers_host_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_name_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_password_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_port_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_ssl_sni_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_username_id\").value = \"\";\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = []\n    setservices_redis_collections_servers_ssl_client_certificate(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = []\n    setservices_redis_collections_servers_ssl_trust_certificates(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservicesrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Servicesrediscollections_serversAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => setservices_redis_collections_servers_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateservices_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, \"Services Redis Collections Servers Ssl Client Certificate\", \"client_certificate\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, \"Services Redis Collections Servers Ssl Trust Certificates\", \"trust_certificates\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].id === window.services_redis_collections_servers_ssl_client_certificaterowId) {\n        setservices_redis_collections_servers_ssl_client_certificate_client_certificate((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i] !== undefined && services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].id === window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i] !== undefined && services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservicesrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_host}  id={\"services_redis_collections_servers_host_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_redis_collections_servers_host}/>\n          <ReactTooltip id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_redis_collections_servers_name_valid}  invalidText={props.services_redis_collections_servers_name_invalid_text}  value={props.services_redis_collections_servers_name}  id={\"services_redis_collections_servers_name_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_servers_name}/>\n          <ReactTooltip id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_password}  id={\"services_redis_collections_servers_password_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_redis_collections_servers_password}/>\n          <ReactTooltip id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_servers_port} id={\"services_redis_collections_servers_port_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateservices_redis_collections_servers_port}/>\n          <ReactTooltip id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_username}  id={\"services_redis_collections_servers_username_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_redis_collections_servers_username}/>\n          <ReactTooltip id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  The SSL information associated with the Redis server.\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateEdit  data={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_ssl_sni}  id={\"services_redis_collections_servers_ssl_sni_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesEdit  data={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateAdd loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateEdit  loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesAdd loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesEdit  loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Servicesrediscollections_serversAdd;\n"],"names":["ServicesrediscollectionsserverssslclientCertificateDeleteModal","lazy","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","ServicesrediscollectionsserversssltrustCertificatesDeleteModal","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","setservices_redis_collections_servers_ssl_client_certificate","setservices_redis_collections_servers_ssl_trust_certificates","doAdd","updateStyle","style","display","closeAdd","services_redis_collections_servers_ssl_client_certificateheaderData","header","key","services_redis_collections_servers_ssl_client_certificatehandleAdd","clearFields","i","length","eval","services_redis_collections_servers_ssl_trust_certificatesheaderData","services_redis_collections_servers_ssl_trust_certificateshandleAdd","Servicesrediscollections_serversAdd","props","row","React","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","async","services_redis_collections_servers_ssl_client_certificate_client_certificate","add","attrs","tempId","client_certificate","window","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","push","newId","id","e","console","log","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","services_redis_collections_servers_ssl_trust_certificatesloadGrid","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","trust_certificates","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","services_redis_collections_servers_host","setservices_redis_collections_servers_host","useState","updateservices_redis_collections_servers_host","useCallback","evt","target","services_redis_collections_servers_name","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","services_redis_collections_servers_password","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","services_redis_collections_servers_port","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","setservices_redis_collections_servers_ssl_client_certificate_client_certificate","updateservices_redis_collections_servers_ssl_client_certificate_client_certificate","validateField","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","services_redis_collections_servers_ssl_client_certificate_client_certificate_valid","services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","services_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","services_redis_collections_servers_username","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","invalid","services_redis_collections_servers_name_valid","invalidText","services_redis_collections_servers_name_invalid_text","NumberInput","min","label","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix","_ref2"],"sourceRoot":""}