{"version":3,"sources":["content/resource_serversPage/identity_headersjwtclaimsAdd.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","IdentityHeadersjwtclaimstextDeleteModal","lazy","all","__webpack_require__","e","bind","IdentityHeadersjwtclaimstextAdd","IdentityHeadersjwtclaimstextEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","json","document","getElementById","endsWith","resource_servers_identity_headers_jwt_claims_textrowData","resource_servers_identity_headers_jwt_claims_text","handleClose","handleAdd","setresource_servers_identity_headers_jwt_claims_text","doAdd","updateStyle","style","display","closeAdd","resource_servers_identity_headers_jwt_claims_textheaderData","header","resource_servers_identity_headers_jwt_claims_texthandleAdd","clearFields","eval","Identity_headersjwt_claimsAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedresource_servers_identity_headers_jwt_claims_text","setFetchedresource_servers_identity_headers_jwt_claims_text","useEffect","resource_servers_identity_headers_jwt_claims_textloadGrid","useCallback","_ref","_asyncToGenerator","_callee","resource_servers_identity_headers_jwt_claims_text_text","add","attrs","tempId","newId","_context","text","window","resource_servers_identity_headers_jwt_claims_textediting","resource_servers_identity_headers_jwt_claims_textrowId","id","console","log","_x","_x2","apply","arguments","_useState","_useState2","resource_servers_identity_headers_jwt_claims_name","setresource_servers_identity_headers_jwt_claims_name","updateresource_servers_identity_headers_jwt_claims_name","evt","target","_useState3","_useState4","setresource_servers_identity_headers_jwt_claims_text_text","updateresource_servers_identity_headers_jwt_claims_text_text","validateField","setresource_servers_identity_headers_jwt_claims_text_text_valid","setresource_servers_identity_headers_jwt_claims_text_text_invalid_text","_useState5","_useState6","resource_servers_identity_headers_jwt_claims_text_text_valid","_useState7","_useState8","resource_servers_identity_headers_jwt_claims_text_text_invalid_text","_useState9","_useState10","resource_servers_identity_headers_jwt_claims_type","setresource_servers_identity_headers_jwt_claims_type","updateresource_servers_identity_headers_jwt_claims_type","_useState11","_useState12","resource_servers_identity_headers_jwt_claims_attr","setresource_servers_identity_headers_jwt_claims_attr","updateresource_servers_identity_headers_jwt_claims_attr","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","resource_servers_identity_headers_jwt_claims_name_valid","invalidText","resource_servers_identity_headers_jwt_claims_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Select","SelectItem","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/109.795e2f05.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst IdentityHeadersjwtclaimstextDeleteModal = lazy(() => import('./identity_headersjwtclaimstextDeleteModal'));\nconst IdentityHeadersjwtclaimstextAdd = lazy(() => import('./identity_headersjwtclaimstextAdd'));\nconst IdentityHeadersjwtclaimstextEdit = lazy(() => import('./identity_headersjwtclaimstextEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_identity_headers_jwt_claims_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_identity_headers_jwt_claims_name\"] = document.getElementById(\"resource_servers_identity_headers_jwt_claims_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_identity_headers_jwt_claims_type_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_identity_headers_jwt_claims_type\"] = document.getElementById(\"resource_servers_identity_headers_jwt_claims_type_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_identity_headers_jwt_claims_attr_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_identity_headers_jwt_claims_attr\"] = document.getElementById(\"resource_servers_identity_headers_jwt_claims_attr_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_identity_headers_jwt_claims_text\"] = resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text;\n      \n    loadGrid( json[\"resource_servers_identity_headers_jwt_claims_name\"], json[\"resource_servers_identity_headers_jwt_claims_type\"], json[\"resource_servers_identity_headers_jwt_claims_attr\"], json[\"resource_servers_identity_headers_jwt_claims_text\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setresource_servers_identity_headers_jwt_claims_text, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_identity_headers_jwt_claims_name_id\").value = \"\";\n    document.getElementById(\"resource_servers_identity_headers_jwt_claims_type_id\").value = \"\";\n    document.getElementById(\"resource_servers_identity_headers_jwt_claims_attr_id\").value = \"\";\n    resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text = []\n    setresource_servers_identity_headers_jwt_claims_text(resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"identity_headers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addidentity_headersjwt_claimsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_identity_headers_jwt_claims_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_identity_headers_jwt_claims_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_identity_headers_jwt_claims_textheaderData = [\n    {\n    header: 'Text',\n    key: 'text',\n  },\n\n];\n\nconst resource_servers_identity_headers_jwt_claims_textrowData = {resource_servers_identity_headers_jwt_claims_text: []};\n\nconst resource_servers_identity_headers_jwt_claims_texthandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_identity_headers_jwt_claims_text_text_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_identity_headers_jwt_claims_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addidentity_headersjwtclaims_textPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_identity_headers_jwt_claims_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Identity_headersjwt_claimsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [resource_servers_identity_headers_jwt_claims_text, setresource_servers_identity_headers_jwt_claims_text] = React.useState([]);\n    const [fetchedresource_servers_identity_headers_jwt_claims_text, setFetchedresource_servers_identity_headers_jwt_claims_text] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_identity_headers_jwt_claims_textloadGrid();\n    }, [fetchedresource_servers_identity_headers_jwt_claims_text]);\n\n    const resource_servers_identity_headers_jwt_claims_textloadGrid = React.useCallback(async (resource_servers_identity_headers_jwt_claims_text_text, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_identity_headers_jwt_claims_text_text) {\n          if(add) {\n            for(var i = 0; i < resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text.length; i++) {\n              var tempId = ((resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i].text)?resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i].text:\"\") + \"\";\n              if((window.resource_servers_identity_headers_jwt_claims_textediting != true && window.resource_servers_identity_headers_jwt_claims_textediting != \"true\") || tempId != window.resource_servers_identity_headers_jwt_claims_textrowId) {\n                attrs.push(resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i]);\n              }\n            }\n            var newId = ((resource_servers_identity_headers_jwt_claims_text_text)?resource_servers_identity_headers_jwt_claims_text_text:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              text: resource_servers_identity_headers_jwt_claims_text_text,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text.length; i++) {\n              if(resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i].text !== resource_servers_identity_headers_jwt_claims_text_text ) {\n                attrs.push(resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text;\n        }\n        resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text = attrs;\n        const data = {resource_servers_identity_headers_jwt_claims_text: attrs};\n        setresource_servers_identity_headers_jwt_claims_text(data.resource_servers_identity_headers_jwt_claims_text);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [resource_servers_identity_headers_jwt_claims_name, setresource_servers_identity_headers_jwt_claims_name] = useState(''),\n    updateresource_servers_identity_headers_jwt_claims_name = useCallback((evt) => setresource_servers_identity_headers_jwt_claims_name(evt.target.value), []);\n\n    const [resource_servers_identity_headers_jwt_claims_text_text, setresource_servers_identity_headers_jwt_claims_text_text] = useState(''),\n    updateresource_servers_identity_headers_jwt_claims_text_text = useCallback((evt) => {\n      setresource_servers_identity_headers_jwt_claims_text_text(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text, setresource_servers_identity_headers_jwt_claims_text_text_valid, setresource_servers_identity_headers_jwt_claims_text_text_invalid_text, \"Resource Servers Identity Headers Jwt Claims Text\", \"text\", tempId);\n    }, []);\n\n    const [resource_servers_identity_headers_jwt_claims_text_text_valid, setresource_servers_identity_headers_jwt_claims_text_text_valid] = useState(true);\n    const [resource_servers_identity_headers_jwt_claims_text_text_invalid_text, setresource_servers_identity_headers_jwt_claims_text_text_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_identity_headers_jwt_claims_type, setresource_servers_identity_headers_jwt_claims_type] = useState('string'),\n    updateresource_servers_identity_headers_jwt_claims_type = useCallback((evt) => setresource_servers_identity_headers_jwt_claims_type(evt.target.value), []);\n\n    const [resource_servers_identity_headers_jwt_claims_attr, setresource_servers_identity_headers_jwt_claims_attr] = useState(''),\n    updateresource_servers_identity_headers_jwt_claims_attr = useCallback((evt) => setresource_servers_identity_headers_jwt_claims_attr(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text.length; i++) {\n        if(resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i].id === window.resource_servers_identity_headers_jwt_claims_textrowId) {\n        setresource_servers_identity_headers_jwt_claims_text_text((resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i] !== undefined && resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i].text !== undefined )?resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text[i].text:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addidentity_headersjwt_claimsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_identity_headers_jwt_claims_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"text_tab\" + idPrefix}>Text</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Identity Headers / JWT / Claims : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n  <h3>Claims</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_identity_headers_jwt_claims_name_valid}  invalidText={props.resource_servers_identity_headers_jwt_claims_name_invalid_text}  value={props.resource_servers_identity_headers_jwt_claims_name}  id={\"resource_servers_identity_headers_jwt_claims_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_identity_headers_jwt_claims_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateresource_servers_identity_headers_jwt_claims_name}/>\n          <ReactTooltip id={\"resource_servers_identity_headers_jwt_claims_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the claim which is to be added to the JWT. If the name is not specified, and the claim value is obtained from an attribute name, the name of the claim will match the name of the attribute.   Nested objects can be specified, separating the name of each object field with a . (dot).  If the name of a field itself embeds a dot it should be escaped with a backslash character.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                <Select\n                  value={props.resource_servers_identity_headers_jwt_claims_type}\n                   id={\"resource_servers_identity_headers_jwt_claims_type_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_identity_headers_jwt_claims_type_tooltip_id\" + idPrefix}                   labelText=\"Type\"\n                  onChange={props.updateresource_servers_identity_headers_jwt_claims_type}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"string\" value=\"string\" />\n                  <SelectItem text=\"bool\" value=\"bool\" />\n                  <SelectItem text=\"int\" value=\"int\" />\n                </Select>\n          <ReactTooltip id={\"resource_servers_identity_headers_jwt_claims_type_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The type of textual data which is being provided.  This will control the JSON type which is used in the JWT. Please note that this field is only valid if a `text` value has been specified and will be ignored if an `attr` value is specified.<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_identity_headers_jwt_claims_attr}  id={\"resource_servers_identity_headers_jwt_claims_attr_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_identity_headers_jwt_claims_attr_tooltip_id\" + idPrefix}  labelText=\"Attribute\" onChange={props.updateresource_servers_identity_headers_jwt_claims_attr}/>\n          <ReactTooltip id={\"resource_servers_identity_headers_jwt_claims_attr_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the credential attribute from which the claim value will be obtained.  The `*` and `?` pattern matching characters can be used to match multiple attributes, however the pattern matching characters will be ignored if a claim `name` is specified.  If both a `text` value and an `attr` value is specified the `text` value will be used.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_identity_headers_jwt_claims_name || !props.resource_servers_identity_headers_jwt_claims_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"text_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Identity Headers / JWT / Claims : </span><br/>                  <h2>Text Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_identity_headers_jwt_claims_text_tooltip_id\" + idPrefix} >Text</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_identity_headers_jwt_claims_text_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The literal text to be used as the claim value.  If both a `text` value and an `attr` value is specified the `text` value will be used.  If an array is supplied in the configuration the claim will be added to the JWT as a JSON array.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_identity_headers_jwt_claims_textTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_identity_headers_jwt_claims_textTable\" + idPrefix} isSortable\n                        headers={resource_servers_identity_headers_jwt_claims_textheaderData}\n                        rows={resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_identity_headers_jwt_claims_texthandleAdd(idPrefix, [setresource_servers_identity_headers_jwt_claims_text_text(''),    setresource_servers_identity_headers_jwt_claims_text_text_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityHeadersjwtclaimstextDeleteModal row={row} loadGrid={resource_servers_identity_headers_jwt_claims_textloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityHeadersjwtclaimstextEdit  data={resource_servers_identity_headers_jwt_claims_textrowData.resource_servers_identity_headers_jwt_claims_text} setData={setDataMain} row={row} loadGrid={resource_servers_identity_headers_jwt_claims_textloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_identity_headers_jwt_claims_text\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_identity_headers_jwt_claims_text_text={updateresource_servers_identity_headers_jwt_claims_text_text} resource_servers_identity_headers_jwt_claims_text_text={resource_servers_identity_headers_jwt_claims_text_text}\n            resource_servers_identity_headers_jwt_claims_text_text_valid={resource_servers_identity_headers_jwt_claims_text_text_valid}\n            resource_servers_identity_headers_jwt_claims_text_text_invalid_text={resource_servers_identity_headers_jwt_claims_text_text_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_identity_headers_jwt_claims_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_identity_headers_jwt_claims_name || !props.resource_servers_identity_headers_jwt_claims_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityHeadersjwtclaimstextAdd loadGrid={resource_servers_identity_headers_jwt_claims_textloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_identity_headers_jwt_claims_text_text={updateresource_servers_identity_headers_jwt_claims_text_text} resource_servers_identity_headers_jwt_claims_text_text={resource_servers_identity_headers_jwt_claims_text_text}\n            resource_servers_identity_headers_jwt_claims_text_text_valid={resource_servers_identity_headers_jwt_claims_text_text_valid}\n            resource_servers_identity_headers_jwt_claims_text_text_invalid_text={resource_servers_identity_headers_jwt_claims_text_text_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityHeadersjwtclaimstextEdit  loadGrid={resource_servers_identity_headers_jwt_claims_textloadGrid} dataLoad={dataLoad} name={\"resource_servers_identity_headers_jwt_claims_text\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateresource_servers_identity_headers_jwt_claims_text_text={updateresource_servers_identity_headers_jwt_claims_text_text} resource_servers_identity_headers_jwt_claims_text_text={resource_servers_identity_headers_jwt_claims_text_text}\n            resource_servers_identity_headers_jwt_claims_text_text_valid={resource_servers_identity_headers_jwt_claims_text_text_valid}\n            resource_servers_identity_headers_jwt_claims_text_text_invalid_text={resource_servers_identity_headers_jwt_claims_text_text_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Identity_headersjwt_claimsAdd;\n"],"sourceRoot":""}