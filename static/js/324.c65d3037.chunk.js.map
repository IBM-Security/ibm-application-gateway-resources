{"version":3,"sources":["content/serverPage/serversslfront_endsniAdd.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ServersslfrontEndsnicertificateDeleteModal","lazy","all","__webpack_require__","e","bind","ServersslfrontEndsnicertificateAdd","ServersslfrontEndsnicertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","json","document","getElementById","endsWith","server_ssl_front_end_sni_certificaterowData","server_ssl_front_end_sni_certificate","handleClose","handleAdd","setserver_ssl_front_end_sni_certificate","doAdd","updateStyle","style","display","closeAdd","server_ssl_front_end_sni_certificateheaderData","header","server_ssl_front_end_sni_certificatehandleAdd","clearFields","eval","Serversslfront_end_sniAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedserver_ssl_front_end_sni_certificate","setFetchedserver_ssl_front_end_sni_certificate","useEffect","server_ssl_front_end_sni_certificateloadGrid","useCallback","_ref","_asyncToGenerator","_callee","server_ssl_front_end_sni_certificate_certificate","add","attrs","tempId","newId","_context","certificate","window","server_ssl_front_end_sni_certificateediting","server_ssl_front_end_sni_certificaterowId","id","console","log","_x","_x2","apply","arguments","_useState","_useState2","setserver_ssl_front_end_sni_certificate_certificate","updateserver_ssl_front_end_sni_certificate_certificate","evt","target","validateField","setserver_ssl_front_end_sni_certificate_certificate_valid","setserver_ssl_front_end_sni_certificate_certificate_invalid_text","_useState3","_useState4","server_ssl_front_end_sni_certificate_certificate_valid","_useState5","_useState6","server_ssl_front_end_sni_certificate_certificate_invalid_text","_useState7","_useState8","server_ssl_front_end_sni_hostname","setserver_ssl_front_end_sni_hostname","updateserver_ssl_front_end_sni_hostname","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","server_ssl_front_end_sni_hostname_valid","invalidText","server_ssl_front_end_sni_hostname_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/324.c65d3037.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServersslfrontEndsnicertificateDeleteModal = lazy(() => import('./serversslfront_endsnicertificateDeleteModal'));\nconst ServersslfrontEndsnicertificateAdd = lazy(() => import('./serversslfront_endsnicertificateAdd'));\nconst ServersslfrontEndsnicertificateEdit = lazy(() => import('./serversslfront_endsnicertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_ssl_front_end_sni_hostname\"] = document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value;\n    }\n    json[\"server_ssl_front_end_sni_certificate\"] = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n      \n    loadGrid( json[\"server_ssl_front_end_sni_hostname\"], json[\"server_ssl_front_end_sni_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setserver_ssl_front_end_sni_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_ssl_front_end_sni_hostname_id\").value = \"\";\n    server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = []\n    setserver_ssl_front_end_sni_certificate(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversslfront_end_sniPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst server_ssl_front_end_sni_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst server_ssl_front_end_sni_certificaterowData = {server_ssl_front_end_sni_certificate: []};\n\nconst server_ssl_front_end_sni_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"server_ssl_front_end_sni_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversslfront_endsni_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serversslfront_end_sniAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate] = React.useState([]);\n    const [fetchedserver_ssl_front_end_sni_certificate, setFetchedserver_ssl_front_end_sni_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      server_ssl_front_end_sni_certificateloadGrid();\n    }, [fetchedserver_ssl_front_end_sni_certificate]);\n\n    const server_ssl_front_end_sni_certificateloadGrid = React.useCallback(async (server_ssl_front_end_sni_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(server_ssl_front_end_sni_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              var tempId = ((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate)?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\") + \"\";\n              if((window.server_ssl_front_end_sni_certificateediting != true && window.server_ssl_front_end_sni_certificateediting != \"true\") || tempId != window.server_ssl_front_end_sni_certificaterowId) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n            var newId = ((server_ssl_front_end_sni_certificate_certificate)?server_ssl_front_end_sni_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: server_ssl_front_end_sni_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== server_ssl_front_end_sni_certificate_certificate ) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n        }\n        server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = attrs;\n        const data = {server_ssl_front_end_sni_certificate: attrs};\n        setserver_ssl_front_end_sni_certificate(data.server_ssl_front_end_sni_certificate);\n\n        if(server_ssl_front_end_sni_certificate_certificate !== undefined && server_ssl_front_end_sni_certificate_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [server_ssl_front_end_sni_certificate_certificate, setserver_ssl_front_end_sni_certificate_certificate] = useState(''),\n    updateserver_ssl_front_end_sni_certificate_certificate = useCallback((evt) => {\n      setserver_ssl_front_end_sni_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_invalid_text, \"Server Ssl Front End Sni Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [server_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_valid] = useState(true);\n    const [server_ssl_front_end_sni_certificate_certificate_invalid_text, setserver_ssl_front_end_sni_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [server_ssl_front_end_sni_hostname, setserver_ssl_front_end_sni_hostname] = useState(''),\n    updateserver_ssl_front_end_sni_hostname = useCallback((evt) => setserver_ssl_front_end_sni_hostname(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n        if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].id === window.server_ssl_front_end_sni_certificaterowId) {\n        setserver_ssl_front_end_sni_certificate_certificate((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i] !== undefined && server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== undefined )?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversslfront_end_sniPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_ssl_front_end_sni_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"certificate_tab\" + idPrefix}>Certificate</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3>SNI</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_ssl_front_end_sni_hostname_valid}  invalidText={props.server_ssl_front_end_sni_hostname_invalid_text}  value={props.server_ssl_front_end_sni_hostname}  id={\"server_ssl_front_end_sni_hostname_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname *\" onChange={props.updateserver_ssl_front_end_sni_hostname}/>\n          <ReactTooltip id={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the host for this SNI entry.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"certificate_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>Certificate Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>PEM based personal certificate files which will be used when communicating with clients which indicate this host. These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"server_ssl_front_end_sni_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <DataTable id={\"server_ssl_front_end_sni_certificateTable\" + idPrefix} isSortable\n                        headers={server_ssl_front_end_sni_certificateheaderData}\n                        rows={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {server_ssl_front_end_sni_certificatehandleAdd(idPrefix, [setserver_ssl_front_end_sni_certificate_certificate(''),    setserver_ssl_front_end_sni_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateDeleteModal row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateEdit  data={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate} setData={setDataMain} row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateAdd loadGrid={server_ssl_front_end_sni_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateEdit  loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serversslfront_end_sniAdd;\n"],"sourceRoot":""}