{"version":3,"file":"static/js/7680.3afceb69.chunk.js","mappings":"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","sources":["content/servicesPage/serviceskerberoscapathsAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServiceskerberoscapathsrealmsDeleteModal = lazy(() => import('./serviceskerberoscapathsrealmsDeleteModal'));\nconst ServiceskerberoscapathsrealmsAdd = lazy(() => import('./serviceskerberoscapathsrealmsAdd'));\nconst ServiceskerberoscapathsrealmsEdit = lazy(() => import('./serviceskerberoscapathsrealmsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_capaths_client_realm_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_capaths_client_realm\"] = document.getElementById(\"services_kerberos_capaths_client_realm_id\" + idPrefix).value;\n    }\n    json[\"services_kerberos_capaths_realms\"] = services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms;\n      \n    loadGrid( json[\"services_kerberos_capaths_client_realm\"], json[\"services_kerberos_capaths_realms\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_kerberos_capaths_realms, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_kerberos_capaths_client_realm_id\").value = \"\";\n    services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms = []\n    setservices_kerberos_capaths_realms(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserviceskerberos_capathsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_capaths_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_capaths_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_kerberos_capaths_realmsheaderData = [\n    {\n    header: 'Inter Realm',\n    key: 'inter_realm',\n  },\n{\n    header: 'Server Realm',\n    key: 'server_realm',\n  },\n\n];\n\nconst services_kerberos_capaths_realmsrowData = {services_kerberos_capaths_realms: []};\n\nconst services_kerberos_capaths_realmshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_kerberos_capaths_realms_inter_realm_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_kerberos_capaths_realms_server_realm_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_kerberos_capaths_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserviceskerberoscapaths_realmsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_kerberos_capaths_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serviceskerberos_capathsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_kerberos_capaths_realms, setservices_kerberos_capaths_realms] = React.useState([]);\n    const [fetchedservices_kerberos_capaths_realms, setFetchedservices_kerberos_capaths_realms] = React.useState(false);\n\n    React.useEffect(() => {\n      services_kerberos_capaths_realmsloadGrid();\n    }, [fetchedservices_kerberos_capaths_realms]);\n\n    const services_kerberos_capaths_realmsloadGrid = React.useCallback(async (services_kerberos_capaths_realms_inter_realm, services_kerberos_capaths_realms_server_realm, add) => {\n      try {\n        var attrs = [];\n        if(services_kerberos_capaths_realms_server_realm) {\n          if(add) {\n            for(var i = 0; i < services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms.length; i++) {\n              var tempId = ((services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm)?services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm:\"\") + \"\";\n              if((window.services_kerberos_capaths_realmsediting != true && window.services_kerberos_capaths_realmsediting != \"true\") || tempId != window.services_kerberos_capaths_realmsrowId) {\n                attrs.push(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i]);\n              }\n            }\n            var newId = ((services_kerberos_capaths_realms_server_realm)?services_kerberos_capaths_realms_server_realm:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              inter_realm: services_kerberos_capaths_realms_inter_realm,\nserver_realm: services_kerberos_capaths_realms_server_realm,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms.length; i++) {\n              if(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm !== services_kerberos_capaths_realms_server_realm ) {\n                attrs.push(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms;\n        }\n        services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms = attrs;\n        const data = {services_kerberos_capaths_realms: attrs};\n        setservices_kerberos_capaths_realms(data.services_kerberos_capaths_realms);\n\n        if(services_kerberos_capaths_realms_server_realm !== undefined && services_kerberos_capaths_realms_server_realm !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_kerberos_capaths_client_realm, setservices_kerberos_capaths_client_realm] = useState(''),\n    updateservices_kerberos_capaths_client_realm = useCallback((evt) => setservices_kerberos_capaths_client_realm(evt.target.value), []);\n\n    const [services_kerberos_capaths_realms_inter_realm, setservices_kerberos_capaths_realms_inter_realm] = useState(''),\n    updateservices_kerberos_capaths_realms_inter_realm = useCallback((evt) => setservices_kerberos_capaths_realms_inter_realm(evt.target.value), []);\n\n    const [services_kerberos_capaths_realms_server_realm, setservices_kerberos_capaths_realms_server_realm] = useState(''),\n    updateservices_kerberos_capaths_realms_server_realm = useCallback((evt) => {\n      setservices_kerberos_capaths_realms_server_realm(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms, setservices_kerberos_capaths_realms_server_realm_valid, setservices_kerberos_capaths_realms_server_realm_invalid_text, \"Services Kerberos Capaths Realms\", \"server_realm\", tempId);\n    }, []);\n\n    const [services_kerberos_capaths_realms_server_realm_valid, setservices_kerberos_capaths_realms_server_realm_valid] = useState(true);\n    const [services_kerberos_capaths_realms_server_realm_invalid_text, setservices_kerberos_capaths_realms_server_realm_invalid_text] = useState(\"\");\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms.length; i++) {\n        if(services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].id === window.services_kerberos_capaths_realmsrowId) {\n        setservices_kerberos_capaths_realms_inter_realm((services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i] !== undefined && services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].inter_realm !== undefined )?services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].inter_realm:\"\");\n        setservices_kerberos_capaths_realms_server_realm((services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i] !== undefined && services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm !== undefined )?services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms[i].server_realm:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserviceskerberos_capathsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_kerberos_capaths_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"realms_tab\" + idPrefix}>Realms</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_capaths_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / capaths : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_capaths_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n  <h3>Capaths</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_kerberos_capaths_client_realm_valid}  invalidText={props.services_kerberos_capaths_client_realm_invalid_text}  value={props.services_kerberos_capaths_client_realm}  id={\"services_kerberos_capaths_client_realm_id\" + idPrefix}  data-tooltip-id={\"services_kerberos_capaths_client_realm_tooltip_id\" + idPrefix}  labelText=\"Client Realm *\" onChange={props.updateservices_kerberos_capaths_client_realm}/>\n          <ReactTooltip id={\"services_kerberos_capaths_client_realm_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The client realm for this authentication path.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_capaths_client_realm || !props.services_kerberos_capaths_client_realm_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"realms_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_capaths_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / capaths : </span><br/>                  <h2>Realms Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_kerberos_capaths_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"services_kerberos_capaths_realms_tooltip_id\" + idPrefix} >Realms</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_kerberos_capaths_realms_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The realms associated with this capath.<br/></div></ReactTooltip>\n\n                <div id={\"services_kerberos_capaths_realmsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n                    <DataTable id={\"services_kerberos_capaths_realmsTable\" + idPrefix} isSortable\n                        headers={services_kerberos_capaths_realmsheaderData}\n                        rows={services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_kerberos_capaths_realmshandleAdd(idPrefix, [setservices_kerberos_capaths_realms_inter_realm(''),    setservices_kerberos_capaths_realms_server_realm(''),    setservices_kerberos_capaths_realms_server_realm_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberoscapathsrealmsDeleteModal row={row} loadGrid={services_kerberos_capaths_realmsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberoscapathsrealmsEdit  data={services_kerberos_capaths_realmsrowData.services_kerberos_capaths_realms} setData={setDataMain} row={row} loadGrid={services_kerberos_capaths_realmsloadGrid} dataLoad={dataLoad} editing={true} name={\"services_kerberos_capaths_realms\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_capaths_realms_inter_realm={updateservices_kerberos_capaths_realms_inter_realm} services_kerberos_capaths_realms_inter_realm={services_kerberos_capaths_realms_inter_realm}\n            updateservices_kerberos_capaths_realms_server_realm={updateservices_kerberos_capaths_realms_server_realm} services_kerberos_capaths_realms_server_realm={services_kerberos_capaths_realms_server_realm}\n            services_kerberos_capaths_realms_server_realm_valid={services_kerberos_capaths_realms_server_realm_valid}\n            services_kerberos_capaths_realms_server_realm_invalid_text={services_kerberos_capaths_realms_server_realm_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_capaths_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_capaths_client_realm || !props.services_kerberos_capaths_client_realm_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberoscapathsrealmsAdd loadGrid={services_kerberos_capaths_realmsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_kerberos_capaths_realms_inter_realm={updateservices_kerberos_capaths_realms_inter_realm} services_kerberos_capaths_realms_inter_realm={services_kerberos_capaths_realms_inter_realm}\n            updateservices_kerberos_capaths_realms_server_realm={updateservices_kerberos_capaths_realms_server_realm} services_kerberos_capaths_realms_server_realm={services_kerberos_capaths_realms_server_realm}\n            services_kerberos_capaths_realms_server_realm_valid={services_kerberos_capaths_realms_server_realm_valid}\n            services_kerberos_capaths_realms_server_realm_invalid_text={services_kerberos_capaths_realms_server_realm_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberoscapathsrealmsEdit  loadGrid={services_kerberos_capaths_realmsloadGrid} dataLoad={dataLoad} name={\"services_kerberos_capaths_realms\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_capaths_realms_inter_realm={updateservices_kerberos_capaths_realms_inter_realm} services_kerberos_capaths_realms_inter_realm={services_kerberos_capaths_realms_inter_realm}\n            updateservices_kerberos_capaths_realms_server_realm={updateservices_kerberos_capaths_realms_server_realm} services_kerberos_capaths_realms_server_realm={services_kerberos_capaths_realms_server_realm}\n            services_kerberos_capaths_realms_server_realm_valid={services_kerberos_capaths_realms_server_realm_valid}\n            services_kerberos_capaths_realms_server_realm_invalid_text={services_kerberos_capaths_realms_server_realm_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serviceskerberos_capathsAdd;\n"],"names":["ServiceskerberoscapathsrealmsDeleteModal","lazy","ServiceskerberoscapathsrealmsAdd","ServiceskerberoscapathsrealmsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_kerberos_capaths_realmsrowData","services_kerberos_capaths_realms","handleClose","handleAdd","setservices_kerberos_capaths_realms","doAdd","updateStyle","style","display","closeAdd","services_kerberos_capaths_realmsheaderData","header","key","services_kerberos_capaths_realmshandleAdd","clearFields","i","length","eval","Serviceskerberos_capathsAdd","props","row","React","fetchedservices_kerberos_capaths_realms","setFetchedservices_kerberos_capaths_realms","services_kerberos_capaths_realmsloadGrid","async","services_kerberos_capaths_realms_inter_realm","services_kerberos_capaths_realms_server_realm","add","attrs","tempId","server_realm","window","services_kerberos_capaths_realmsediting","services_kerberos_capaths_realmsrowId","push","newId","id","inter_realm","e","console","log","services_kerberos_capaths_client_realm","setservices_kerberos_capaths_client_realm","useState","updateservices_kerberos_capaths_client_realm","useCallback","evt","target","setservices_kerberos_capaths_realms_inter_realm","updateservices_kerberos_capaths_realms_inter_realm","setservices_kerberos_capaths_realms_server_realm","updateservices_kerberos_capaths_realms_server_realm","validateField","setservices_kerberos_capaths_realms_server_realm_valid","setservices_kerberos_capaths_realms_server_realm_invalid_text","services_kerberos_capaths_realms_server_realm_valid","services_kerberos_capaths_realms_server_realm_invalid_text","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","services_kerberos_capaths_client_realm_valid","invalidText","services_kerberos_capaths_client_realm_invalid_text","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix"],"sourceRoot":""}