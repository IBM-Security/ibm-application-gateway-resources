{"version":3,"file":"static/js/4919.37452124.chunk.js","mappings":"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","sources":["content/serverPage/serverssltrust_certificatesDeleteModal.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  TextInput,\n  NumberInput,\n  ComposedModal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  Icon\n} from  'carbon-components-react';\nimport { \n  iconDelete, iconDeleteSolid, iconDeleteOutline, \n} from 'carbon-icons';\n\n// This defines a modal controlled by a launcher button. We have one per DataTable row.\nconst ModalStateManager = ({\n  renderLauncher: LauncherContent,\n  children: ModalContent,\n}) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      {!ModalContent || typeof document === 'undefined'\n        ? null\n        : ReactDOM.createPortal(\n            <ModalContent  \n              open={open} \n              setOpen={setOpen} \n            />,\n            document.body\n          )\n      }\n      {LauncherContent && \n      <LauncherContent \n        open={open} \n        setOpen={setOpen} \n      />\n      }\n    </>\n  );\n};\n\n// Modal properties\nconst deleteProps = {\n  composedModal: ({ titleOnly } = {}) => ({\n    open: true,\n    danger: true,\n    selectorPrimaryFocus: '[data-modal-primary-focus]',\n  }),\n  modalHeader: ({ titleOnly, name } = {}) => ({\n    label: 'Trust Certificates',\n    title: 'Delete Trust Certificates?',\n    iconDescription: 'Close',\n  }),\n  modalBody: () => ({\n    hasScrollingContent: false,\n    'aria-label': 'Delete Trust Certificates?',\n  }),\n  modalFooter: () => ({\n    primaryButtonText: 'Delete',\n    primaryButtonDisabled: false,\n    secondaryButtonText: 'Cancel',\n    shouldCloseAfterSubmit: true,\n    danger: true,\n  }),\n  menuItem: () => ({\n    closeMenu: (event) => { handleSubmit(event); }\n  }),\n  deleteIcon: () => ({\n    style: {\n      margin: '5px',\n    },\n    icon: iconDelete,\n    name: iconDelete,\n    role: 'img',\n    fill: 'grey',\n    fillRule: '',\n    width: '',\n    height: '',\n    description: 'This is a description of the icon and what it does in context',\n    iconTitle: '',\n    className: 'extra-class',\n  }),\n};\n\n// On submit we should be passed the values, not have to look them up\nconst handleSubmit = (server_ssl_trust_certificates_trust_certificates,  loadGrid, setOpen) => {\n \n  // Refresh data\n  loadGrid(server_ssl_trust_certificates_trust_certificates,  false);\n\n  return true;\n}\n\n// The implementation of the Modal\nclass Serverssltrust_certificatesDeleteModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      row: props.row,\n      loadGrid: props.loadGrid,\n      server_ssl_trust_certificates_trust_certificates: this.props.row.cells[0].value,\n      open: false,\n    }\n  }\n\n  render() {\n    // const { open } = this.state.open;\n    const { size, ...rest } = deleteProps.composedModal();\n    const { hasScrollingContent, ...bodyProps } = deleteProps.modalBody();\n\n    return (\n      <ModalStateManager\n        renderLauncher={({ setOpen }) => (\n          <Icon {...deleteProps.deleteIcon()} onClick={() => setOpen(true)} title={this.state.id} />\n        )}>\n        {({ open, setOpen }) => (\n          <ComposedModal\n            {...rest}\n            open={open}\n            row={this.props.row}\n            loadGrid={this.state.loadGrid}\n            size={size || undefined}\n            onClose={() => setOpen(false)}>\n            <ModalHeader {...deleteProps.modalHeader({ titleOnly: true, name: this.state.code + ' ' + this.state.model })} />\n            <ModalBody />\n            <ModalFooter {...deleteProps.modalFooter()} shouldCloseAfterSubmit={true} onRequestSubmit={() => { handleSubmit(this.state.server_ssl_trust_certificates_trust_certificates, this.state.loadGrid, setOpen); }} />\n          </ComposedModal>\n        )}\n      </ModalStateManager>\n    );\n  }\n\n  \n}\n\nexport default Serverssltrust_certificatesDeleteModal;\n","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"names":["ModalStateManager","_ref","renderLauncher","LauncherContent","children","ModalContent","open","setOpen","useState","_jsxs","_Fragment","document","ReactDOM","_jsx","body","deleteProps","titleOnly","arguments","length","undefined","danger","selectorPrimaryFocus","name","label","title","iconDescription","modalBody","hasScrollingContent","modalFooter","primaryButtonText","primaryButtonDisabled","secondaryButtonText","shouldCloseAfterSubmit","deleteIcon","style","margin","icon","iconDelete","role","fill","fillRule","width","height","description","iconTitle","className","handleSubmit","server_ssl_trust_certificates_trust_certificates","loadGrid","Serverssltrust_certificatesDeleteModal","React","constructor","props","super","this","state","row","cells","value","render","_deleteProps$composed","size","rest","_objectWithoutProperties","_excluded","_deleteProps$modalBod","_excluded2","_ref2","Icon","_objectSpread","onClick","id","_ref3","ComposedModal","onClose","ModalHeader","code","model","ModalBody","ModalFooter","onRequestSubmit","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","isPrefixed","split","svgData","iconRef","other","target","i","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","concat","viewBox","ref","svgContent","map","svgProp","data","circle","index","circleProps","cx","cy","r","_extends","path","d","polygon","points","propTypes","PropTypes","isRequired","defaultProps"],"sourceRoot":""}