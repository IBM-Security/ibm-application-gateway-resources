{"version":3,"file":"static/js/8303.8c70181c.chunk.js","mappings":"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","sources":["content/advancedPage/advancedconfigurationAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst AdvancedconfigurationvalueDeleteModal = lazy(() => import('./advancedconfigurationvalueDeleteModal'));\nconst AdvancedconfigurationvalueAdd = lazy(() => import('./advancedconfigurationvalueAdd'));\nconst AdvancedconfigurationvalueEdit = lazy(() => import('./advancedconfigurationvalueEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"advanced_configuration_entry_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"advanced_configuration_entry\"] = document.getElementById(\"advanced_configuration_entry_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"advanced_configuration_operation_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"advanced_configuration_operation\"] = document.getElementById(\"advanced_configuration_operation_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"advanced_configuration_stanza_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"advanced_configuration_stanza\"] = document.getElementById(\"advanced_configuration_stanza_id\" + idPrefix).value;\n    }\n    json[\"advanced_configuration_value\"] = advanced_configuration_valuerowData.advanced_configuration_value;\n      \n    loadGrid( json[\"advanced_configuration_entry\"], json[\"advanced_configuration_operation\"], json[\"advanced_configuration_stanza\"], json[\"advanced_configuration_value\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setadvanced_configuration_value, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"advanced_configuration_entry_id\").value = \"\";\n    document.getElementById(\"advanced_configuration_operation_id\").value = \"\";\n    document.getElementById(\"advanced_configuration_stanza_id\").value = \"\";\n    advanced_configuration_valuerowData.advanced_configuration_value = []\n    setadvanced_configuration_value(advanced_configuration_valuerowData.advanced_configuration_value);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"advanced_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addadvanced_configurationPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"advanced_configuration_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"advanced_configuration_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst advanced_configuration_valueheaderData = [\n    {\n    header: 'Value',\n    key: 'value',\n  },\n\n];\n\nconst advanced_configuration_valuerowData = {advanced_configuration_value: []};\n\nconst advanced_configuration_valuehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"advanced_configuration_value_value_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"advanced_configuration_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addadvancedconfiguration_valuePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"advanced_configuration_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Advanced_configurationAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [advanced_configuration_value, setadvanced_configuration_value] = React.useState([]);\n    const [fetchedadvanced_configuration_value, setFetchedadvanced_configuration_value] = React.useState(false);\n\n    React.useEffect(() => {\n      advanced_configuration_valueloadGrid();\n    }, [fetchedadvanced_configuration_value]);\n\n    const advanced_configuration_valueloadGrid = React.useCallback(async (advanced_configuration_value_value, add) => {\n      try {\n        var attrs = [];\n        if(advanced_configuration_value_value) {\n          if(add) {\n            for(var i = 0; i < advanced_configuration_valuerowData.advanced_configuration_value.length; i++) {\n              var tempId = ((advanced_configuration_valuerowData.advanced_configuration_value[i].value)?advanced_configuration_valuerowData.advanced_configuration_value[i].value:\"\") + \"\";\n              if((window.advanced_configuration_valueediting != true && window.advanced_configuration_valueediting != \"true\") || tempId != window.advanced_configuration_valuerowId) {\n                attrs.push(advanced_configuration_valuerowData.advanced_configuration_value[i]);\n              }\n            }\n            var newId = ((advanced_configuration_value_value)?advanced_configuration_value_value:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              value: advanced_configuration_value_value,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < advanced_configuration_valuerowData.advanced_configuration_value.length; i++) {\n              if(advanced_configuration_valuerowData.advanced_configuration_value[i].value !== advanced_configuration_value_value ) {\n                attrs.push(advanced_configuration_valuerowData.advanced_configuration_value[i]);\n              }\n            }\n          }\n        } else {\n          attrs = advanced_configuration_valuerowData.advanced_configuration_value;\n        }\n        advanced_configuration_valuerowData.advanced_configuration_value = attrs;\n        const data = {advanced_configuration_value: attrs};\n        setadvanced_configuration_value(data.advanced_configuration_value);\n\n        if(advanced_configuration_value_value !== undefined && advanced_configuration_value_value !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [advanced_configuration_entry, setadvanced_configuration_entry] = useState(''),\n    updateadvanced_configuration_entry = useCallback((evt) => setadvanced_configuration_entry(evt.target.value), []);\n\n    const [advanced_configuration_operation, setadvanced_configuration_operation] = useState(''),\n    updateadvanced_configuration_operation = useCallback((evt) => setadvanced_configuration_operation(evt.target.value), []);\n\n    const [advanced_configuration_stanza, setadvanced_configuration_stanza] = useState(''),\n    updateadvanced_configuration_stanza = useCallback((evt) => setadvanced_configuration_stanza(evt.target.value), []);\n\n    const [advanced_configuration_value_value, setadvanced_configuration_value_value] = useState(''),\n    updateadvanced_configuration_value_value = useCallback((evt) => {\n      setadvanced_configuration_value_value(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(advanced_configuration_valuerowData.advanced_configuration_value, setadvanced_configuration_value_value_valid, setadvanced_configuration_value_value_invalid_text, \"Advanced Configuration Value\", \"value\", tempId);\n    }, []);\n\n    const [advanced_configuration_value_value_valid, setadvanced_configuration_value_value_valid] = useState(true);\n    const [advanced_configuration_value_value_invalid_text, setadvanced_configuration_value_value_invalid_text] = useState(\"\");\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < advanced_configuration_valuerowData.advanced_configuration_value.length; i++) {\n        if(advanced_configuration_valuerowData.advanced_configuration_value[i].id === window.advanced_configuration_valuerowId) {\n        setadvanced_configuration_value_value((advanced_configuration_valuerowData.advanced_configuration_value[i] !== undefined && advanced_configuration_valuerowData.advanced_configuration_value[i].value !== undefined )?advanced_configuration_valuerowData.advanced_configuration_value[i].value:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addadvanced_configurationPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"advanced_configuration_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"value_tab\" + idPrefix}>Value</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"value_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading advanced_configuration_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Advanced / Configuration : </span><br/>                  <h2>Value Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div advanced_configuration_div\" + idPrefix}>\n                <div className= {\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"advanced_configuration_value_tooltip_id\" + idPrefix} >Value</h3><hr/>\n</div>\n          <ReactTooltip id={\"advanced_configuration_value_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The value(s) for the new configuration entry. The value is only required for the `add` and `set` operations.<br/></div></ReactTooltip>\n\n                <div id={\"advanced_configuration_valueTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n                    <DataTable id={\"advanced_configuration_valueTable\" + idPrefix} isSortable\n                        headers={advanced_configuration_valueheaderData}\n                        rows={advanced_configuration_valuerowData.advanced_configuration_value}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {advanced_configuration_valuehandleAdd(idPrefix, [setadvanced_configuration_value_value(''),    setadvanced_configuration_value_value_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <AdvancedconfigurationvalueDeleteModal row={row} loadGrid={advanced_configuration_valueloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <AdvancedconfigurationvalueEdit  data={advanced_configuration_valuerowData.advanced_configuration_value} setData={setDataMain} row={row} loadGrid={advanced_configuration_valueloadGrid} dataLoad={dataLoad} editing={true} name={\"advanced_configuration_value\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateadvanced_configuration_value_value={updateadvanced_configuration_value_value} advanced_configuration_value_value={advanced_configuration_value_value}\n            advanced_configuration_value_value_valid={advanced_configuration_value_value_valid}\n            advanced_configuration_value_value_invalid_text={advanced_configuration_value_value_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.advanced_configuration_entry || !props.advanced_configuration_entry_valid) || (!props.advanced_configuration_stanza || !props.advanced_configuration_stanza_valid) || (!props.advanced_configuration_operation || !props.advanced_configuration_operation_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading advanced_configuration_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Advanced / Configuration : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div advanced_configuration_div\" + idPrefix}>\n                <div className= {\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n          <TextInput  invalid={!props.advanced_configuration_entry_valid}  invalidText={props.advanced_configuration_entry_invalid_text}  value={props.advanced_configuration_entry}  id={\"advanced_configuration_entry_id\" + idPrefix}  data-tooltip-id={\"advanced_configuration_entry_tooltip_id\" + idPrefix}  labelText=\"Entry *\" onChange={props.updateadvanced_configuration_entry}/>\n          <ReactTooltip id={\"advanced_configuration_entry_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the configuration entry.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n                <Select\n                  value={props.advanced_configuration_operation}\n                   id={\"advanced_configuration_operation_id\" + idPrefix}\n data-tooltip-id={\"advanced_configuration_operation_tooltip_id\" + idPrefix}                   labelText=\"Operation *\"\n                  onChange={props.updateadvanced_configuration_operation}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"delete\" value=\"delete\" />\n                  <SelectItem text=\"add\" value=\"add\" />\n                  <SelectItem text=\"set\" value=\"set\" />\n                </Select>\n          <ReactTooltip id={\"advanced_configuration_operation_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The operation to be perform on the configuration entry.<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n          <TextInput  invalid={!props.advanced_configuration_stanza_valid}  invalidText={props.advanced_configuration_stanza_invalid_text}  value={props.advanced_configuration_stanza}  id={\"advanced_configuration_stanza_id\" + idPrefix}  data-tooltip-id={\"advanced_configuration_stanza_tooltip_id\" + idPrefix}  labelText=\"Stanza *\" onChange={props.updateadvanced_configuration_stanza}/>\n          <ReactTooltip id={\"advanced_configuration_stanza_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the configuration stanza which contains the configuration entry.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem advanced_configuration_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.advanced_configuration_entry || !props.advanced_configuration_entry_valid) || (!props.advanced_configuration_stanza || !props.advanced_configuration_stanza_valid) || (!props.advanced_configuration_operation || !props.advanced_configuration_operation_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <AdvancedconfigurationvalueAdd loadGrid={advanced_configuration_valueloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateadvanced_configuration_value_value={updateadvanced_configuration_value_value} advanced_configuration_value_value={advanced_configuration_value_value}\n            advanced_configuration_value_value_valid={advanced_configuration_value_value_valid}\n            advanced_configuration_value_value_invalid_text={advanced_configuration_value_value_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <AdvancedconfigurationvalueEdit  loadGrid={advanced_configuration_valueloadGrid} dataLoad={dataLoad} name={\"advanced_configuration_value\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateadvanced_configuration_value_value={updateadvanced_configuration_value_value} advanced_configuration_value_value={advanced_configuration_value_value}\n            advanced_configuration_value_value_valid={advanced_configuration_value_value_valid}\n            advanced_configuration_value_value_invalid_text={advanced_configuration_value_value_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Advanced_configurationAdd;\n"],"names":["AdvancedconfigurationvalueDeleteModal","lazy","AdvancedconfigurationvalueAdd","AdvancedconfigurationvalueEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","advanced_configuration_valuerowData","advanced_configuration_value","handleClose","handleAdd","setadvanced_configuration_value","doAdd","updateStyle","style","display","closeAdd","advanced_configuration_valueheaderData","header","key","advanced_configuration_valuehandleAdd","clearFields","i","length","eval","Advanced_configurationAdd","props","row","React","fetchedadvanced_configuration_value","setFetchedadvanced_configuration_value","advanced_configuration_valueloadGrid","async","advanced_configuration_value_value","add","attrs","tempId","window","advanced_configuration_valueediting","advanced_configuration_valuerowId","push","newId","id","e","console","log","advanced_configuration_entry","setadvanced_configuration_entry","useState","updateadvanced_configuration_entry","useCallback","evt","target","advanced_configuration_operation","setadvanced_configuration_operation","updateadvanced_configuration_operation","advanced_configuration_stanza","setadvanced_configuration_stanza","updateadvanced_configuration_stanza","setadvanced_configuration_value_value","updateadvanced_configuration_value_value","validateField","setadvanced_configuration_value_value_valid","setadvanced_configuration_value_value_invalid_text","advanced_configuration_value_value_valid","advanced_configuration_value_value_invalid_text","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","tabIndex","ReactTooltip","clickable","place","effect","maxWidth","marginLeft","marginBottom","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Button","onClick","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix","disabled","advanced_configuration_entry_valid","advanced_configuration_stanza_valid","advanced_configuration_operation_valid","TextInput","invalid","invalidText","advanced_configuration_entry_invalid_text","labelText","onChange","Select","SelectItem","text","advanced_configuration_stanza_invalid_text"],"sourceRoot":""}