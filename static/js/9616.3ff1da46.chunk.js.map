{"version":3,"file":"static/js/9616.3ff1da46.chunk.js","mappings":"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","sources":["content/serverPage/serverprotocolsAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_protocols_protocols_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_protocols_protocols\"] = document.getElementById(\"server_protocols_protocols_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"server_protocols_protocols\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_protocols_protocols_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserver_protocolsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_protocols_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_protocols_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Server_protocolsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [server_protocols_protocols, setserver_protocols_protocols] = useState('https'),\n    updateserver_protocols_protocols = useCallback((evt) => setserver_protocols_protocols(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserver_protocolsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_protocols_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_protocols_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / Protocols : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_protocols_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_protocols_div\" + idPrefix}>\n                <Select\n                  value={props.server_protocols_protocols}\n                   id={\"server_protocols_protocols_id\" + idPrefix}\n data-tooltip-id={\"server_protocols_protocols_tooltip_id\" + idPrefix}                   labelText=\"Protocol *\"\n                  onChange={props.updateserver_protocols_protocols}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"http\" value=\"http\" />\n                  <SelectItem text=\"https\" value=\"https\" />\n                  <SelectItem text=\"http_proxy\" value=\"http_proxy\" />\n                  <SelectItem text=\"https_proxy\" value=\"https_proxy\" />\n                </Select>\n          <ReactTooltip id={\"server_protocols_protocols_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name(s) of the protocols which the gateway will listen on.<br/></div></ReactTooltip>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_protocols_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_protocols_protocols || !props.server_protocols_protocols_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Server_protocolsAdd;\n"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Server_protocolsAdd","props","row","server_protocols_protocols","setserver_protocols_protocols","useState","updateserver_protocols_protocols","useCallback","evt","target","fetcheddata","setFetcheddata","React","dataLoad","setDataMain","functionName","data","eval","_jsx","children","id","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","Select","labelText","onChange","SelectItem","text","ReactTooltip","clickable","place","effect","maxWidth","Button","onClick","disabled","server_protocols_protocols_valid"],"sourceRoot":""}