{"version":3,"sources":["content/resource_serversPage/aliasesAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","AliasesAdd","props","row","_useState","useState","_useState2","_slicedToArray","resource_servers_aliases_aliases","setresource_servers_aliases_aliases","updateresource_servers_aliases_aliases","useCallback","evt","target","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","resource_servers_aliases_aliases_valid","invalidText","resource_servers_aliases_aliases_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick"],"mappings":"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","file":"static/js/118.86110c66.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_aliases_aliases_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_aliases_aliases\"] = document.getElementById(\"resource_servers_aliases_aliases_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"resource_servers_aliases_aliases\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_aliases_aliases_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"aliases_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addaliasesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_aliases_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_aliases_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst AliasesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [resource_servers_aliases_aliases, setresource_servers_aliases_aliases] = useState(''),\n    updateresource_servers_aliases_aliases = useCallback((evt) => setresource_servers_aliases_aliases(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addaliasesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_aliases_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_aliases_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Aliases : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_aliases_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_aliases_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_aliases_aliases_valid}  invalidText={props.resource_servers_aliases_aliases_invalid_text}  value={props.resource_servers_aliases_aliases}  id={\"resource_servers_aliases_aliases_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_aliases_aliases_tooltip_id\" + idPrefix}  labelText=\"Aliases *\" onChange={props.updateresource_servers_aliases_aliases}/>\n          <ReactTooltip id={\"resource_servers_aliases_aliases_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The format of the alias should be: `&lt;host&gt;:&lt;port&gt;`. Note that the port is required even if the default HTTP or HTTPS ports are used.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_aliases_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default AliasesAdd;\n"],"sourceRoot":""}