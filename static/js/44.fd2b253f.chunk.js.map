{"version":3,"sources":["content/policiesPage/policiesauthorizationmethodsAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Policiesauthorization_methodsAdd","props","row","_useState","useState","_useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","policies_authorization_methods_methods","setpolicies_authorization_methods_methods","updatepolicies_authorization_methods_methods","useCallback","evt","target","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","id","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_5__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_2__","invalid","policies_authorization_methods_methods_valid","invalidText","policies_authorization_methods_methods_invalid_text","labelText","onChange","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","onClick","disabled"],"mappings":"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","file":"static/js/44.fd2b253f.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_authorization_methods_methods_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_methods_methods\"] = document.getElementById(\"policies_authorization_methods_methods_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"policies_authorization_methods_methods\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_authorization_methods_methods_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"methods_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpoliciesauthorization_methodsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_authorization_methods_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_authorization_methods_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Policiesauthorization_methodsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [policies_authorization_methods_methods, setpolicies_authorization_methods_methods] = useState(''),\n    updatepolicies_authorization_methods_methods = useCallback((evt) => setpolicies_authorization_methods_methods(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpoliciesauthorization_methodsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_authorization_methods_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_methods_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization / Methods : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_authorization_methods_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_methods_div\" + idPrefix}>\n  <h3>Method</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_authorization_methods_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_authorization_methods_methods_valid}  invalidText={props.policies_authorization_methods_methods_invalid_text}  value={props.policies_authorization_methods_methods}  id={\"policies_authorization_methods_methods_id\" + idPrefix}  labelText=\"Method *\" onChange={props.updatepolicies_authorization_methods_methods}/>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_methods_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_methods_methods || !props.policies_authorization_methods_methods_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Policiesauthorization_methodsAdd;\n"],"sourceRoot":""}