{"version":3,"sources":["content/servicesPage/servicesrediscollectionsserversAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ServicesrediscollectionsserversssltrustCertificatesDeleteModal","lazy","all","__webpack_require__","bind","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","ServicesrediscollectionsserverssslclientCertificateDeleteModal","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","setservices_redis_collections_servers_ssl_trust_certificates","setservices_redis_collections_servers_ssl_client_certificate","doAdd","updateStyle","style","display","closeAdd","services_redis_collections_servers_ssl_trust_certificatesheaderData","header","key","services_redis_collections_servers_ssl_trust_certificateshandleAdd","clearFields","eval","services_redis_collections_servers_ssl_client_certificateheaderData","services_redis_collections_servers_ssl_client_certificatehandleAdd","Servicesrediscollections_serversAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","useEffect","services_redis_collections_servers_ssl_trust_certificatesloadGrid","useCallback","_ref","_asyncToGenerator","_callee","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","add","attrs","tempId","newId","_context","trust_certificates","window","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","id","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","_ref2","_callee2","services_redis_collections_servers_ssl_client_certificate_client_certificate","_context2","client_certificate","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","_x3","_x4","_useState","_useState2","services_redis_collections_servers_name","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","evt","target","_useState3","_useState4","services_redis_collections_servers_host","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","_useState5","_useState6","services_redis_collections_servers_port","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","_useState7","_useState8","services_redis_collections_servers_username","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","_useState9","_useState10","services_redis_collections_servers_password","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","_useState11","_useState12","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","validateField","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState13","_useState14","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","_useState15","_useState16","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState17","_useState18","setservices_redis_collections_servers_ssl_client_certificate_client_certificate","updateservices_redis_collections_servers_ssl_client_certificate_client_certificate","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState19","_useState20","services_redis_collections_servers_ssl_client_certificate_client_certificate_valid","_useState21","_useState22","services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState23","_useState24","services_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","services_redis_collections_servers_name_valid","invalidText","services_redis_collections_servers_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","NumberInput","min","label","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","_ref4"],"mappings":"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","file":"static/js/64.f6f73cf4.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_name\"] = document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_host\"] = document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_port\"] = document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_username\"] = document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_password\"] = document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_ssl_sni\"] = document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_ssl_client_certificate\"] = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n    json[\"services_redis_collections_servers_ssl_trust_certificates\"] = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"services_redis_collections_servers_name\"], json[\"services_redis_collections_servers_host\"], json[\"services_redis_collections_servers_port\"], json[\"services_redis_collections_servers_username\"], json[\"services_redis_collections_servers_password\"], json[\"services_redis_collections_servers_ssl_sni\"], json[\"services_redis_collections_servers_ssl_client_certificate\"], json[\"services_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_client_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_redis_collections_servers_name_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_host_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_port_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_username_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_password_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_ssl_sni_id\").value = \"\";\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = []\n    setservices_redis_collections_servers_ssl_trust_certificates(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = []\n    setservices_redis_collections_servers_ssl_client_certificate(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservicesrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Servicesrediscollections_serversAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => setservices_redis_collections_servers_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, \"Services Redis Collections Servers Ssl Trust Certificates\", \"trust_certificates\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateservices_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, \"Services Redis Collections Servers Ssl Client Certificate\", \"client_certificate\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].id === window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i] !== undefined && services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].id === window.services_redis_collections_servers_ssl_client_certificaterowId) {\n        setservices_redis_collections_servers_ssl_client_certificate_client_certificate((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i] !== undefined && services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservicesrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_redis_collections_servers_name_valid}  invalidText={props.services_redis_collections_servers_name_invalid_text}  value={props.services_redis_collections_servers_name}  id={\"services_redis_collections_servers_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_servers_name}/>\n          <ReactTooltip id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_host}  id={\"services_redis_collections_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_redis_collections_servers_host}/>\n          <ReactTooltip id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_servers_port} id={\"services_redis_collections_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateservices_redis_collections_servers_port}/>\n          <ReactTooltip id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_username}  id={\"services_redis_collections_servers_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_redis_collections_servers_username}/>\n          <ReactTooltip id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_password}  id={\"services_redis_collections_servers_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_redis_collections_servers_password}/>\n          <ReactTooltip id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  The SSL information associated with the Redis server.\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesEdit  data={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateEdit  data={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_ssl_sni}  id={\"services_redis_collections_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesAdd loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesEdit  loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateAdd loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateEdit  loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Servicesrediscollections_serversAdd;\n"],"sourceRoot":""}