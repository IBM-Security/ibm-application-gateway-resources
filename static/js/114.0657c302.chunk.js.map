{"version":3,"sources":["content/resource_serversPage/serversEdit.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ServerssslcertificateDeleteModal","lazy","__webpack_require__","bind","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","pName","len","style","display","updateStyle","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","port","host","ssl","certificate","newItem","i2","id","resource_servers","ServersEdit","props","row","toolbarName","_React$useState","React","useState","_React$useState2","_slicedToArray","setresource_servers_servers_ssl_certificate","_React$useState3","_React$useState4","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","useEffect","resource_servers_servers_ssl_certificateloadGrid","useCallback","_ref","_asyncToGenerator","_callee","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","newId","_context","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","console","log","_x","_x2","apply","arguments","_useState","_useState2","resource_servers_servers_host","setresource_servers_servers_host","updateresource_servers_servers_host","evt","target","_useState3","_useState4","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","_useState5","_useState6","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","_useState7","_useState8","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","_useState9","_useState10","resource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_valid","_useState11","_useState12","resource_servers_servers_ssl_certificate_certificate_invalid_text","setresource_servers_servers_ssl_certificate_certificate_invalid_text","_useState13","_useState14","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","_useState15","_useState16","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","_useState17","_useState18","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","_useState19","_useState20","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","_useState21","_useState22","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","setDataMain","functionName","editing","createElement","Icon","assign","editProps","editIcon","onClick","title","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","Checkbox","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","TextInput","NumberInput","min","max","label","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback"],"mappings":"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","file":"static/js/114.0657c302.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].port)?data[i].port:\"\") + ((data[i].host)?data[i].host:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.certificate !== undefined ) {\n              if(typeof data[i].ssl.certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.certificate;\n                newItem[\"certificate\"] = data[i].ssl.certificate;\n                resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.certificate[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].id;\n                  } else if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2];\n                  }\n                  if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2];\n                  }\n                  resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n                }\n              }\n              setData(\"setresource_servers_servers_ssl_certificate\", resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.resource_servers !== undefined ) {\n      }\n    }\n  };\nconst ServersEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => setresource_servers_servers_ssl_certificate_certificate(evt.target.value), []);\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ServersEdit;\n"],"sourceRoot":""}