{"version":3,"sources":["content/servicesPage/servicesrediscollectionsserversEdit.js"],"names":["ServicesrediscollectionsserversssltrustCertificatesDeleteModal","lazy","__webpack_require__","e","then","bind","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","ServicesrediscollectionsserverssslclientCertificateDeleteModal","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","len","slice","style","display","updateStyle","closeAdd","services_redis_collections_servers_ssl_trust_certificatesheaderData","header","key","services_redis_collections_servers_ssl_trust_certificateshandleAdd","clearFields","eval","services_redis_collections_servers_ssl_client_certificateheaderData","services_redis_collections_servers_ssl_client_certificatehandleAdd","getEditData","yamlText","iagyaml","safeLoad","name","ssl","trust_certificates","newItem","push","i2","id","client_certificate","services","redis","collections","Servicesrediscollections_serversEdit","props","row","toolbarName","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setservices_redis_collections_servers_ssl_trust_certificates","_React$useState3","_React$useState4","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","useEffect","services_redis_collections_servers_ssl_trust_certificatesloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","add","attrs","tempId","newId","wrap","_context","prev","next","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_React$useState5","_React$useState6","setservices_redis_collections_servers_ssl_client_certificate","_React$useState7","_React$useState8","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","_ref2","_callee2","services_redis_collections_servers_ssl_client_certificate_client_certificate","_context2","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","_x3","_x4","_useState","_useState2","services_redis_collections_servers_name","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","evt","target","_useState3","_useState4","services_redis_collections_servers_host","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","_useState5","_useState6","services_redis_collections_servers_port","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","_useState7","_useState8","services_redis_collections_servers_username","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","_useState9","_useState10","services_redis_collections_servers_password","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","_useState11","_useState12","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","_useState13","_useState14","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","_useState15","_useState16","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState17","_useState18","setservices_redis_collections_servers_ssl_client_certificate_client_certificate","updateservices_redis_collections_servers_ssl_client_certificate_client_certificate","_useState19","_useState20","services_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid","_useState21","_useState22","services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState23","_useState24","services_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","setDataMain","functionName","editing","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","assign","editProps","editIcon","onClick","title","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_20__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_21__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","min","label","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","disabled","services_redis_collections_servers_name_valid","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_17__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","_ref4"],"mappings":"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","file":"static/js/63.23005d35.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_name\"] = document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_host\"] = document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_port\"] = document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_username\"] = document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_password\"] = document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_ssl_sni\"] = document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_ssl_client_certificate\"] = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n    json[\"services_redis_collections_servers_ssl_trust_certificates\"] = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"services_redis_collections_servers_name\"], json[\"services_redis_collections_servers_host\"], json[\"services_redis_collections_servers_port\"], json[\"services_redis_collections_servers_username\"], json[\"services_redis_collections_servers_password\"], json[\"services_redis_collections_servers_ssl_sni\"], json[\"services_redis_collections_servers_ssl_client_certificate\"], json[\"services_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editservicesrediscollections_serversPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editservicesrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = [];\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].name)?data[i].name:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.trust_certificates !== undefined ) {\n              if(typeof data[i].ssl.trust_certificates === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.trust_certificates;\n                newItem[\"trust_certificates\"] = data[i].ssl.trust_certificates;\n                services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.trust_certificates.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.trust_certificates[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.trust_certificates[i2].id;\n                  } else if(data[i].ssl.trust_certificates[i2].trust_certificates) {\n                    newItem[\"id\"] = data[i].ssl.trust_certificates[i2].trust_certificates;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.trust_certificates[i2];\n                  }\n                  if(data[i].ssl.trust_certificates[i2].trust_certificates) {\n                    newItem[\"trust_certificates\"] = data[i].ssl.trust_certificates[i2].trust_certificates;\n                  } else {\n                    newItem[\"trust_certificates\"] = data[i].ssl.trust_certificates[i2];\n                  }\n                  services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.push(newItem);\n                }\n              }\n              setData(\"setservices_redis_collections_servers_ssl_trust_certificates\", services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n            }\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.client_certificate !== undefined ) {\n              if(typeof data[i].ssl.client_certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.client_certificate;\n                newItem[\"client_certificate\"] = data[i].ssl.client_certificate;\n                services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.client_certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.client_certificate[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.client_certificate[i2].id;\n                  } else if(data[i].ssl.client_certificate[i2].client_certificate) {\n                    newItem[\"id\"] = data[i].ssl.client_certificate[i2].client_certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.client_certificate[i2];\n                  }\n                  if(data[i].ssl.client_certificate[i2].client_certificate) {\n                    newItem[\"client_certificate\"] = data[i].ssl.client_certificate[i2].client_certificate;\n                  } else {\n                    newItem[\"client_certificate\"] = data[i].ssl.client_certificate[i2];\n                  }\n                  services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.push(newItem);\n                }\n              }\n              setData(\"setservices_redis_collections_servers_ssl_client_certificate\", services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.services !== undefined && json.services.redis !== undefined && json.services.redis.collections !== undefined ) {\n      }\n    }\n  };\nconst Servicesrediscollections_serversEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => setservices_redis_collections_servers_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value), []);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateservices_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => setservices_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value), []);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].id === window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i] !== undefined && services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].id === window.services_redis_collections_servers_ssl_client_certificaterowId) {\n        setservices_redis_collections_servers_ssl_client_certificate_client_certificate((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i] !== undefined && services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editservicesrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"services_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_name}  id={\"services_redis_collections_servers_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_servers_name}/>\n          <ReactTooltip id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_host}  id={\"services_redis_collections_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_redis_collections_servers_host}/>\n          <ReactTooltip id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_servers_port} id={\"services_redis_collections_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateservices_redis_collections_servers_port}/>\n          <ReactTooltip id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_username}  id={\"services_redis_collections_servers_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_redis_collections_servers_username}/>\n          <ReactTooltip id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_password}  id={\"services_redis_collections_servers_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_redis_collections_servers_password}/>\n          <ReactTooltip id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  The SSL information associated with the Redis server.\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesEdit  data={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateEdit  data={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_ssl_sni}  id={\"services_redis_collections_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesAdd loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesEdit  loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateAdd loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateEdit  loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Servicesrediscollections_serversEdit;\n"],"sourceRoot":""}