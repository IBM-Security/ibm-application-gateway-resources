{"version":3,"sources":["content/authorizationPage/authorizationrulesAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Authorization_rulesAdd","props","row","_useState","useState","_useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","authorization_rules_name","setauthorization_rules_name","updateauthorization_rules_name","useCallback","evt","target","_useState3","_useState4","authorization_rules_rule","setauthorization_rules_rule","updateauthorization_rules_rule","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","id","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_5__","defaultTab","vertical","overflow","tabFor","width","tabId","height","carbon_components_react__WEBPACK_IMPORTED_MODULE_2__","invalid","authorization_rules_name_valid","invalidText","authorization_rules_name_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_6__","place","effect","maxWidth","authorization_rules_rule_valid","authorization_rules_rule_invalid_text","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","onClick","disabled"],"mappings":"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","file":"static/js/238.5e45cc76.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"authorization_rules_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"authorization_rules_name\"] = document.getElementById(\"authorization_rules_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"authorization_rules_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"authorization_rules_rule\"] = document.getElementById(\"authorization_rules_rule_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"authorization_rules_name\"], json[\"authorization_rules_rule\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"authorization_rules_name_id\").value = \"\";\n    document.getElementById(\"authorization_rules_rule_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"authorization_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addauthorization_rulesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"authorization_rules_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"authorization_rules_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Authorization_rulesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [authorization_rules_name, setauthorization_rules_name] = useState(''),\n    updateauthorization_rules_name = useCallback((evt) => setauthorization_rules_name(evt.target.value), []);\n\n    const [authorization_rules_rule, setauthorization_rules_rule] = useState(''),\n    updateauthorization_rules_rule = useCallback((evt) => setauthorization_rules_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addauthorization_rulesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"authorization_rules_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading authorization_rules_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Authorization / Rules : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div authorization_rules_div\" + idPrefix}>\n                <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.authorization_rules_name_valid}  invalidText={props.authorization_rules_name_invalid_text}  value={props.authorization_rules_name}  id={\"authorization_rules_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"authorization_rules_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateauthorization_rules_name}/>\n          <ReactTooltip id={\"authorization_rules_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which will be given to this authorization rule.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.authorization_rules_rule_valid}  invalidText={props.authorization_rules_rule_invalid_text}  value={props.authorization_rules_rule}  id={\"authorization_rules_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"authorization_rules_rule_tooltip_id\" + idPrefix}  labelText=\"Rule *\" onChange={props.updateauthorization_rules_rule}/>\n          <ReactTooltip id={\"authorization_rules_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The authorization rule. See the Rule Format table for a description of the expected format.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.authorization_rules_name || !props.authorization_rules_name_valid) || (!props.authorization_rules_rule || !props.authorization_rules_rule_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Authorization_rulesAdd;\n"],"sourceRoot":""}