{"version":3,"sources":["content/authorizationPage/authorizationrulesAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Authorization_rulesAdd","props","row","_useState","useState","_useState2","_slicedToArray","authorization_rules_name","setauthorization_rules_name","updateauthorization_rules_name","useCallback","evt","target","_useState3","_useState4","authorization_rules_rule","setauthorization_rules_rule","updateauthorization_rules_rule","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","authorization_rules_name_valid","invalidText","authorization_rules_name_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","authorization_rules_rule_valid","authorization_rules_rule_invalid_text","Button","onClick","disabled"],"mappings":"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","file":"static/js/238.5e45cc76.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"authorization_rules_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"authorization_rules_name\"] = document.getElementById(\"authorization_rules_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"authorization_rules_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"authorization_rules_rule\"] = document.getElementById(\"authorization_rules_rule_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"authorization_rules_name\"], json[\"authorization_rules_rule\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"authorization_rules_name_id\").value = \"\";\n    document.getElementById(\"authorization_rules_rule_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"authorization_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addauthorization_rulesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"authorization_rules_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"authorization_rules_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Authorization_rulesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [authorization_rules_name, setauthorization_rules_name] = useState(''),\n    updateauthorization_rules_name = useCallback((evt) => setauthorization_rules_name(evt.target.value), []);\n\n    const [authorization_rules_rule, setauthorization_rules_rule] = useState(''),\n    updateauthorization_rules_rule = useCallback((evt) => setauthorization_rules_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addauthorization_rulesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"authorization_rules_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading authorization_rules_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Authorization / Rules : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div authorization_rules_div\" + idPrefix}>\n                <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.authorization_rules_name_valid}  invalidText={props.authorization_rules_name_invalid_text}  value={props.authorization_rules_name}  id={\"authorization_rules_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"authorization_rules_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateauthorization_rules_name}/>\n          <ReactTooltip id={\"authorization_rules_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which will be given to this authorization rule.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.authorization_rules_rule_valid}  invalidText={props.authorization_rules_rule_invalid_text}  value={props.authorization_rules_rule}  id={\"authorization_rules_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"authorization_rules_rule_tooltip_id\" + idPrefix}  labelText=\"Rule *\" onChange={props.updateauthorization_rules_rule}/>\n          <ReactTooltip id={\"authorization_rules_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The authorization rule. See the Rule Format table for a description of the expected format.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.authorization_rules_name || !props.authorization_rules_name_valid) || (!props.authorization_rules_rule || !props.authorization_rules_rule_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Authorization_rulesAdd;\n"],"sourceRoot":""}