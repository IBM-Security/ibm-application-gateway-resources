{"version":3,"file":"static/js/7260.1f16b1bf.chunk.js","mappings":"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","sources":["content/authorizationPage/authorizationrulesAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"authorization_rules_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"authorization_rules_name\"] = document.getElementById(\"authorization_rules_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"authorization_rules_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"authorization_rules_rule\"] = document.getElementById(\"authorization_rules_rule_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"authorization_rules_name\"], json[\"authorization_rules_rule\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"authorization_rules_name_id\").value = \"\";\n    document.getElementById(\"authorization_rules_rule_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"authorization_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addauthorization_rulesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"authorization_rules_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"authorization_rules_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Authorization_rulesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [authorization_rules_name, setauthorization_rules_name] = useState(''),\n    updateauthorization_rules_name = useCallback((evt) => setauthorization_rules_name(evt.target.value), []);\n\n    const [authorization_rules_rule, setauthorization_rules_rule] = useState(''),\n    updateauthorization_rules_rule = useCallback((evt) => setauthorization_rules_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addauthorization_rulesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"authorization_rules_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading authorization_rules_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Authorization / Rules : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div authorization_rules_div\" + idPrefix}>\n                <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.authorization_rules_name_valid}  invalidText={props.authorization_rules_name_invalid_text}  value={props.authorization_rules_name}  id={\"authorization_rules_name_id\" + idPrefix}  data-tooltip-id={\"authorization_rules_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateauthorization_rules_name}/>\n          <ReactTooltip id={\"authorization_rules_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which will be given to this authorization rule.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.authorization_rules_rule_valid}  invalidText={props.authorization_rules_rule_invalid_text}  value={props.authorization_rules_rule}  id={\"authorization_rules_rule_id\" + idPrefix}  data-tooltip-id={\"authorization_rules_rule_tooltip_id\" + idPrefix}  labelText=\"Rule *\" onChange={props.updateauthorization_rules_rule}/>\n          <ReactTooltip id={\"authorization_rules_rule_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The authorization rule. See the Rule Format table for a description of the expected format.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem authorization_rules_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.authorization_rules_name || !props.authorization_rules_name_valid) || (!props.authorization_rules_rule || !props.authorization_rules_rule_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Authorization_rulesAdd;\n"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Authorization_rulesAdd","props","row","authorization_rules_name","setauthorization_rules_name","useState","updateauthorization_rules_name","useCallback","evt","target","authorization_rules_rule","setauthorization_rules_rule","updateauthorization_rules_rule","fetcheddata","setFetcheddata","React","dataLoad","setDataMain","functionName","data","eval","_jsx","children","id","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","authorization_rules_name_valid","invalidText","authorization_rules_name_invalid_text","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","authorization_rules_rule_valid","authorization_rules_rule_invalid_text","Button","onClick","disabled"],"sourceRoot":""}