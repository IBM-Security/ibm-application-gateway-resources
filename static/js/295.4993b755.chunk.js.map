{"version":3,"sources":["content/policiesPage/policieshttp_transformationsresponseAdd.js"],"names":["PolicieshttpTransformationsresponsepathsDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","PolicieshttpTransformationsresponsepathsAdd","PolicieshttpTransformationsresponsepathsEdit","PolicieshttpTransformationsresponseattributesDeleteModal","PolicieshttpTransformationsresponseattributesAdd","PolicieshttpTransformationsresponseattributesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","policies_http_transformations_response_pathsrowData","policies_http_transformations_response_paths","policies_http_transformations_response_attributesrowData","policies_http_transformations_response_attributes","handleClose","handleAdd","setpolicies_http_transformations_response_paths","setpolicies_http_transformations_response_attributes","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_response_pathsheaderData","header","key","policies_http_transformations_response_pathshandleAdd","clearFields","i","length","eval","policies_http_transformations_response_attributesheaderData","policies_http_transformations_response_attributeshandleAdd","Policieshttp_transformations_responseAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_React$useState3","_React$useState4","fetchedpolicies_http_transformations_response_paths","setFetchedpolicies_http_transformations_response_paths","useEffect","policies_http_transformations_response_pathsloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","policies_http_transformations_response_paths_paths","add","attrs","tempId","newId","wrap","_context","prev","next","paths","window","policies_http_transformations_response_pathsediting","policies_http_transformations_response_pathsrowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedpolicies_http_transformations_response_attributes","setFetchedpolicies_http_transformations_response_attributes","policies_http_transformations_response_attributesloadGrid","_ref2","_callee2","policies_http_transformations_response_attributes_attributes","_context2","attributes","policies_http_transformations_response_attributesediting","policies_http_transformations_response_attributesrowId","_x3","_x4","_useState","_useState2","policies_http_transformations_response_name","setpolicies_http_transformations_response_name","updatepolicies_http_transformations_response_name","evt","target","_useState3","_useState4","policies_http_transformations_response_host","setpolicies_http_transformations_response_host","updatepolicies_http_transformations_response_host","_useState5","_useState6","setpolicies_http_transformations_response_paths_paths","updatepolicies_http_transformations_response_paths_paths","validateField","setpolicies_http_transformations_response_paths_paths_valid","setpolicies_http_transformations_response_paths_paths_invalid_text","_useState7","_useState8","policies_http_transformations_response_paths_paths_valid","_useState9","_useState10","policies_http_transformations_response_paths_paths_invalid_text","_useState11","_useState12","policies_http_transformations_response_method","setpolicies_http_transformations_response_method","updatepolicies_http_transformations_response_method","_useState13","_useState14","policies_http_transformations_response_rule","setpolicies_http_transformations_response_rule","updatepolicies_http_transformations_response_rule","_useState15","_useState16","setpolicies_http_transformations_response_attributes_attributes","updatepolicies_http_transformations_response_attributes_attributes","setpolicies_http_transformations_response_attributes_attributes_valid","setpolicies_http_transformations_response_attributes_attributes_invalid_text","_useState17","_useState18","policies_http_transformations_response_attributes_attributes_valid","_useState19","_useState20","policies_http_transformations_response_attributes_attributes_invalid_text","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_16__","defaultTab","vertical","overflow","tabFor","width","tabId","height","tabIndex","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","react_tooltip__WEBPACK_IMPORTED_MODULE_17__","place","effect","maxWidth","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","onClick","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","setData","editing","name","parentIdPrefix","disabled","policies_http_transformations_response_name_valid","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","invalid","invalidText","policies_http_transformations_response_name_invalid_text","labelText","onChange","_ref4"],"mappings":"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","file":"static/js/295.4993b755.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationsresponsepathsDeleteModal = lazy(() => import('./policieshttp_transformationsresponsepathsDeleteModal'));\nconst PolicieshttpTransformationsresponsepathsAdd = lazy(() => import('./policieshttp_transformationsresponsepathsAdd'));\nconst PolicieshttpTransformationsresponsepathsEdit = lazy(() => import('./policieshttp_transformationsresponsepathsEdit'));\nconst PolicieshttpTransformationsresponseattributesDeleteModal = lazy(() => import('./policieshttp_transformationsresponseattributesDeleteModal'));\nconst PolicieshttpTransformationsresponseattributesAdd = lazy(() => import('./policieshttp_transformationsresponseattributesAdd'));\nconst PolicieshttpTransformationsresponseattributesEdit = lazy(() => import('./policieshttp_transformationsresponseattributesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_name\"] = document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_host\"] = document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_method\"] = document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_rule\"] = document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_response_paths\"] = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n    json[\"policies_http_transformations_response_attributes\"] = policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes;\n      \n    loadGrid( json[\"policies_http_transformations_response_name\"], json[\"policies_http_transformations_response_host\"], json[\"policies_http_transformations_response_method\"], json[\"policies_http_transformations_response_rule\"], json[\"policies_http_transformations_response_paths\"], json[\"policies_http_transformations_response_attributes\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_response_paths, setpolicies_http_transformations_response_attributes, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_response_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_rule_id\").value = \"\";\n    policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = []\n    setpolicies_http_transformations_response_paths(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths);\n\n    policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes = []\n    setpolicies_http_transformations_response_attributes(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_responsePage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_response_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_response_pathsrowData = {policies_http_transformations_response_paths: []};\n\nconst policies_http_transformations_response_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst policies_http_transformations_response_attributesheaderData = [\n    {\n    header: 'Attribute',\n    key: 'attributes',\n  },\n\n];\n\nconst policies_http_transformations_response_attributesrowData = {policies_http_transformations_response_attributes: []};\n\nconst policies_http_transformations_response_attributeshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_attributes_attributes_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_attributesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_responseAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_paths, setFetchedpolicies_http_transformations_response_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_response_paths]);\n\n    const policies_http_transformations_response_pathsloadGrid = React.useCallback(async (policies_http_transformations_response_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              var tempId = ((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths)?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_response_pathsediting != true && window.policies_http_transformations_response_pathsediting != \"true\") || tempId != window.policies_http_transformations_response_pathsrowId) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_paths_paths)?policies_http_transformations_response_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_response_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== policies_http_transformations_response_paths_paths ) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n        }\n        policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = attrs;\n        const data = {policies_http_transformations_response_paths: attrs};\n        setpolicies_http_transformations_response_paths(data.policies_http_transformations_response_paths);\n\n        if(policies_http_transformations_response_paths_paths !== undefined && policies_http_transformations_response_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [policies_http_transformations_response_attributes, setpolicies_http_transformations_response_attributes] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_attributes, setFetchedpolicies_http_transformations_response_attributes] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_attributesloadGrid();\n    }, [fetchedpolicies_http_transformations_response_attributes]);\n\n    const policies_http_transformations_response_attributesloadGrid = React.useCallback(async (policies_http_transformations_response_attributes_attributes, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_attributes_attributes) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n              var tempId = ((policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes)?policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes:\"\") + \"\";\n              if((window.policies_http_transformations_response_attributesediting != true && window.policies_http_transformations_response_attributesediting != \"true\") || tempId != window.policies_http_transformations_response_attributesrowId) {\n                attrs.push(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_attributes_attributes)?policies_http_transformations_response_attributes_attributes:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              attributes: policies_http_transformations_response_attributes_attributes,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n              if(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes !== policies_http_transformations_response_attributes_attributes ) {\n                attrs.push(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes;\n        }\n        policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes = attrs;\n        const data = {policies_http_transformations_response_attributes: attrs};\n        setpolicies_http_transformations_response_attributes(data.policies_http_transformations_response_attributes);\n\n        if(policies_http_transformations_response_attributes_attributes !== undefined && policies_http_transformations_response_attributes_attributes !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_response_name, setpolicies_http_transformations_response_name] = useState(''),\n    updatepolicies_http_transformations_response_name = useCallback((evt) => setpolicies_http_transformations_response_name(evt.target.value), []);\n\n    const [policies_http_transformations_response_host, setpolicies_http_transformations_response_host] = useState(''),\n    updatepolicies_http_transformations_response_host = useCallback((evt) => setpolicies_http_transformations_response_host(evt.target.value), []);\n\n    const [policies_http_transformations_response_paths_paths, setpolicies_http_transformations_response_paths_paths] = useState(''),\n    updatepolicies_http_transformations_response_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_response_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_invalid_text, \"Policies Http Transformations Response Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_response_paths_paths_invalid_text, setpolicies_http_transformations_response_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_response_method, setpolicies_http_transformations_response_method] = useState(''),\n    updatepolicies_http_transformations_response_method = useCallback((evt) => setpolicies_http_transformations_response_method(evt.target.value), []);\n\n    const [policies_http_transformations_response_rule, setpolicies_http_transformations_response_rule] = useState(''),\n    updatepolicies_http_transformations_response_rule = useCallback((evt) => setpolicies_http_transformations_response_rule(evt.target.value), []);\n\n    const [policies_http_transformations_response_attributes_attributes, setpolicies_http_transformations_response_attributes_attributes] = useState(''),\n    updatepolicies_http_transformations_response_attributes_attributes = useCallback((evt) => {\n      setpolicies_http_transformations_response_attributes_attributes(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes, setpolicies_http_transformations_response_attributes_attributes_valid, setpolicies_http_transformations_response_attributes_attributes_invalid_text, \"Policies Http Transformations Response Attributes\", \"attributes\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_attributes_attributes_valid, setpolicies_http_transformations_response_attributes_attributes_valid] = useState(true);\n    const [policies_http_transformations_response_attributes_attributes_invalid_text, setpolicies_http_transformations_response_attributes_attributes_invalid_text] = useState(\"\");\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n        if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].id === window.policies_http_transformations_response_pathsrowId) {\n        setpolicies_http_transformations_response_paths_paths((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i] !== undefined && policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== undefined )?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\");\n        }\n      }\n\n      for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n        if(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].id === window.policies_http_transformations_response_attributesrowId) {\n        setpolicies_http_transformations_response_attributes_attributes((policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i] !== undefined && policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes !== undefined )?policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_responsePage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_response_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"attributes_tab\" + idPrefix}>Attributes</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"attributes_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Attributes Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_attributes_tooltip_id\" + idPrefix} >Attributes</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_attributes_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the rule is a legacy XSLT based rule, this entry specifies the credential  attributes which will be included in the XML input document, used when  evaluating the HTTP transformation rule.  The attributes will be stored in the HTTPResponse/credential/attributes/attribute path of the XML document.<br/>This is entry is not required and has no effect when using a Lua transformation rule.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_attributesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_attributesTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_attributesheaderData}\n                        rows={policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_attributeshandleAdd(idPrefix, [setpolicies_http_transformations_response_attributes_attributes(''),    setpolicies_http_transformations_response_attributes_attributes_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponseattributesDeleteModal row={row} loadGrid={policies_http_transformations_response_attributesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponseattributesEdit  data={policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_attributesloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3>Response</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_response_name_valid}  invalidText={props.policies_http_transformations_response_name_invalid_text}  value={props.policies_http_transformations_response_name}  id={\"policies_http_transformations_response_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_response_name}/>\n          <ReactTooltip id={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_host}  id={\"policies_http_transformations_response_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_response_host}/>\n          <ReactTooltip id={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_method}  id={\"policies_http_transformations_response_method_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_response_method}/>\n          <ReactTooltip id={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_rule}  id={\"policies_http_transformations_response_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_response_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched.  This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_pathsheaderData}\n                        rows={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_pathshandleAdd(idPrefix, [setpolicies_http_transformations_response_paths_paths(''),    setpolicies_http_transformations_response_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsDeleteModal row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsEdit  data={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsAdd loadGrid={policies_http_transformations_response_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsEdit  loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponseattributesAdd loadGrid={policies_http_transformations_response_attributesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponseattributesEdit  loadGrid={policies_http_transformations_response_attributesloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_responseAdd;\n"],"sourceRoot":""}