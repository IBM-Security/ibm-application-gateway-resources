{"version":3,"sources":["content/loggingPage/loggingtracingAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Logging_tracingAdd","props","row","_useState","useState","_useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","logging_tracing_component","setlogging_tracing_component","updatelogging_tracing_component","useCallback","evt","target","_useState3","_useState4","logging_tracing_file_name","setlogging_tracing_file_name","updatelogging_tracing_file_name","_useState5","_useState6","logging_tracing_level","setlogging_tracing_level","updatelogging_tracing_level","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","id","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_6__","defaultTab","vertical","overflow","tabFor","width","tabId","height","carbon_components_react__WEBPACK_IMPORTED_MODULE_2__","invalid","logging_tracing_component_valid","invalidText","logging_tracing_component_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_7__","place","effect","maxWidth","logging_tracing_file_name_valid","logging_tracing_file_name_invalid_text","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","min","max","label","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","onClick","disabled"],"mappings":"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","file":"static/js/261.53dd6f96.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"logging_tracing_component_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_component\"] = document.getElementById(\"logging_tracing_component_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_file_name\"] = document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_level\"] = document.getElementById(\"logging_tracing_level_id\" + idPrefix).value;\n      \n    loadGrid( json[\"logging_tracing_component\"], json[\"logging_tracing_file_name\"], json[\"logging_tracing_level\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"logging_tracing_component_id\").value = \"\";\n    document.getElementById(\"logging_tracing_file_name_id\").value = \"\";\n    document.getElementById(\"logging_tracing_level_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"logging_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addlogging_tracingPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"logging_tracing_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"logging_tracing_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Logging_tracingAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [logging_tracing_component, setlogging_tracing_component] = useState(''),\n    updatelogging_tracing_component = useCallback((evt) => setlogging_tracing_component(evt.target.value), []);\n\n    const [logging_tracing_file_name, setlogging_tracing_file_name] = useState(''),\n    updatelogging_tracing_file_name = useCallback((evt) => setlogging_tracing_file_name(evt.target.value), []);\n\n    const [logging_tracing_level, setlogging_tracing_level] = useState(0),\n    updatelogging_tracing_level = useCallback((evt) => {}, []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addlogging_tracingPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"logging_tracing_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading logging_tracing_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Logging / Tracing : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div logging_tracing_div\" + idPrefix}>\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  invalid={!props.logging_tracing_component_valid}  invalidText={props.logging_tracing_component_invalid_text}  value={props.logging_tracing_component}  id={\"logging_tracing_component_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_component_tooltip_id\" + idPrefix}  labelText=\"Component *\" onChange={props.updatelogging_tracing_component}/>\n          <ReactTooltip id={\"logging_tracing_component_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the tracing component to be enabled. Refer to the troubleshooting documentation for the full list of component names.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  invalid={!props.logging_tracing_file_name_valid}  invalidText={props.logging_tracing_file_name_invalid_text}  value={props.logging_tracing_file_name}  id={\"logging_tracing_file_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_file_name_tooltip_id\" + idPrefix}  labelText=\"File Name *\" onChange={props.updatelogging_tracing_file_name}/>\n          <ReactTooltip id={\"logging_tracing_file_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the generated log file.  If the file name is supplied without any path information the file will be written to the `/var/iag/logs` directory.  If the file name contains path information the hosting directory must be created and available before the container is started.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_level} id={\"logging_tracing_level_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_level_tooltip_id\" + idPrefix}  min={0}  max={9}  label=\"Level\" onChange={props.updatelogging_tracing_level}/>\n          <ReactTooltip id={\"logging_tracing_level_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The level of detail to be gathered by the tracing component in the range 0 to 9. Level 1 specifies the least detailed output and level 9 specifies the most detailed output. Level 0 will disable tracing for the component.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.logging_tracing_component || !props.logging_tracing_component_valid) || (!props.logging_tracing_file_name || !props.logging_tracing_file_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Logging_tracingAdd;\n"],"sourceRoot":""}