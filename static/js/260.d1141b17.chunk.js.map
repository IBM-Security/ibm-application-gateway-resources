{"version":3,"sources":["content/identityPage/identityauth_challenge_redirectparametersAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Identityauth_challenge_redirect_parametersAdd","props","row","_useState","useState","_useState2","_slicedToArray","identity_auth_challenge_redirect_parameters_name","setidentity_auth_challenge_redirect_parameters_name","updateidentity_auth_challenge_redirect_parameters_name","useCallback","evt","target","_useState3","_useState4","identity_auth_challenge_redirect_parameters_source","setidentity_auth_challenge_redirect_parameters_source","updateidentity_auth_challenge_redirect_parameters_source","_useState5","_useState6","identity_auth_challenge_redirect_parameters_value","setidentity_auth_challenge_redirect_parameters_value","updateidentity_auth_challenge_redirect_parameters_value","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Select","SelectItem","text","invalid","identity_auth_challenge_redirect_parameters_value_valid","invalidText","identity_auth_challenge_redirect_parameters_value_invalid_text","Button","onClick","disabled","identity_auth_challenge_redirect_parameters_source_valid"],"mappings":"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","file":"static/js/260.d1141b17.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"identity_auth_challenge_redirect_parameters_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_auth_challenge_redirect_parameters_name\"] = document.getElementById(\"identity_auth_challenge_redirect_parameters_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_auth_challenge_redirect_parameters_source_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_auth_challenge_redirect_parameters_source\"] = document.getElementById(\"identity_auth_challenge_redirect_parameters_source_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_auth_challenge_redirect_parameters_value_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_auth_challenge_redirect_parameters_value\"] = document.getElementById(\"identity_auth_challenge_redirect_parameters_value_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"identity_auth_challenge_redirect_parameters_name\"], json[\"identity_auth_challenge_redirect_parameters_source\"], json[\"identity_auth_challenge_redirect_parameters_value\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"identity_auth_challenge_redirect_parameters_name_id\").value = \"\";\n    document.getElementById(\"identity_auth_challenge_redirect_parameters_source_id\").value = \"\";\n    document.getElementById(\"identity_auth_challenge_redirect_parameters_value_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"identity_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addidentityauth_challenge_redirect_parametersPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"identity_auth_challenge_redirect_parameters_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"identity_auth_challenge_redirect_parameters_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Identityauth_challenge_redirect_parametersAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [identity_auth_challenge_redirect_parameters_name, setidentity_auth_challenge_redirect_parameters_name] = useState(''),\n    updateidentity_auth_challenge_redirect_parameters_name = useCallback((evt) => setidentity_auth_challenge_redirect_parameters_name(evt.target.value), []);\n\n    const [identity_auth_challenge_redirect_parameters_source, setidentity_auth_challenge_redirect_parameters_source] = useState(''),\n    updateidentity_auth_challenge_redirect_parameters_source = useCallback((evt) => setidentity_auth_challenge_redirect_parameters_source(evt.target.value), []);\n\n    const [identity_auth_challenge_redirect_parameters_value, setidentity_auth_challenge_redirect_parameters_value] = useState(''),\n    updateidentity_auth_challenge_redirect_parameters_value = useCallback((evt) => setidentity_auth_challenge_redirect_parameters_value(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addidentityauth_challenge_redirect_parametersPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"identity_auth_challenge_redirect_parameters_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Identity / Auth Challenge Redirect / Parameters : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n                <div className= {\"iag_form_elem identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n  <h3>Parameters</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n          <TextInput  value={props.identity_auth_challenge_redirect_parameters_name}  id={\"identity_auth_challenge_redirect_parameters_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"identity_auth_challenge_redirect_parameters_name_tooltip_id\" + idPrefix}  labelText=\"Name\" onChange={props.updateidentity_auth_challenge_redirect_parameters_name}/>\n          <ReactTooltip id={\"identity_auth_challenge_redirect_parameters_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which should be used to name the parameter inserted into the redirect URL. If this value is not specified, the parameter will be named accordingly:<br/><br/>  - For `macro` sources, the name will be used verbatim.<br/>  - For `header` sources, the name will be of the format `HTTPHDR_&lt;name&gt;`<br/>  - For `credential` sources, the name will be of the format `CREDATTR_&lt;name&gt;`<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n                <Select\n                  value={props.identity_auth_challenge_redirect_parameters_source}\n                   id={\"identity_auth_challenge_redirect_parameters_source_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"identity_auth_challenge_redirect_parameters_source_tooltip_id\" + idPrefix}                   labelText=\"Source *\"\n                  onChange={props.updateidentity_auth_challenge_redirect_parameters_source}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"macro\" value=\"macro\" />\n                  <SelectItem text=\"header\" value=\"header\" />\n                  <SelectItem text=\"credential\" value=\"credential\" />\n                </Select>\n          <ReactTooltip id={\"identity_auth_challenge_redirect_parameters_source_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The source the value should be taken from.<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n          <TextInput  invalid={!props.identity_auth_challenge_redirect_parameters_value_valid}  invalidText={props.identity_auth_challenge_redirect_parameters_value_invalid_text}  value={props.identity_auth_challenge_redirect_parameters_value}  id={\"identity_auth_challenge_redirect_parameters_value_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"identity_auth_challenge_redirect_parameters_value_tooltip_id\" + idPrefix}  labelText=\"Value *\" onChange={props.updateidentity_auth_challenge_redirect_parameters_value}/>\n          <ReactTooltip id={\"identity_auth_challenge_redirect_parameters_value_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the macro, HTTP header or credential attribute the value will be taken from.<br/>When using the `macro` type source, valid values are:<br/><br/>  - `TAM_OP`<br/>  - `USERNAME`<br/>  - `METHOD`<br/>  - `URL`<br/>  - `REFERER`<br/>  - `HOSTNAME`<br/>  - `PROTOCOL`<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem identity_auth_challenge_redirect_parameters_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.identity_auth_challenge_redirect_parameters_value || !props.identity_auth_challenge_redirect_parameters_value_valid) || (!props.identity_auth_challenge_redirect_parameters_source || !props.identity_auth_challenge_redirect_parameters_source_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Identityauth_challenge_redirect_parametersAdd;\n"],"sourceRoot":""}