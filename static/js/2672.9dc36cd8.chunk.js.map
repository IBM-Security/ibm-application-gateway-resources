{"version":3,"file":"static/js/2672.9dc36cd8.chunk.js","mappings":"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","sources":["content/serverPage/serversslfront_endsniEdit.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServersslfrontEndsnicertificateDeleteModal = lazy(() => import('./serversslfront_endsnicertificateDeleteModal'));\nconst ServersslfrontEndsnicertificateAdd = lazy(() => import('./serversslfront_endsnicertificateAdd'));\nconst ServersslfrontEndsnicertificateEdit = lazy(() => import('./serversslfront_endsnicertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_ssl_front_end_sni_hostname\"] = document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value;\n    }\n    json[\"server_ssl_front_end_sni_certificate\"] = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n      \n    loadGrid( json[\"server_ssl_front_end_sni_hostname\"], json[\"server_ssl_front_end_sni_certificate\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_ssl_front_end_sni\")) {\n        var len = \"_ssl_front_end_sni\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserversslfront_end_sniPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_ssl_front_end_sni\")) {\n        var len = \"_ssl_front_end_sni\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserversslfront_end_sniPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst server_ssl_front_end_sni_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst server_ssl_front_end_sni_certificaterowData = {server_ssl_front_end_sni_certificate: []};\n\nconst server_ssl_front_end_sni_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"server_ssl_front_end_sni_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversslfront_endsni_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].hostname)?data[i].hostname:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].certificate !== undefined ) {\n              if(typeof data[i].certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].certificate;\n                newItem[\"certificate\"] = data[i].certificate;\n                server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].certificate[i2].id) {\n                    newItem[\"id\"] = data[i].certificate[i2].id;\n                  } else if(data[i].certificate[i2].certificate) {\n                    newItem[\"id\"] = data[i].certificate[i2].certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].certificate[i2];\n                  }\n                  if(data[i].certificate[i2].certificate) {\n                    newItem[\"certificate\"] = data[i].certificate[i2].certificate;\n                  } else {\n                    newItem[\"certificate\"] = data[i].certificate[i2];\n                  }\n                  server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.push(newItem);\n                }\n              }\n              setData(\"setserver_ssl_front_end_sni_certificate\", server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.server !== undefined && json.server.ssl !== undefined && json.server.ssl.front_end !== undefined && json.server.ssl.front_end.sni !== undefined ) {\n        for(var i = 0; i < json.server.ssl.front_end.sni.length; i++) {\n          var tempId = ((json.serversslfront_end_sni[i].hostname)?json.serversslfront_end_sni[i].hostname:\"\");\n          if(tempId === window[oName + \"rowId\"]) {\n            if(json !== undefined && json.server !== undefined && json.server.ssl !== undefined && json.server.ssl.front_end !== undefined && json.server.ssl.front_end.sni[i] !== undefined && json.server.ssl.front_end.sni[i].certificate !== undefined ) {\n              for(var i2 = 0; i2 < json.server.ssl.front_end.sni[i].certificate.length; i2++) {\n                var newItem = {};\n                newItem.id = json.server.ssl.front_end.sni[i].certificate[i2];\n                newItem.certificate = json.server.ssl.front_end.sni[i].certificate[i2];\n                server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.push(newItem);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\nconst Serversslfront_end_sniEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate] = React.useState([]);\n    const [fetchedserver_ssl_front_end_sni_certificate, setFetchedserver_ssl_front_end_sni_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      server_ssl_front_end_sni_certificateloadGrid();\n    }, [fetchedserver_ssl_front_end_sni_certificate]);\n\n    const server_ssl_front_end_sni_certificateloadGrid = React.useCallback(async (server_ssl_front_end_sni_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(server_ssl_front_end_sni_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              var tempId = ((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate)?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\") + \"\";\n              if((window.server_ssl_front_end_sni_certificateediting != true && window.server_ssl_front_end_sni_certificateediting != \"true\") || tempId != window.server_ssl_front_end_sni_certificaterowId) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n            var newId = ((server_ssl_front_end_sni_certificate_certificate)?server_ssl_front_end_sni_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: server_ssl_front_end_sni_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== server_ssl_front_end_sni_certificate_certificate ) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n        }\n        server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = attrs;\n        const data = {server_ssl_front_end_sni_certificate: attrs};\n        setserver_ssl_front_end_sni_certificate(data.server_ssl_front_end_sni_certificate);\n\n        if(server_ssl_front_end_sni_certificate_certificate !== undefined && server_ssl_front_end_sni_certificate_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [server_ssl_front_end_sni_certificate_certificate, setserver_ssl_front_end_sni_certificate_certificate] = useState(''),\n    updateserver_ssl_front_end_sni_certificate_certificate = useCallback((evt) => setserver_ssl_front_end_sni_certificate_certificate(evt.target.value), []);\n    const [server_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_valid] = useState(true);\n    const [server_ssl_front_end_sni_certificate_certificate_invalid_text, setserver_ssl_front_end_sni_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [server_ssl_front_end_sni_hostname, setserver_ssl_front_end_sni_hostname] = useState(''),\n    updateserver_ssl_front_end_sni_hostname = useCallback((evt) => setserver_ssl_front_end_sni_hostname(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n        if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].id === window.server_ssl_front_end_sni_certificaterowId) {\n        setserver_ssl_front_end_sni_certificate_certificate((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i] !== undefined && server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== undefined )?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserversslfront_end_sniPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"server_ssl_front_end_sni_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"certificate_tab\" + idPrefix}>Certificate</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3>SNI</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n          <TextInput  value={props.server_ssl_front_end_sni_hostname}  id={\"server_ssl_front_end_sni_hostname_id\" + idPrefix}  data-tooltip-id={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname *\" onChange={props.updateserver_ssl_front_end_sni_hostname}/>\n          <ReactTooltip id={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the host for this SNI entry.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"certificate_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>Certificate Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>PEM based personal certificate files which will be used when communicating with clients which indicate this host. These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"server_ssl_front_end_sni_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <DataTable id={\"server_ssl_front_end_sni_certificateTable\" + idPrefix} isSortable\n                        headers={server_ssl_front_end_sni_certificateheaderData}\n                        rows={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {server_ssl_front_end_sni_certificatehandleAdd(idPrefix, [setserver_ssl_front_end_sni_certificate_certificate(''),    setserver_ssl_front_end_sni_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateDeleteModal row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateEdit  data={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate} setData={setDataMain} row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateAdd loadGrid={server_ssl_front_end_sni_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateEdit  loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Serversslfront_end_sniEdit;\n","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"names":["ServersslfrontEndsnicertificateDeleteModal","lazy","ServersslfrontEndsnicertificateAdd","ServersslfrontEndsnicertificateEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","server_ssl_front_end_sni_certificaterowData","server_ssl_front_end_sni_certificate","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","slice","style","display","updateStyle","closeAdd","server_ssl_front_end_sni_certificateheaderData","header","key","server_ssl_front_end_sni_certificatehandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","hostname","certificate","newItem","push","i2","id","server","ssl","front_end","sni","serversslfront_end_sni","Serversslfront_end_sniEdit","props","row","name","toolbarName","setserver_ssl_front_end_sni_certificate","React","fetchedserver_ssl_front_end_sni_certificate","setFetchedserver_ssl_front_end_sni_certificate","server_ssl_front_end_sni_certificateloadGrid","async","server_ssl_front_end_sni_certificate_certificate","add","attrs","tempId","server_ssl_front_end_sni_certificateediting","server_ssl_front_end_sni_certificaterowId","newId","e","console","log","setserver_ssl_front_end_sni_certificate_certificate","useState","updateserver_ssl_front_end_sni_certificate_certificate","useCallback","evt","target","server_ssl_front_end_sni_certificate_certificate_valid","setserver_ssl_front_end_sni_certificate_certificate_valid","server_ssl_front_end_sni_certificate_certificate_invalid_text","setserver_ssl_front_end_sni_certificate_certificate_invalid_text","server_ssl_front_end_sni_hostname","setserver_ssl_front_end_sni_hostname","updateserver_ssl_front_end_sni_hostname","fetcheddata","setFetcheddata","setDataMain","functionName","editing","_jsx","Icon","_objectSpread","editProps","editIcon","onClick","title","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","disabled","server_ssl_front_end_sni_hostname_valid","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","isPrefixed","split","svgData","iconTitle","description","fill","fillRule","icon","role","iconRef","other","_objectWithoutProperties","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","concat","viewBox","ref","svgContent","svgProp","circle","index","circleProps","cx","cy","r","_extends","path","d","polygon","points","propTypes","PropTypes","isRequired","defaultProps"],"sourceRoot":""}