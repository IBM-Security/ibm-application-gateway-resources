{"version":3,"file":"static/js/5023.18a4354d.chunk.js","mappings":"w6DA2BA,MAAMA,oDAAqDC,EAAAA,mCAAAA,MAAK,IAAM,iIAChEC,4CAA6CD,EAAAA,mCAAAA,MAAK,IAAM,sFACxDE,6CAA8CF,EAAAA,mCAAAA,MAAK,IAAM,sFAGvDG,aAAeA,OAGfC,WAAaA,CAACC,EAAUC,EAAUC,UAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,CAAC,GAEmG,IAA5GC,SAASC,eAAe,gDAAkDL,GAAUM,MAAMC,SAAS,OACpGJ,EAAiD,2CAAIC,SAASC,eAAe,gDAAkDL,GAAUM,QAE1B,IAA9GF,SAASC,eAAe,kDAAoDL,GAAUM,MAAMC,SAAS,OACtGJ,EAAmD,6CAAIC,SAASC,eAAe,kDAAoDL,GAAUM,QAEhC,IAA5GF,SAASC,eAAe,gDAAkDL,GAAUM,MAAMC,SAAS,OACpGJ,EAAiD,2CAAIC,SAASC,eAAe,gDAAkDL,GAAUM,QAE5B,IAA5GF,SAASC,eAAe,gDAAkDL,GAAUM,MAAMC,SAAS,OACpGJ,EAAiD,2CAAIC,SAASC,eAAe,gDAAkDL,GAAUM,OAE3IH,EAAkD,4CAAIK,mDAAmDC,4CAEzGV,EAAUI,EAAiD,2CAAGA,EAAmD,6CAAGA,EAAiD,2CAAGA,EAAiD,2CAAGA,EAAkD,6CAAG,GAEjRO,YAAYV,EAAUC,IAGlBU,UAAYA,CAACC,EAAgDZ,EAAUa,EAAOZ,UAClEC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,iDAAiDC,MAAQ,GACjFF,SAASC,eAAe,mDAAmDC,MAAQ,GACnFF,SAASC,eAAe,iDAAiDC,MAAQ,GACjFF,SAASC,eAAe,iDAAiDC,MAAQ,GACjFE,mDAAmDC,4CAA8C,GACjGG,EAA+CJ,mDAAmDC,6CAG/FI,GACDA,IAGFH,YAAYV,EAAWC,IAGnBS,YAAcA,CAACV,EAAUC,MAC7Ba,EAAAA,uCAAAA,IAAY,eAAiBd,EAAU,UAAW,SAClDI,SAASC,eAAe,8CAAgDL,GAAUe,MAAMC,QAAU,OAE7Ff,GACDA,KAIAgB,SAAYjB,SACEE,IAAbF,IAAwBA,EAAW,KAEtCc,EAAAA,uCAAAA,IAAY,4CAA8Cd,EAAU,UAAW,SAC/EI,SAASC,eAAe,4CAA8CL,GAAUe,MAAMC,QAAU,QAIhGE,sDAAwD,CAC1D,CACAC,OAAQ,OACRC,IAAK,UAKHZ,mDAAqD,CAACC,4CAA6C,IAEnGY,qDAAuDA,CAACrB,SAAUsB,eAIpE,QAHgBpB,IAAbF,WAAwBA,SAAW,IAGnCsB,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBnB,SAASC,eAAe,uDAAyDL,UAAUM,MAAQ,IAEnGQ,EAAAA,uCAAAA,IAAY,4CAA8Cd,SAAU,UAAW,QAE/EI,SAASC,eAAe,mDAAqDL,UAAUe,MAAMC,QAAU,QAEvGZ,SAASC,eAAe,4CAA8CL,UAAUe,MAAMC,QAAU,QAI9FU,wCAA2CC,QAE7C,IAAIC,IAAMD,MAAMC,IAChB,MAAM7B,SAAW4B,MAAM5B,SACjBE,QAAU0B,MAAM1B,QAChBD,SAAY2B,MAAM3B,SAAU2B,MAAM3B,SAAS,IAE1CS,4CAA6CG,gDAAkDiB,mCAAAA,SAAe,KAC9GC,mDAAoDC,uDAAyDF,mCAAAA,UAAe,GAEnIA,mCAAAA,UAAgB,KACdG,uDACC,CAACF,qDAEJ,MAAME,oDAAsDH,mCAAAA,YAAkBI,MAAOC,EAAmDC,KACtI,IACE,IAAIC,EAAQ,GACZ,GAAGF,EACD,GAAGC,EAAK,CACN,IAAI,IAAIZ,EAAI,EAAGA,EAAIf,mDAAmDC,4CAA4Ce,OAAQD,IAAK,CAC7H,IAAIc,GAAW7B,mDAAmDC,4CAA4Cc,GAAGe,MAAO9B,mDAAmDC,4CAA4Cc,GAAGe,MAAM,IAAM,IACrK,GAA7DC,OAAOC,oDAA2H,QAA7DD,OAAOC,oDAAiEH,GAAUE,OAAOE,mDAChKL,EAAMM,KAAKlC,mDAAmDC,4CAA4Cc,GAE9G,CACA,IAAIoB,GAAUT,GAAqG,IAAM,GACzHE,EAAMM,KAAK,CACTE,GAAID,EACJL,MAAOJ,GAEX,MAEE,IAAQX,EAAI,EAAGA,EAAIf,mDAAmDC,4CAA4Ce,OAAQD,IACrHf,mDAAmDC,4CAA4Cc,GAAGe,QAAUJ,GAC7GE,EAAMM,KAAKlC,mDAAmDC,4CAA4Cc,SAKhHa,EAAQ5B,mDAAmDC,4CAE7DD,mDAAmDC,4CAA8C2B,EAEjGxB,+CADa,CAACH,4CAA6C2B,GACP3B,kDAEKP,IAAtDgC,GAAyH,OAAtDA,GAClErC,cAIN,CAAE,MAAOgD,GACPC,QAAQC,IAAIF,EACd,CACA,OAAO,KAKFG,2CAA4CC,gDAAiDC,EAAAA,mCAAAA,UAAS,IAC7GC,kDAAmDC,EAAAA,mCAAAA,aAAaC,GAAQJ,8CAA8CI,EAAIC,OAAOhD,OAAQ,KAElIiD,6CAA8CC,kDAAmDN,EAAAA,mCAAAA,UAAS,IACjHO,oDAAqDL,EAAAA,mCAAAA,aAAaC,GAAQG,gDAAgDH,EAAIC,OAAOhD,OAAQ,KAEtIoD,2CAA4CC,gDAAiDT,EAAAA,mCAAAA,UAAS,IAC7GU,kDAAmDR,EAAAA,mCAAAA,aAAaC,GAAQM,8CAA8CN,EAAIC,OAAOhD,OAAQ,KAElI4B,kDAAmD2B,uDAAwDX,EAAAA,mCAAAA,UAAS,IAC3HY,yDAA0DV,EAAAA,mCAAAA,aAAaC,IACrEQ,qDAAqDR,EAAIC,OAAOhD,OAChE,IAAI+B,EAASgB,EAAIC,OAAOhD,OACxByD,EAAAA,uCAAAA,IAAcvD,mDAAmDC,4CAA6CuD,2DAA4DC,kEAAmE,8CAA+C,QAAS5B,IACpS,KAEI6B,wDAAyDF,6DAA8Dd,EAAAA,mCAAAA,WAAS,IAChIiB,+DAAgEF,oEAAqEf,EAAAA,mCAAAA,UAAS,KAG9IkB,2CAA4CC,gDAAiDnB,EAAAA,mCAAAA,UAAS,IAC7GoB,kDAAmDlB,EAAAA,mCAAAA,aAAaC,GAAQgB,8CAA8ChB,EAAIC,OAAOhD,OAAQ,KAGlIiE,YAAaC,gBAAkB3C,mCAAAA,UAAe,GACrDA,mCAAAA,UAAgB,KACd4C,YACC,CAACF,cACJ,MAAME,SAAWA,KAEf,IAAI,IAAIlD,EAAI,EAAGA,EAAIf,mDAAmDC,4CAA4Ce,OAAQD,IACrHf,mDAAmDC,4CAA4Cc,GAAGqB,KAAOL,OAAOE,kDACnHoB,0DAA4J3D,IAAtGM,mDAAmDC,4CAA4Cc,SAAgIrB,IAA5GM,mDAAmDC,4CAA4Cc,GAAGe,MAAsB9B,mDAAmDC,4CAA4Cc,GAAGe,MAAM,IAK3Y,OAAO,GAGHoC,YAAcA,CAACC,aAAcC,QAC9BD,cAAgBC,MACjBnD,KAAKkD,aAALlD,CAAmBmD,OAIvB,OACEC,EAAAA,gDAAAA,KAAA,OAAAC,UAEEC,EAAAA,gDAAAA,MAAA,OAAKnC,GAAI,8CAAgD5C,SAAUe,MAAO,CAACC,QAAQ,QAASgE,UAAU,wBAAuBF,SAAA,EAE3HC,EAAAA,gDAAAA,MAACE,6CAAAA,GAAI,CAACrC,GAAK,4CAA8C5C,SAAUkF,WAAY,cAAgBlF,SAAUmF,UAAQ,EAACH,UAAU,gBAAgBjE,MAAO,CAACqE,SAAS,QAAQN,SAAA,EACjKC,EAAAA,gDAAAA,MAACM,6CAAAA,GAAO,CAAAP,SAAA,EACND,EAAAA,gDAAAA,KAACS,6CAAAA,GAAG,CAACC,OAAQ,cAAgBvF,SAAS8E,SAAC,aACvCD,EAAAA,gDAAAA,KAACS,6CAAAA,GAAG,CAACC,OAAQ,YAAcvF,SAAS8E,SAAC,cAEvCC,EAAAA,gDAAAA,MAACS,6CAAAA,GAAQ,CAACzE,MAAO,CAAC0E,MAAM,OAAQL,SAAS,QAASM,MAAO,cAAgB1F,SAAS8E,SAAA,EAChFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,oBAAoBjE,MAAO,CAAC4E,OAAO,OAAQP,SAAS,QAAQN,SAAA,EAC3EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0EAA4EhF,SAAS8E,SAAA,EACpGD,EAAAA,gDAAAA,KAAA,QAAMG,UAAU,iBAAgBF,SAAC,kDAAmDD,EAAAA,gDAAAA,KAAA,SAAK,sBAAkBA,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,sBAAqBD,EAAAA,gDAAAA,KAAA,SAAK,oEAG3IE,EAAAA,gDAAAA,MAAA,OAAKC,UAAW,4DAA8DhF,SAAS8E,SAAA,EACvFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EACpGD,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,aAAYD,EAAAA,gDAAAA,KAAA,aAEFE,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,qBAAqBjE,MAAO,CAAC6E,WAAW,OAAOC,aAAa,QAAQf,SAAA,EAEnFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EAC5FD,EAAAA,gDAAAA,KAACiB,sDAAAA,EAAS,CAAExF,MAAOqB,MAAMqB,2CAA6CJ,GAAI,gDAAkD5C,SAAW,kBAAiB,wDAA0DA,SAAW+F,UAAU,OAAOC,SAAUrE,MAAMwB,oDAC9P0B,EAAAA,gDAAAA,KAACoB,4CAAAA,GAAY,CAACrD,GAAI,wDAA0D5C,SAAUkG,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOtB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKhE,MAAO,CAAEsF,SAAU,KAAMvB,SAAA,CAAC,oKAAgKD,EAAAA,gDAAAA,KAAA,kBAG5TE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EAC5FD,EAAAA,gDAAAA,KAACiB,sDAAAA,EAAS,CAAExF,MAAOqB,MAAM4B,6CAA+CX,GAAI,kDAAoD5C,SAAW,kBAAiB,0DAA4DA,SAAW+F,UAAU,SAASC,SAAUrE,MAAM8B,sDACtQoB,EAAAA,gDAAAA,KAACoB,4CAAAA,GAAY,CAACrD,GAAI,0DAA4D5C,SAAUkG,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOtB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKhE,MAAO,CAAEsF,SAAU,KAAMvB,SAAA,CAAC,gIAA4HD,EAAAA,gDAAAA,KAAA,kBAG1RE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EAC5FD,EAAAA,gDAAAA,KAACiB,sDAAAA,EAAS,CAAEQ,SAAU3E,MAAM4E,iDAAmDC,YAAa7E,MAAM8E,wDAA0DnG,MAAOqB,MAAM+B,2CAA6Cd,GAAI,gDAAkD5C,SAAW,kBAAiB,wDAA0DA,SAAW+F,UAAU,SAASC,SAAUrE,MAAMiC,oDAChZiB,EAAAA,gDAAAA,KAACoB,4CAAAA,GAAY,CAACrD,GAAI,wDAA0D5C,SAAUkG,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOtB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKhE,MAAO,CAAEsF,SAAU,KAAMvB,SAAA,CAAC,0DAAsDD,EAAAA,gDAAAA,KAAA,kBAGlNE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EAC5FD,EAAAA,gDAAAA,KAACiB,sDAAAA,EAAS,CAAExF,MAAOqB,MAAMyC,2CAA6CxB,GAAI,gDAAkD5C,SAAW,kBAAiB,wDAA0DA,SAAW+F,UAAU,OAAOC,SAAUrE,MAAM2C,oDAC9PO,EAAAA,gDAAAA,KAACoB,4CAAAA,GAAY,CAACrD,GAAI,wDAA0D5C,SAAUkG,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOtB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKhE,MAAO,CAAEsF,SAAU,KAAMvB,SAAA,CAAC,iCAA6BD,EAAAA,gDAAAA,KAAA,2BAOvLE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EACpFD,EAAAA,gDAAAA,KAAC6B,qDAAAA,EAAM,CAACC,QAASA,KAAQjG,YAAYV,SAAWC,UAAY6E,SAAC,YAC7DD,EAAAA,gDAAAA,KAAC6B,qDAAAA,EAAM,CAACE,UAAYjF,MAAM+B,6CAA+C/B,MAAM4E,iDAAmDI,QAASA,KAAQ7G,WAAWC,SAAUC,SAAWC,UAAY6E,SAAC,gBAGtMC,EAAAA,gDAAAA,MAACS,6CAAAA,GAAQ,CAACzE,MAAO,CAAC0E,MAAM,OAAQL,SAAS,QAASM,MAAO,YAAc1F,SAAS8E,SAAA,EAC9EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,oBAAoBjE,MAAO,CAAC4E,OAAO,OAAQP,SAAS,QAAQN,SAAA,EAC3EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0EAA4EhF,SAAS8E,SAAA,EACpGD,EAAAA,gDAAAA,KAAA,QAAMG,UAAU,iBAAgBF,SAAC,kDAAmDD,EAAAA,gDAAAA,KAAA,SAAK,sBAAkBA,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,oBAAmBD,EAAAA,gDAAAA,KAAA,aAEpIE,EAAAA,gDAAAA,MAAA,OAAKC,UAAW,4DAA8DhF,SAAS8E,SAAA,EACvFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EACpGD,EAAAA,gDAAAA,KAAA,MAAIgC,SAAS,IAAK,kBAAiB,yDAA2D7G,SAAS8E,SAAE,WAAUD,EAAAA,gDAAAA,KAAA,aAE3GA,EAAAA,gDAAAA,KAACoB,4CAAAA,GAAY,CAACrD,GAAI,yDAA2D5C,SAAUkG,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOtB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKhE,MAAO,CAAEsF,SAAU,KAAMvB,SAAA,CAAC,0LAAsLD,EAAAA,gDAAAA,KAAA,eAEnVA,EAAAA,gDAAAA,KAAA,OAAKjC,GAAI,sDAAwD5C,SAAUe,MAAO,CAAC6E,WAAW,OAAOC,aAAa,QAAQf,UACxHD,EAAAA,gDAAAA,KAAA,OAAKG,UAAW,0DAA4DhF,SAAS8E,UACnFD,EAAAA,gDAAAA,KAACiC,sDAAAA,GAAS,CAAClE,GAAI,mDAAqD5C,SAAU+G,YAAU,EACpFC,QAAS9F,sDACT+F,KAAMzG,mDAAmDC,4CACzDyG,OAAQC,IAAA,IAAC,KACPF,EAAI,QACJD,EAAO,eACPI,EAAc,YACdC,EAAW,cACXC,EAAa,gBACbC,EAAe,cACfC,EAAa,uBACbC,GACLN,EAAA,OACCpC,EAAAA,gDAAAA,MAAC2C,qDAAAA,EAAc,CAAA5C,SAAA,EACbD,EAAAA,gDAAAA,KAAC8C,sDAAAA,EAAY,CAAC,aAAW,qBAAoB7C,UAC3CD,EAAAA,gDAAAA,KAAC+C,sDAAAA,EAAmB,CAAA9C,UAClBD,EAAAA,gDAAAA,KAAC6B,qDAAAA,EAAM,CAACC,QAASA,KAAOtF,qDAAqDrB,SAAU,CAAC6D,qDAAqD,IAAQG,4DAA2D,MAAWc,SAAC,aAGhOC,EAAAA,gDAAAA,MAAC8C,qDAAAA,GAAKC,EAAAA,2IAAAA,IAAAA,EAAAA,2IAAAA,GAAA,CAACC,KAAK,UAAaT,KAAe,IAAAxC,SAAA,EACtCD,EAAAA,gDAAAA,KAACmD,qDAAAA,EAAS,CAAAlD,UACRC,EAAAA,gDAAAA,MAACkD,qDAAAA,EAAQ,CAAAnD,SAAA,CACNkC,EAAQkB,IAAI/G,IACX0D,EAAAA,gDAAAA,KAACsD,qDAAAA,GAAWL,EAAAA,2IAAAA,IAAAA,EAAAA,2IAAAA,GAAA,GAAKV,EAAe,CAAEjG,YAAS,IAAA2D,SACxC3D,EAAOA,YAGZ0D,EAAAA,gDAAAA,KAACsD,qDAAAA,EAAW,CAAArD,SAAC,kBAKjBD,EAAAA,gDAAAA,KAACuD,qDAAAA,EAAS,CAAAtD,SACPmC,EAAKiB,IAAItG,IACRmD,EAAAA,gDAAAA,MAACkD,qDAAAA,EAAQ,CAAAnD,SAAA,CACNlD,EAAIyG,MAAMH,IAAII,IACbzD,EAAAA,gDAAAA,KAAC0D,qDAAAA,EAAS,CAAAzD,SAAgBwD,EAAKhI,OAAfgI,EAAK1F,MAEvBmC,EAAAA,gDAAAA,MAACwD,qDAAAA,EAAS,CAAAzD,SAAA,EACRD,EAAAA,gDAAAA,KAAC2D,mCAAAA,SAAQ,CAACC,UAAU5D,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACpF,mDAAkD,CAACmC,IAAKA,EAAK7B,SAAUiC,yDAE1E6C,EAAAA,gDAAAA,KAAC2D,mCAAAA,SAAQ,CAACC,UAAU5D,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACjF,4CAA2C,CAAEgF,KAAMpE,mDAAmDC,4CAA6CiI,QAAShE,YAAa9C,IAAKA,EAAK7B,SAAUiC,oDAAqDyC,SAAUA,SAAUkE,SAAS,EAAMC,KAAM,8CAA+C5I,SAAUA,SAAW,OAAQ6I,eAAgB7I,SAChZ8D,wDAAyDA,wDAAyD5B,kDAAmDA,kDACrKgC,wDAAyDA,wDACzDC,+DAAgEA,wEAZ/BvC,EAAIgB,4BA2B/BmC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,0DAA4DhF,SAAS8E,SAAA,EACpFD,EAAAA,gDAAAA,KAAC6B,qDAAAA,EAAM,CAACC,QAASA,KAAQjG,YAAYV,SAAWC,UAAY6E,SAAC,YAC7DD,EAAAA,gDAAAA,KAAC6B,qDAAAA,EAAM,CAACE,UAAYjF,MAAM+B,6CAA+C/B,MAAM4E,iDAAmDI,QAASA,KAAQ7G,WAAWC,SAAUC,SAAWC,UAAY6E,SAAC,mBAIlMD,EAAAA,gDAAAA,KAAC2D,mCAAAA,SAAQ,CAACC,UAAU5D,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAAClF,2CAA0C,CAACI,SAAUiC,oDAAqD/B,QAASA,KAAOgB,SAASjB,WAAaA,SAAUA,SACnK8D,wDAAyDA,wDAAyD5B,kDAAmDA,kDACrKgC,wDAAyDA,wDACzDC,+DAAgEA,oEAG1DU,EAAAA,gDAAAA,KAAC2D,mCAAAA,SAAQ,CAACC,UAAU5D,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACjF,4CAA2C,CAAEG,SAAUiC,oDAAqDyC,SAAUA,SAAUmE,KAAM,8CAA+C5I,SAAUA,SAAW,OAAQ6I,eAAgB7I,SAC3O8D,wDAAyDA,wDAAyD5B,kDAAmDA,kDACrKgC,wDAAyDA,wDACzDC,+DAAgEA,yEAQ5E,kE","sources":["content/policiesPage/policieshttp_transformationspostaznAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationspostaznpathsDeleteModal = lazy(() => import('./policieshttp_transformationspostaznpathsDeleteModal'));\nconst PolicieshttpTransformationspostaznpathsAdd = lazy(() => import('./policieshttp_transformationspostaznpathsAdd'));\nconst PolicieshttpTransformationspostaznpathsEdit = lazy(() => import('./policieshttp_transformationspostaznpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_postazn_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_host\"] = document.getElementById(\"policies_http_transformations_postazn_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_postazn_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_method\"] = document.getElementById(\"policies_http_transformations_postazn_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_postazn_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_name\"] = document.getElementById(\"policies_http_transformations_postazn_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_postazn_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_rule\"] = document.getElementById(\"policies_http_transformations_postazn_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_postazn_paths\"] = policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths;\n      \n    loadGrid( json[\"policies_http_transformations_postazn_host\"], json[\"policies_http_transformations_postazn_method\"], json[\"policies_http_transformations_postazn_name\"], json[\"policies_http_transformations_postazn_rule\"], json[\"policies_http_transformations_postazn_paths\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_postazn_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_postazn_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_postazn_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_postazn_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_postazn_rule_id\").value = \"\";\n    policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths = []\n    setpolicies_http_transformations_postazn_paths(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_postaznPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_postazn_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_postazn_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_postazn_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_postazn_pathsrowData = {policies_http_transformations_postazn_paths: []};\n\nconst policies_http_transformations_postazn_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_postazn_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_postazn_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationspostazn_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_postazn_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_postaznAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_postazn_paths, setpolicies_http_transformations_postazn_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_postazn_paths, setFetchedpolicies_http_transformations_postazn_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_postazn_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_postazn_paths]);\n\n    const policies_http_transformations_postazn_pathsloadGrid = React.useCallback(async (policies_http_transformations_postazn_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_postazn_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths.length; i++) {\n              var tempId = ((policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths)?policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_postazn_pathsediting != true && window.policies_http_transformations_postazn_pathsediting != \"true\") || tempId != window.policies_http_transformations_postazn_pathsrowId) {\n                attrs.push(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_postazn_paths_paths)?policies_http_transformations_postazn_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_postazn_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths.length; i++) {\n              if(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths !== policies_http_transformations_postazn_paths_paths ) {\n                attrs.push(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths;\n        }\n        policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths = attrs;\n        const data = {policies_http_transformations_postazn_paths: attrs};\n        setpolicies_http_transformations_postazn_paths(data.policies_http_transformations_postazn_paths);\n\n        if(policies_http_transformations_postazn_paths_paths !== undefined && policies_http_transformations_postazn_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_postazn_host, setpolicies_http_transformations_postazn_host] = useState(''),\n    updatepolicies_http_transformations_postazn_host = useCallback((evt) => setpolicies_http_transformations_postazn_host(evt.target.value), []);\n\n    const [policies_http_transformations_postazn_method, setpolicies_http_transformations_postazn_method] = useState(''),\n    updatepolicies_http_transformations_postazn_method = useCallback((evt) => setpolicies_http_transformations_postazn_method(evt.target.value), []);\n\n    const [policies_http_transformations_postazn_name, setpolicies_http_transformations_postazn_name] = useState(''),\n    updatepolicies_http_transformations_postazn_name = useCallback((evt) => setpolicies_http_transformations_postazn_name(evt.target.value), []);\n\n    const [policies_http_transformations_postazn_paths_paths, setpolicies_http_transformations_postazn_paths_paths] = useState(''),\n    updatepolicies_http_transformations_postazn_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_postazn_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths, setpolicies_http_transformations_postazn_paths_paths_valid, setpolicies_http_transformations_postazn_paths_paths_invalid_text, \"Policies Http Transformations Postazn Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_postazn_paths_paths_valid, setpolicies_http_transformations_postazn_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_postazn_paths_paths_invalid_text, setpolicies_http_transformations_postazn_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_postazn_rule, setpolicies_http_transformations_postazn_rule] = useState(''),\n    updatepolicies_http_transformations_postazn_rule = useCallback((evt) => setpolicies_http_transformations_postazn_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths.length; i++) {\n        if(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].id === window.policies_http_transformations_postazn_pathsrowId) {\n        setpolicies_http_transformations_postazn_paths_paths((policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i] !== undefined && policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths !== undefined )?policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_postaznPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_postazn_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_postazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Postazn : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_postazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n  <h3>Postazn</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_postazn_host}  id={\"policies_http_transformations_postazn_host_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_postazn_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_postazn_host}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_postazn_method}  id={\"policies_http_transformations_postazn_method_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_postazn_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_postazn_method}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_method_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_postazn_name_valid}  invalidText={props.policies_http_transformations_postazn_name_invalid_text}  value={props.policies_http_transformations_postazn_name}  id={\"policies_http_transformations_postazn_name_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_postazn_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_postazn_name}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_postazn_rule}  id={\"policies_http_transformations_postazn_rule_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_postazn_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_postazn_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_rule_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_postazn_name || !props.policies_http_transformations_postazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_postazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Postazn : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_postazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"policies_http_transformations_postazn_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_postazn_paths_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_postazn_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_postazn_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_postazn_pathsheaderData}\n                        rows={policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_postazn_pathshandleAdd(idPrefix, [setpolicies_http_transformations_postazn_paths_paths(''),    setpolicies_http_transformations_postazn_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspostaznpathsDeleteModal row={row} loadGrid={policies_http_transformations_postazn_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspostaznpathsEdit  data={policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_postazn_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_postazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_postazn_paths_paths={updatepolicies_http_transformations_postazn_paths_paths} policies_http_transformations_postazn_paths_paths={policies_http_transformations_postazn_paths_paths}\n            policies_http_transformations_postazn_paths_paths_valid={policies_http_transformations_postazn_paths_paths_valid}\n            policies_http_transformations_postazn_paths_paths_invalid_text={policies_http_transformations_postazn_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_postazn_name || !props.policies_http_transformations_postazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspostaznpathsAdd loadGrid={policies_http_transformations_postazn_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_postazn_paths_paths={updatepolicies_http_transformations_postazn_paths_paths} policies_http_transformations_postazn_paths_paths={policies_http_transformations_postazn_paths_paths}\n            policies_http_transformations_postazn_paths_paths_valid={policies_http_transformations_postazn_paths_paths_valid}\n            policies_http_transformations_postazn_paths_paths_invalid_text={policies_http_transformations_postazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspostaznpathsEdit  loadGrid={policies_http_transformations_postazn_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_postazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_postazn_paths_paths={updatepolicies_http_transformations_postazn_paths_paths} policies_http_transformations_postazn_paths_paths={policies_http_transformations_postazn_paths_paths}\n            policies_http_transformations_postazn_paths_paths_valid={policies_http_transformations_postazn_paths_paths_valid}\n            policies_http_transformations_postazn_paths_paths_invalid_text={policies_http_transformations_postazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_postaznAdd;\n"],"names":["PolicieshttpTransformationspostaznpathsDeleteModal","lazy","PolicieshttpTransformationspostaznpathsAdd","PolicieshttpTransformationspostaznpathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","policies_http_transformations_postazn_pathsrowData","policies_http_transformations_postazn_paths","handleClose","handleAdd","setpolicies_http_transformations_postazn_paths","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_postazn_pathsheaderData","header","key","policies_http_transformations_postazn_pathshandleAdd","clearFields","i","length","eval","Policieshttp_transformations_postaznAdd","props","row","React","fetchedpolicies_http_transformations_postazn_paths","setFetchedpolicies_http_transformations_postazn_paths","policies_http_transformations_postazn_pathsloadGrid","async","policies_http_transformations_postazn_paths_paths","add","attrs","tempId","paths","window","policies_http_transformations_postazn_pathsediting","policies_http_transformations_postazn_pathsrowId","push","newId","id","e","console","log","policies_http_transformations_postazn_host","setpolicies_http_transformations_postazn_host","useState","updatepolicies_http_transformations_postazn_host","useCallback","evt","target","policies_http_transformations_postazn_method","setpolicies_http_transformations_postazn_method","updatepolicies_http_transformations_postazn_method","policies_http_transformations_postazn_name","setpolicies_http_transformations_postazn_name","updatepolicies_http_transformations_postazn_name","setpolicies_http_transformations_postazn_paths_paths","updatepolicies_http_transformations_postazn_paths_paths","validateField","setpolicies_http_transformations_postazn_paths_paths_valid","setpolicies_http_transformations_postazn_paths_paths_invalid_text","policies_http_transformations_postazn_paths_paths_valid","policies_http_transformations_postazn_paths_paths_invalid_text","policies_http_transformations_postazn_rule","setpolicies_http_transformations_postazn_rule","updatepolicies_http_transformations_postazn_rule","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","invalid","policies_http_transformations_postazn_name_valid","invalidText","policies_http_transformations_postazn_name_invalid_text","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix"],"sourceRoot":""}