{"version":3,"file":"static/js/8782.ea2759a7.chunk.js","mappings":"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","sources":["../node_modules/carbon-components-react/es/components/Icon/Icon.js","content/serverPage/serversslciphersEdit.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;","import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_ssl_ciphers_ciphers_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_ssl_ciphers_ciphers\"] = document.getElementById(\"server_ssl_ciphers_ciphers_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"server_ssl_ciphers_ciphers\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_ssl_ciphers\")) {\n        var len = \"_ssl_ciphers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserverssl_ciphersPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_ssl_ciphers\")) {\n        var len = \"_ssl_ciphers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserverssl_ciphersPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_ssl_ciphers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_ssl_ciphers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n  };\nconst Serverssl_ciphersEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n\n    const [server_ssl_ciphers_ciphers, setserver_ssl_ciphers_ciphers] = useState(''),\n    updateserver_ssl_ciphers_ciphers = useCallback((evt) => setserver_ssl_ciphers_ciphers(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserverssl_ciphersPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"server_ssl_ciphers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_ciphers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Ciphers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_ssl_ciphers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_ciphers_div\" + idPrefix}>\n  <h3>Cipher</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_ssl_ciphers_div\" + idPrefix}>\n          <TextInput  value={props.server_ssl_ciphers_ciphers}  id={\"server_ssl_ciphers_ciphers_id\" + idPrefix}  data-tooltip-id={\"server_ssl_ciphers_ciphers_tooltip_id\" + idPrefix}  labelText=\"Cipher *\" onChange={props.updateserver_ssl_ciphers_ciphers}/>\n          <ReactTooltip id={\"server_ssl_ciphers_ciphers_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name(s) of the ciphers and cipher suites which will be permitted.<br/>For a list of valid ciphers, see:<br/>  - Supported Cipher Names<br/>  - Supported TLSv1.3 Cipher Names<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_ciphers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_ciphers_ciphers || !props.server_ssl_ciphers_ciphers_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Serverssl_ciphersEdit;\n"],"names":["_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","isPrefixed","name","split","Icon","_ref","svgData","className","iconTitle","description","fill","fillRule","height","icon","role","style","width","iconRef","other","_objectWithoutProperties","props","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","concat","viewBox","ref","svgContent","map","svgProp","data","circle","index","circleProps","cx","cy","r","React","_extends","path","d","polygon","points","propTypes","PropTypes","isRequired","defaultProps","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","rowId","dataLoad","loadGrids","setData","oName","window","pName","slice","display","updateStyle","closeAdd","getEditData","yamlText","iagyaml","safeLoad","Serverssl_ciphersEdit","row","toolbarName","id","server_ssl_ciphers_ciphers","setserver_ssl_ciphers_ciphers","useState","updateserver_ssl_ciphers_ciphers","useCallback","evt","fetcheddata","setFetcheddata","setDataMain","functionName","eval","editing","_jsx","editProps","editIcon","onClick","title","children","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","tabId","marginLeft","marginBottom","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","disabled","server_ssl_ciphers_ciphers_valid"],"sourceRoot":""}