{"version":3,"sources":["content/policiesPage/policiescontent_injectionEdit.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"names":["PoliciescontentInjectionpathsDeleteModal","lazy","__webpack_require__","e","then","bind","PoliciescontentInjectionpathsAdd","PoliciescontentInjectionpathsEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","policies_content_injection_pathsrowData","policies_content_injection_paths","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","len","slice","style","display","updateStyle","closeAdd","policies_content_injection_pathsheaderData","header","key","policies_content_injection_pathshandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","name","paths","newItem","push","i2","id","policies","content_injection","policies_content_injection","Policies_content_injectionEdit","props","row","toolbarName","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setpolicies_content_injection_paths","_React$useState3","_React$useState4","fetchedpolicies_content_injection_paths","setFetchedpolicies_content_injection_paths","useEffect","policies_content_injection_pathsloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","policies_content_injection_paths_paths","add","attrs","tempId","newId","wrap","_context","prev","next","policies_content_injection_pathsediting","policies_content_injection_pathsrowId","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_useState","_useState2","policies_content_injection_name","setpolicies_content_injection_name","updatepolicies_content_injection_name","evt","target","_useState3","_useState4","setpolicies_content_injection_paths_paths","updatepolicies_content_injection_paths_paths","_useState5","_useState6","policies_content_injection_paths_paths_valid","setpolicies_content_injection_paths_paths_valid","_useState7","_useState8","policies_content_injection_paths_paths_invalid_text","setpolicies_content_injection_paths_paths_invalid_text","_useState9","_useState10","policies_content_injection_full_line_match","setpolicies_content_injection_full_line_match","updatepolicies_content_injection_full_line_match","_useState11","_useState12","policies_content_injection_location","setpolicies_content_injection_location","updatepolicies_content_injection_location","_useState13","_useState14","policies_content_injection_replace_match","setpolicies_content_injection_replace_match","updatepolicies_content_injection_replace_match","_useState15","_useState16","policies_content_injection_content","setpolicies_content_injection_content","updatepolicies_content_injection_content","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","setDataMain","functionName","editing","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","assign","editProps","editIcon","onClick","title","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_19__","defaultTab","vertical","overflow","tabFor","width","tabId","height","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_20__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","disabled","policies_content_injection_name_valid","tabIndex","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","obj","defineProperty","configurable","writable","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_extends","hasOwnProperty","isPrefixed","split","Icon","svgData","iconTitle","description","fill","fillRule","icon","role","iconRef","other","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","concat","viewBox","ref","svgContent","svgProp","circle","index","circleProps","cx","cy","r","path","d","polygon","points","propTypes","string","isRequired","shape","func","defaultProps","__webpack_exports__"],"mappings":"0rRAgCA,IAAMA,yCAA2CC,gDAAK,kBAAMC,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aACtDC,iCAAmCL,gDAAK,kBAAMC,oBAAAC,EAAA,IAAAC,KAAAF,oBAAAG,KAAA,aAC9CE,kCAAoCN,gDAAK,kBAAMC,oBAAAC,EAAA,KAAAC,KAAAF,oBAAAG,KAAA,aAG7CG,aAAe,aAGfC,WAAa,SAACC,EAAUC,EAAUC,EAAaC,EAAQC,EAAiBC,QAE5DC,IAAbL,IAAwBA,EAAW,IAEtC,IAAIM,EAAO,IAEyF,IAAjGC,SAASC,eAAe,qCAAuCR,GAAUS,MAAMC,SAAS,OACzFJ,EAAI,gCAAsCC,SAASC,eAAe,qCAAuCR,GAAUS,OAErHH,EAAI,2CAAiDC,SAASC,eAAe,gDAAkDR,GAAUW,QAAQC,YACzC,IAArGL,SAASC,eAAe,yCAA2CR,GAAUS,MAAMC,SAAS,OAC7FJ,EAAI,oCAA0CC,SAASC,eAAe,yCAA2CR,GAAUS,OAE7HH,EAAI,yCAA+CC,SAASC,eAAe,8CAAgDR,GAAUW,QAAQC,YACtC,IAApGL,SAASC,eAAe,wCAA0CR,GAAUS,MAAMC,SAAS,OAC5FJ,EAAI,mCAAyCC,SAASC,eAAe,wCAA0CR,GAAUS,OAE3HH,EAAI,iCAAuCO,wCAAwCC,iCAEnFf,EAAUO,EAAI,gCAAqCA,EAAI,2CAAgDA,EAAI,oCAAyCA,EAAI,yCAA8CA,EAAI,mCAAwCA,EAAI,kCAAsC,GAE5RS,YAAYf,EAAUC,EAAaC,EAAQC,EAAiBC,IAGxDY,UAAY,SAACC,EAAOC,EAAUlB,EAAUC,EAAaC,EAAQC,EAAiBgB,EAAWC,EAAMC,GAEnG,IAAIC,EAASrB,GAAuB,GAIpC,GAHAsB,OAAOD,EAAQ,YAAa,EAC5BC,OAAOD,EAAQ,SAAWL,EAEvBE,EACD,IAAI,IAAIK,EAAI,EAAGA,EAAIL,EAAUM,OAAQD,IACnCL,EAAUK,GAAGvB,EAAYmB,EAAMC,GAInCH,IAEA,IAAIQ,EAAQJ,EACZ,GAAGI,EAAMhB,SAAS,sBAAuB,CACrC,IAAIiB,EAAM,qBAAqBF,OAC/BC,EAAQA,EAAME,MAAM,GAAID,QAGdtB,IAAXH,GAAmC,KAAXA,IACzBK,SAASC,eAAeN,GAAQ2B,MAAMC,QAAU,QAGlDC,iDAAYL,EAAQ,OAASvB,EAAgB,UAAW,QACxDI,SAASC,eAAe,qCAAuCR,GAAU6B,MAAMC,QAAU,QACzFvB,SAASC,eAAekB,EAAQ,OAASvB,GAAgB0B,MAAMC,QAAU,QAIrEf,YAAc,SAACf,EAAUC,EAAaC,EAAQC,EAAiBC,GAEnE,IAAIkB,EAASrB,GAAuB,UAC7BsB,OAAOD,EAAQ,kBACfC,OAAOD,EAAQ,SAEtB,IAAII,EAAQJ,EACZ,GAAGI,EAAMhB,SAAS,sBAAuB,CACrC,IAAIiB,EAAM,qBAAqBF,OAC/BC,EAAQA,EAAME,MAAM,GAAID,QAGdtB,IAAXH,GAAmC,KAAXA,IACzBK,SAASC,eAAeN,GAAQ2B,MAAMC,QAAU,QAGlDC,iDAAYL,EAAQ,OAASvB,EAAgB,UAAW,SACxDI,SAASC,eAAe,qCAAuCR,GAAU6B,MAAMC,QAAU,OACzFvB,SAASC,eAAekB,EAAQ,OAASvB,GAAgB0B,MAAMC,QAAU,OAIpE1B,GACDA,KAIA4B,SAAW,SAAChC,QAEEK,IAAbL,IAAwBA,EAAW,IAEtC+B,iDAAY,iCAAmC/B,EAAU,UAAW,SACpEO,SAASC,eAAe,iCAAmCR,GAAU6B,MAAMC,QAAU,QAIrFG,2CAA6C,CAC/C,CACAC,OAAQ,OACRC,IAAK,UAKHtB,wCAA0C,CAACC,iCAAkC,IAE7EsB,0CAA4C,SAA5CA,0CAA6CpC,SAAUqC,aAIzD,QAHgBhC,IAAbL,WAAwBA,SAAW,IAGnCqC,YACD,IAAI,IAAIb,EAAI,EAAGA,EAAIa,YAAYZ,OAAQD,IACrCc,KAAKD,YAAYb,IAIrBjB,SAASC,eAAe,4CAA8CR,UAAUS,MAAQ,GAExFsB,iDAAY,iCAAmC/B,SAAU,UAAW,QAEpEO,SAASC,eAAe,yCAA2CR,UAAU6B,MAAMC,QAAU,QAE7FvB,SAASC,eAAe,iCAAmCR,UAAU6B,MAAMC,QAAU,QAI/ES,YAAc,SAACtC,EAAYmB,EAAMC,GACrC,IAAIC,EAASrB,GAAuB,GAEhCuC,EAAWjB,OAAOkB,QAClBnC,EAAO,GASb,GARkB,OAAbkC,QAAkCnC,IAAbmC,SAEVnC,KADZC,EAAOoC,iDAASF,KACkB,OAATlC,IACvBA,EAAO,KAIbO,wCAAwCC,iCAAmC,GACxEM,GAAQC,EACT,IAAI,IAAIG,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAAK,CAEnC,IADeJ,EAAKI,GAAGmB,KAAMvB,EAAKI,GAAGmB,KAAK,MAC5BpB,OAAOD,EAAQ,eACVjB,IAAZe,EAAKI,SAAsCnB,IAAlBe,EAAKI,GAAGoB,MAAsB,CACxD,GAA4B,kBAAlBxB,EAAKI,GAAGoB,OACZC,EAAU,IACP,GAASzB,EAAKI,GAAGoB,MACxBC,EAAO,MAAYzB,EAAKI,GAAGoB,MAC3B/B,wCAAwCC,iCAAiCgC,KAAKD,QAE9E,IAAI,IAAIE,EAAK,EAAGA,EAAK3B,EAAKI,GAAGoB,MAAMnB,OAAQsB,IAAM,CAC/C,IAAIF,EAAU,GACXzB,EAAKI,GAAGoB,MAAMG,GAAIC,GACnBH,EAAO,GAASzB,EAAKI,GAAGoB,MAAMG,GAAIC,GAC1B5B,EAAKI,GAAGoB,MAAMG,GAAIH,MAC1BC,EAAO,GAASzB,EAAKI,GAAGoB,MAAMG,GAAIH,MAElCC,EAAO,GAASzB,EAAKI,GAAGoB,MAAMG,GAE7B3B,EAAKI,GAAGoB,MAAMG,GAAIH,MACnBC,EAAO,MAAYzB,EAAKI,GAAGoB,MAAMG,GAAIH,MAErCC,EAAO,MAAYzB,EAAKI,GAAGoB,MAAMG,GAEnClC,wCAAwCC,iCAAiCgC,KAAKD,GAGlFxB,EAAQ,sCAAuCR,wCAAwCC,wCAK/F,QAAYT,IAATC,QAAwCD,IAAlBC,EAAK2C,eAA8D5C,IAApCC,EAAK2C,SAASC,kBACpE,IAAQ1B,EAAI,EAAGA,EAAIlB,EAAK2C,SAASC,kBAAkBzB,OAAQD,IAAK,CAE9D,IADelB,EAAK6C,2BAA2B3B,GAAGmB,KAAMrC,EAAK6C,2BAA2B3B,GAAGmB,KAAK,MAClFpB,OAAOD,EAAQ,eACfjB,IAATC,QAAwCD,IAAlBC,EAAK2C,eAAiE5C,IAAvCC,EAAK2C,SAASC,kBAAkB1B,SAAiEnB,IAA7CC,EAAK2C,SAASC,kBAAkB1B,GAAGoB,MAC7I,IAAQG,EAAK,EAAGA,EAAKzC,EAAK2C,SAASC,kBAAkB1B,GAAGoB,MAAMnB,OAAQsB,IAAM,EACtEF,EAAU,IACNG,GAAK1C,EAAK2C,SAASC,kBAAkB1B,GAAGoB,MAAMG,GACtDF,EAAQD,MAAQtC,EAAK2C,SAASC,kBAAkB1B,GAAGoB,MAAMG,GACzDlC,wCAAwCC,iCAAiCgC,KAAKD,MAQxFO,+BAAiC,SAAjCA,+BAAkCC,OAEpC,IAAIC,IAAMD,MAAMC,IACVvD,SAAWsD,MAAMtD,SACjBK,QAAUiD,MAAMjD,QAChBJ,SAAYqD,MAAMrD,SAAUqD,MAAMrD,SAAS,GAC3CG,eAAkBkD,MAAMlD,eAAgBkD,MAAMlD,eAAe,GAC7DF,WAAcoD,MAAMV,KAAMU,MAAMV,KAAK,GACrCzC,OAAUmD,MAAME,YAAaF,MAAME,YAAY,GAEjDtC,WAAiBZ,IAARiD,IAAmBA,IAAIN,GAAG,GAVOQ,gBAYkCC,6CAAMC,SAAS,IAZjDC,iBAAAC,OAAAC,oKAAA,EAAAD,CAAAJ,gBAAA,GAYvC1C,iCAZuC6C,iBAAA,GAYLG,oCAZKH,iBAAA,GAAAI,iBAagDN,6CAAMC,UAAS,GAb/DM,iBAAAJ,OAAAC,oKAAA,EAAAD,CAAAG,iBAAA,GAavCE,wCAbuCD,iBAAA,GAaEE,2CAbFF,iBAAA,GAe9CP,6CAAMU,UAAU,WACdC,4CACC,CAACH,0CAEJ,IAAMG,yCAA2CX,6CAAMY,YAAN,eAAAC,EAAAV,OAAAW,uKAAA,EAAAX,CAAAY,sBAAAC,KAAkB,SAAAC,EAAOC,EAAwCC,GAA/C,IAAAC,EAAArD,EAAAsD,EAAAC,EAAA,OAAAP,sBAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjE,IAEE,GADIN,EAAQ,GACTF,EACD,GAAGC,EAAK,CACN,IAAQpD,EAAI,EAAGA,EAAIX,wCAAwCC,iCAAiCW,OAAQD,IAC9FsD,GAAWjE,wCAAwCC,iCAAiCU,GAAGoB,MAAO/B,wCAAwCC,iCAAiCU,GAAGoB,MAAM,IAAM,IACpI,GAAlDrB,OAAO6D,yCAAqG,QAAlD7D,OAAO6D,yCAAsDN,GAAUvD,OAAO8D,wCAC1IR,EAAM/B,KAAKjC,wCAAwCC,iCAAiCU,IAGpFuD,GAAUJ,GAA+E,IAAM,GACnGE,EAAM/B,KAAK,CACTE,GAAI+B,EACJnC,MAAO+B,SAIT,IAAQnD,EAAI,EAAGA,EAAIX,wCAAwCC,iCAAiCW,OAAQD,IAC/FX,wCAAwCC,iCAAiCU,GAAGoB,QAAU+B,GACvFE,EAAM/B,KAAKjC,wCAAwCC,iCAAiCU,SAK1FqD,EAAQhE,wCAAwCC,iCAElDD,wCAAwCC,iCAAmC+D,EAE3Ef,oCADa,CAAChD,iCAAkC+D,GACP/D,uCAEKT,IAA3CsE,GAAmG,OAA3CA,GACvD9E,eAIJ,MAAOL,GACP8F,QAAQC,IAAI/F,GArCmD,OAAAyF,EAAAO,OAAA,UAuC1D,GAvC0D,wBAAAP,EAAAQ,SAAAf,MAAlB,gBAAAgB,EAAAC,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,IAnBHC,UA8DgCrC,oDAAS,IA9DzCsC,WAAApC,OAAAC,oKAAA,EAAAD,CAAAmC,UAAA,GA8DvCE,gCA9DuCD,WAAA,GA8DNE,mCA9DMF,WAAA,GA+D9CG,sCAAwC9B,uDAAY,SAAC+B,GAAD,OAASF,mCAAmCE,EAAIC,OAAO5F,QAAQ,IA/DrE6F,WAiE8C5C,oDAAS,IAjEvD6C,WAAA3C,OAAAC,oKAAA,EAAAD,CAAA0C,WAAA,GAiEvC3B,uCAjEuC4B,WAAA,GAiECC,0CAjEDD,WAAA,GAkE9CE,6CAA+CpC,uDAAY,SAAC+B,GAAD,OAASI,0CAA0CJ,EAAIC,OAAO5F,QAAQ,IAlEnFiG,WAmE0DhD,qDAAS,GAnEnEiD,WAAA/C,OAAAC,oKAAA,EAAAD,CAAA8C,WAAA,GAmEvCE,6CAnEuCD,WAAA,GAmEOE,gDAnEPF,WAAA,GAAAG,WAoEwEpD,oDAAS,IApEjFqD,WAAAnD,OAAAC,oKAAA,EAAAD,CAAAkD,WAAA,GAoEvCE,oDApEuCD,WAAA,GAoEcE,uDApEdF,WAAA,GAAAG,WAuEsDxD,qDAAS,GAvE/DyD,YAAAvD,OAAAC,oKAAA,EAAAD,CAAAsD,WAAA,GAuEvCE,2CAvEuCD,YAAA,GAuEKE,8CAvELF,YAAA,GAwE9CG,iDAAmDjD,uDAAY,SAAC+B,GAAD,OAASiB,8CAA8CjB,IAAM,IAxE9EmB,YA0EwC7D,oDAAS,IA1EjD8D,YAAA5D,OAAAC,oKAAA,EAAAD,CAAA2D,YAAA,GA0EvCE,oCA1EuCD,YAAA,GA0EFE,uCA1EEF,YAAA,GA2E9CG,0CAA4CtD,uDAAY,SAAC+B,GAAD,OAASsB,uCAAuCtB,EAAIC,OAAO5F,QAAQ,IA3E7EmH,YA6EkDlE,qDAAS,GA7E3DmE,YAAAjE,OAAAC,oKAAA,EAAAD,CAAAgE,YAAA,GA6EvCE,yCA7EuCD,YAAA,GA6EGE,4CA7EHF,YAAA,GA8E9CG,+CAAiD3D,uDAAY,SAAC+B,GAAD,OAAS2B,4CAA4C3B,IAAM,IA9E1E6B,YAgFsCvE,oDAAS,IAhF/CwE,YAAAtE,OAAAC,oKAAA,EAAAD,CAAAqE,YAAA,GAgFvCE,mCAhFuCD,YAAA,GAgFHE,sCAhFGF,YAAA,GAiF9CG,yCAA2ChE,uDAAY,SAAC+B,GAAD,OAASgC,sCAAsChC,EAAIC,OAAO5F,QAAQ,IAjF3E6H,iBAqFR7E,6CAAMC,UAAS,GArFP6E,iBAAA3E,OAAAC,oKAAA,EAAAD,CAAA0E,iBAAA,GAqFvCE,YArFuCD,iBAAA,GAqF1BE,eArF0BF,iBAAA,GAsF9C9E,6CAAMU,UAAU,WACdjD,YACC,CAACsH,cACJ,IAAMtH,SAAW,WAEf,IAAI,IAAIM,EAAI,EAAGA,EAAIX,wCAAwCC,iCAAiCW,OAAQD,IAC/FX,wCAAwCC,iCAAiCU,GAAGwB,KAAOzB,OAAO8D,uCAC7FmB,+CAA2HnG,IAAhFQ,wCAAwCC,iCAAiCU,SAA0GnB,IAAtFQ,wCAAwCC,iCAAiCU,GAAGoB,MAAsB/B,wCAAwCC,iCAAiCU,GAAGoB,MAAM,IAK9T,OAAO,GAGH8F,YAAc,SAAdA,YAAeC,aAAcvH,MAC9BuH,cAAgBvH,MACjBkB,KAAKqG,aAALrG,CAAmBlB,OAIzB,OAAoB,GAAjBiC,MAAMuF,QAELC,2CAAAC,EAAAC,cAACC,qDAAA,EAADpF,OAAAqF,OAAA,GAAUC,yCAAUC,WAApB,CAAgCC,QAAS,WAAOpI,UAAUC,MAAOoC,MAAMnC,SAAUlB,SAAUC,WAAaC,OAAQC,eAAiB,CAACoC,aAAcc,MAAMjC,KAAMiC,MAAMhC,UAAagI,MAAO,UAGtLR,2CAAAC,EAAAC,cAAA,WACEF,2CAAAC,EAAAC,cAAA,OAAK/F,GAAI,qCAAuChD,SAAU6B,MAAO,CAACC,QAAQ,QAASwH,UAAU,yBAG3FT,2CAAAC,EAAAC,cAACQ,6CAAA,EAAD,CAAMvG,GAAK,iCAAmChD,SAAUwJ,WAAY,cAAgBxJ,SAAUyJ,UAAQ,EAACH,UAAU,gBAAgBzH,MAAO,CAAC6H,SAAS,SAC9Ib,2CAAAC,EAAAC,cAACQ,6CAAA,EAAD,KACEV,2CAAAC,EAAAC,cAACQ,6CAAA,EAAD,CAAKI,OAAQ,cAAgB3J,UAA7B,WACA6I,2CAAAC,EAAAC,cAACQ,6CAAA,EAAD,CAAKI,OAAQ,YAAc3J,UAA3B,UAEF6I,2CAAAC,EAAAC,cAACQ,6CAAA,EAAD,CAAU1H,MAAO,CAAC+H,MAAM,OAAQF,SAAS,QAASG,MAAO,cAAgB7J,UACvE6I,2CAAAC,EAAAC,cAAA,OAAKO,UAAU,oBAAoBzH,MAAO,CAACiI,OAAO,OAAQJ,SAAS,SACnEb,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+DAAiEtJ,UAChF6I,2CAAAC,EAAAC,cAAA,QAAMO,UAAU,kBAAhB,mCAAuET,2CAAAC,EAAAC,cAAA,WADzE,qBACgGF,2CAAAC,EAAAC,cAAA,8BAAyBF,2CAAAC,EAAAC,cAAA,WADzH,iEAIAF,2CAAAC,EAAAC,cAAA,OAAKO,UAAW,iDAAmDtJ,UACnE6I,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UACxE6I,2CAAAC,EAAAC,cAACgB,qDAAA,EAAD,CAAYtJ,MAAO4C,MAAM4C,gCAAkCjD,GAAI,qCAAuChD,SAAWgK,QAAS,SAACxK,GAAD,OAAOyK,8CAAaC,KAAK1K,EAAE6G,SAAS8D,OAAQ,SAAC3K,GAAD,OAAOyK,8CAAaG,KAAK5K,EAAE6G,SAASgE,YAAA,EAASC,WAAU,6CAA+CtK,SAAWuK,UAAU,SAASC,SAAUnH,MAAM8C,wCAC1T0C,2CAAAC,EAAAC,cAAC0B,4CAAA,EAAD,CAAczH,GAAI,6CAA+ChD,SAAU0K,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAKlH,MAAO,CAAE+I,SAAU,MAAxB,4DAAwF/B,2CAAAC,EAAAC,cAAA,cAGzLF,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UACxE6I,2CAAAC,EAAAC,cAAC8B,qDAAA,EAAD,CAAUlK,QAAS0C,MAAM+D,2CAA4CpE,GAAI,gDAAkDhD,SAAWgK,QAAS,SAACxK,GAAD,OAAOyK,8CAAaC,KAAK1K,EAAE6G,SAAS8D,OAAQ,SAAC3K,GAAD,OAAOyK,8CAAaG,KAAK5K,EAAE6G,SAASgE,YAAA,EAASC,WAAU,wDAA0DtK,SAAWuK,UAAU,kBAAkBC,SAAUnH,MAAMiE,mDACnWuB,2CAAAC,EAAAC,cAAC0B,4CAAA,EAAD,CAAczH,GAAI,wDAA0DhD,SAAU0K,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAKlH,MAAO,CAAE+I,SAAU,MAAxB,uSAAmU/B,2CAAAC,EAAAC,cAAA,cAG/aF,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UACxE6I,2CAAAC,EAAAC,cAACgB,qDAAA,EAAD,CAAYtJ,MAAO4C,MAAMoE,oCAAsCzE,GAAI,yCAA2ChD,SAAWgK,QAAS,SAACxK,GAAD,OAAOyK,8CAAaC,KAAK1K,EAAE6G,SAAS8D,OAAQ,SAAC3K,GAAD,OAAOyK,8CAAaG,KAAK5K,EAAE6G,SAASgE,YAAA,EAASC,WAAU,iDAAmDtK,SAAWuK,UAAU,WAAWC,SAAUnH,MAAMsE,4CACxUkB,2CAAAC,EAAAC,cAAC0B,4CAAA,EAAD,CAAczH,GAAI,iDAAmDhD,SAAU0K,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAKlH,MAAO,CAAE+I,SAAU,MAAxB,6PAAyR/B,2CAAAC,EAAAC,cAAA,cAG9XF,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UACxE6I,2CAAAC,EAAAC,cAAC8B,qDAAA,EAAD,CAAUlK,QAAS0C,MAAMyE,yCAA0C9E,GAAI,8CAAgDhD,SAAWgK,QAAS,SAACxK,GAAD,OAAOyK,8CAAaC,KAAK1K,EAAE6G,SAAS8D,OAAQ,SAAC3K,GAAD,OAAOyK,8CAAaG,KAAK5K,EAAE6G,SAASgE,YAAA,EAASC,WAAU,sDAAwDtK,SAAWuK,UAAU,gBAAgBC,SAAUnH,MAAM2E,iDAC3Va,2CAAAC,EAAAC,cAAC0B,4CAAA,EAAD,CAAczH,GAAI,sDAAwDhD,SAAU0K,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAKlH,MAAO,CAAE+I,SAAU,MAAxB,0SAAsU/B,2CAAAC,EAAAC,cAAA,cAGhbF,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UACxE6I,2CAAAC,EAAAC,cAACgB,qDAAA,EAAD,CAAYtJ,MAAO4C,MAAM8E,mCAAqCnF,GAAI,wCAA0ChD,SAAWgK,QAAS,SAACxK,GAAD,OAAOyK,8CAAaC,KAAK1K,EAAE6G,SAAS8D,OAAQ,SAAC3K,GAAD,OAAOyK,8CAAaG,KAAK5K,EAAE6G,SAASgE,YAAA,EAASC,WAAU,gDAAkDtK,SAAWuK,UAAU,UAAUC,SAAUnH,MAAMgF,2CACpUQ,2CAAAC,EAAAC,cAAC0B,4CAAA,EAAD,CAAczH,GAAI,gDAAkDhD,SAAU0K,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAKlH,MAAO,CAAE+I,SAAU,MAAxB,oCAAgE/B,2CAAAC,EAAAC,cAAA,gBAKlKF,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UAChE6I,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAQ1B,QAAS,WAAQrI,YAAYf,SAAWC,WAAaC,OAAQC,eAAiBC,WAAtF,UACAyI,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAQC,UAAY1H,MAAM4C,kCAAoC5C,MAAM2H,sCAAwC5B,QAAS,WAAQtJ,WAAWC,SAAUC,SAAWC,WAAaC,OAAQC,eAAiBC,WAAnM,UAGNyI,2CAAAC,EAAAC,cAACQ,6CAAA,EAAD,CAAU1H,MAAO,CAAC+H,MAAM,OAAQF,SAAS,QAASG,MAAO,YAAc7J,UACrE6I,2CAAAC,EAAAC,cAAA,OAAKO,UAAU,oBAAoBzH,MAAO,CAACiI,OAAO,OAAQJ,SAAS,SACnEb,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+DAAiEtJ,UAChF6I,2CAAAC,EAAAC,cAAA,QAAMO,UAAU,kBAAhB,mCAAuET,2CAAAC,EAAAC,cAAA,WADzE,qBACgGF,2CAAAC,EAAAC,cAAA,4BAAuBF,2CAAAC,EAAAC,cAAA,YAEvHF,2CAAAC,EAAAC,cAAA,OAAKO,UAAW,iDAAmDtJ,UACnE6I,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UAChF6I,2CAAAC,EAAAC,cAAA,MAAIkC,SAAS,IAAKjB,QAAS,SAACxK,GAAD,OAAOyK,8CAAaC,KAAK1K,EAAE6G,SAAS8D,OAAQ,SAAC3K,GAAD,OAAOyK,8CAAaG,KAAK5K,EAAE6G,SAASgE,YAAA,EAASC,WAAU,8CAAgDtK,UAA9K,SAAmM6I,2CAAAC,EAAAC,cAAA,YAE3LF,2CAAAC,EAAAC,cAAC0B,4CAAA,EAAD,CAAczH,GAAI,8CAAgDhD,SAAU0K,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAKlH,MAAO,CAAE+I,SAAU,MAAxB,0HAAsJ/B,2CAAAC,EAAAC,cAAA,aAExPF,2CAAAC,EAAAC,cAAA,OAAK/F,GAAI,2CAA6ChD,SAAU6B,MAAO,CAACqJ,WAAW,OAAOC,aAAa,SACrGtC,2CAAAC,EAAAC,cAAA,OAAKO,UAAW,+CAAiDtJ,UAC/D6I,2CAAAC,EAAAC,cAACqC,qDAAA,EAAD,CAAWpI,GAAI,wCAA0ChD,SAAUqL,YAAU,EACzEC,QAASrJ,2CACTsJ,KAAM1K,wCAAwCC,iCAC9C0K,OAAQ,SAAAC,GAAA,IACNF,EADME,EACNF,KACAD,EAFMG,EAENH,QACAI,EAHMD,EAGNC,eAEAC,GALMF,EAING,YAJMH,EAKNE,eALMF,EAMNI,gBANMJ,EAONK,cAPML,EAQNM,uBARM,OAUVlD,2CAAAC,EAAAC,cAACiD,qDAAA,EAAD,KACEnD,2CAAAC,EAAAC,cAACkD,qDAAA,EAAD,CAAcC,aAAW,sBACvBrD,2CAAAC,EAAAC,cAACoD,sDAAA,EAAD,KACEtD,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAQ1B,QAAS,WAAOhH,0CAA0CpC,SAAU,CAACwG,0CAA0C,IAAQK,iDAAgD,OAA/K,SAGJgC,2CAAAC,EAAAC,cAACqD,sDAAA,EAADxI,OAAAqF,OAAA,CAAOoD,KAAK,UAAaV,KACvB9C,2CAAAC,EAAAC,cAACuD,sDAAA,EAAD,KACEzD,2CAAAC,EAAAC,cAACwD,sDAAA,EAAD,KACGjB,EAAQkB,IAAI,SAAAtK,GAAM,OACjB2G,2CAAAC,EAAAC,cAAC0D,sDAAA,EAAgBf,EAAe,CAAExJ,WAC/BA,EAAOA,UAGZ2G,2CAAAC,EAAAC,cAAC0D,sDAAA,EAAD,kBAKJ5D,2CAAAC,EAAAC,cAAC2D,sDAAA,EAAD,KACGnB,EAAKiB,IAAI,SAAAlJ,GAAG,OACXuF,2CAAAC,EAAAC,cAACwD,sDAAA,EAAD,CAAUpK,IAAKmB,EAAIN,IAChBM,EAAIqJ,MAAMH,IAAI,SAAAI,GAAI,OACjB/D,2CAAAC,EAAAC,cAAC8D,sDAAA,EAAD,CAAW1K,IAAKyK,EAAK5J,IAAK4J,EAAKnM,SAEjCoI,2CAAAC,EAAAC,cAAC8D,sDAAA,EAAD,KACEhE,2CAAAC,EAAAC,cAAC+D,mCAAA,SAAD,CAAUC,SAAUlE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAAC1J,yCAAD,CAA0CiE,IAAKA,EAAKvD,SAAUqE,4CAEhEyE,2CAAAC,EAAAC,cAAC+D,mCAAA,SAAD,CAAUC,SAAUlE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAACnJ,kCAAD,CAAoCwB,KAAMP,wCAAwCC,iCAAkCO,QAASqH,YAAapF,IAAKA,EAAKvD,SAAUqE,yCAA0ClD,SAAUA,SAAU0H,SAAS,EAAMjG,KAAM,mCAAoC3C,SAAUA,SAAW,QAASG,eAAgBH,SAC3VyG,6CAA8CA,6CAA8C9B,uCAAwCA,uCACpIiC,6CAA8CA,6CAC9CI,oDAAqDA,qEAe/C6B,2CAAAC,EAAAC,cAAA,OAAKO,UAAY,+CAAiDtJ,UAChE6I,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAQ1B,QAAS,WAAQrI,YAAYf,SAAWC,WAAaC,OAAQC,eAAiBC,WAAtF,UACAyI,2CAAAC,EAAAC,cAAC+B,qDAAA,EAAD,CAAQC,UAAY1H,MAAM4C,kCAAoC5C,MAAM2H,sCAAwC5B,QAAS,WAAQtJ,WAAWC,SAAUC,SAAWC,WAAaC,OAAQC,eAAiBC,WAAnM,WAIFyI,2CAAAC,EAAAC,cAAC+D,mCAAA,SAAD,CAAUC,SAAUlE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAACpJ,iCAAD,CAAkCI,SAAUqE,yCAA0ChE,QAAS,WAAO4B,SAAShC,WAAaA,SAAUA,SAC9IyG,6CAA8CA,6CAA8C9B,uCAAwCA,uCACpIiC,6CAA8CA,6CAC9CI,oDAAqDA,uDAG/C6B,2CAAAC,EAAAC,cAAC+D,mCAAA,SAAD,CAAUC,SAAUlE,2CAAAC,EAAAC,cAAA,aAClBF,2CAAAC,EAAAC,cAACnJ,kCAAD,CAAoCG,SAAUqE,yCAA0ClD,SAAUA,SAAUyB,KAAM,mCAAoC3C,SAAUA,SAAW,QAASG,eAAgBH,SAC5MyG,6CAA8CA,6CAA8C9B,uCAAwCA,uCACpIiC,6CAA8CA,6CAC9CI,oDAAqDA,0DASlD5D,6FCnef7D,EAAA,SAAAyN,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA2N,EAAAF,GAAAF,EAAAvN,EAAA,GAAAsJ,EAAAtJ,EAAA2N,EAAAJ,GAAA,SAAAK,EAAAC,EAAAC,GACA,IAAAC,EAAA1J,OAAA0J,KAAAF,GAEA,GAAAxJ,OAAA2J,sBAAA,CACA,IAAAC,EAAA5J,OAAA2J,sBAAAH,GACAC,IAAAG,IAAAC,OAAA,SAAAC,GACA,OAAA9J,OAAA+J,yBAAAP,EAAAM,GAAAE,cAEAN,EAAAxK,KAAA8C,MAAA0H,EAAAE,GAGA,OAAAF,EAuBA,SAAAO,EAAAC,EAAA3L,EAAA1B,GAYA,OAXA0B,KAAA2L,EACAlK,OAAAmK,eAAAD,EAAA3L,EAAA,CACA1B,QACAmN,YAAA,EACAI,cAAA,EACAC,UAAA,IAGAH,EAAA3L,GAAA1B,EAGAqN,EAGA,SAAAI,EAAAC,EAAAC,GACA,SAAAD,EAAA,SAEA,IAEAhM,EAAAX,EAFA6E,EAkBA,SAAA8H,EAAAC,GACA,SAAAD,EAAA,SACA,IAEAhM,EAAAX,EAFA6E,EAAA,GACAgI,EAAAzK,OAAA0J,KAAAa,GAGA,IAAA3M,EAAA,EAAaA,EAAA6M,EAAA5M,OAAuBD,IACpCW,EAAAkM,EAAA7M,GACA4M,EAAAE,QAAAnM,IAAA,IACAkE,EAAAlE,GAAAgM,EAAAhM,IAGA,OAAAkE,EA9BAkI,CAAAJ,EAAAC,GAIA,GAAAxK,OAAA2J,sBAAA,CACA,IAAAiB,EAAA5K,OAAA2J,sBAAAY,GAEA,IAAA3M,EAAA,EAAeA,EAAAgN,EAAA/M,OAA6BD,IAC5CW,EAAAqM,EAAAhN,GACA4M,EAAAE,QAAAnM,IAAA,GACAyB,OAAA6K,UAAAC,qBAAAC,KAAAR,EAAAhM,KACAkE,EAAAlE,GAAAgM,EAAAhM,IAIA,OAAAkE,EAkBA,SAAAuI,IAeA,OAdAA,EAAAhL,OAAAqF,QAAA,SAAA5C,GACA,QAAA7E,EAAA,EAAmBA,EAAAsE,UAAArE,OAAsBD,IAAA,CACzC,IAAA2M,EAAArI,UAAAtE,GAEA,QAAAW,KAAAgM,EACAvK,OAAA6K,UAAAI,eAAAF,KAAAR,EAAAhM,KACAkE,EAAAlE,GAAAgM,EAAAhM,IAKA,OAAAkE,IAGAT,MAAAC,KAAAC,WApGAvG,EAAA,IAuHgB,EA6FT,SAAAuP,EAAAnM,GAKP,OAAAA,GAAA,SAAAA,EAAAoM,MAAA,SAGA,IAAAC,EAAA,SAAA1K,GACA,IA/CO2K,EA+CP3F,EAAAhF,EAAAgF,UACA4F,EAAA5K,EAAA4K,UACAC,EAAA7K,EAAA6K,YACAC,EAAA9K,EAAA8K,KACAC,EAAA/K,EAAA+K,SACAvF,EAAAxF,EAAAwF,OACAnH,EAAA2B,EAAA3B,KACA2M,EAAAhL,EAAAgL,KACAC,EAAAjL,EAAAiL,KACA1N,EAAAyC,EAAAzC,MACA+H,EAAAtF,EAAAsF,MACA4F,EAAAlL,EAAAkL,QACAC,EAAAvB,EAAA5J,EAAA,mHAEAjB,EA7NA,SAAAgD,GACA,QAAA7E,EAAA,EAAiBA,EAAAsE,UAAArE,OAAsBD,IAAA,CACvC,IAAA2M,EAAA,MAAArI,UAAAtE,GAAAsE,UAAAtE,GAAA,GAEAA,EAAA,EACA2L,EAAAvJ,OAAAuK,IAAA,GAAAuB,QAAA,SAAAvN,GACA0L,EAAAxH,EAAAlE,EAAAgM,EAAAhM,MAEKyB,OAAA+L,0BACL/L,OAAAgM,iBAAAvJ,EAAAzC,OAAA+L,0BAAAxB,IAEAhB,EAAAvJ,OAAAuK,IAAAuB,QAAA,SAAAvN,GACAyB,OAAAmK,eAAA1H,EAAAlE,EAAAyB,OAAA+J,yBAAAQ,EAAAhM,MAKA,OAAAkE,EA4MAwJ,CAAA,CACAvG,YACA8F,OACAC,WACAvF,UAAAwF,EAAAxF,OACAnH,KAAAmM,EAAAnM,EAAA,SAAAmN,OAAAnN,GACA4M,OACA1N,QACAkO,QAAAT,EAAAS,QACAnG,SAAA0F,EAAA1F,MACAoG,IAAAR,GACGC,GAEHQ,EAAAX,GA1EOL,EA0EPK,EAAAL,QAzEArL,OAAA0J,KAAA2B,GAAAxB,OAAA,SAAAtL,GACA,OAAA8M,EAAA9M,KACGqK,IAAA,SAAA0D,GACH,IAAA9O,EAAA6N,EAAAiB,GAEA,kBAAAA,EACA9O,EAAAoL,IAAA,SAAA2D,EAAAC,GACA,IAAAC,EAAA,CACAC,GAAAH,EAAAG,GACAC,GAAAJ,EAAAI,GACAC,EAAAL,EAAAK,EACArO,IAAA,SAAA2N,OAAAM,IAEA,OAA4BvH,EAAAC,EAAKC,cAAA,SAAA6F,EAAA,CACjCzM,IAAAiO,GACSC,MAEJ,UAAAH,EACL9O,EAAAoL,IAAA,SAAAiE,EAAAL,GACA,OAA4BvH,EAAAC,EAAKC,cAAA,QACjC2H,EAAAD,EAAAC,EACAvO,IAAA,MAAA2N,OAAAM,OAGK,aAAAF,EACL9O,EAAAoL,IAAA,SAAAmE,EAAAP,GACA,OAA4BvH,EAAAC,EAAKC,cAAA,WACjC6H,OAAAD,EAAAC,OACAzO,IAAA,MAAA2N,OAAAM,OAKA,MAwCA,GACA,OAAsBvH,EAAAC,EAAKC,cAAA,MAAA6F,EAAA,GAAiCvL,EAAA,CAC5D6I,aAAAiD,IACmBtG,EAAAC,EAAKC,cAAA,kCAAAmG,EAAAC,EAAAD,GAAAe,IAGxBjB,EAAA6B,UAAA,CAIAvH,UAAa2D,EAAAnE,EAASgI,OAKtB3B,YAAelC,EAAAnE,EAASgI,OAAAC,WAKxB3B,KAAQnC,EAAAnE,EAASgI,OAKjBzB,SAAYpC,EAAAnE,EAASgI,OAKrBhH,OAAUmD,EAAAnE,EAASgI,OAKnBxB,KAAQrC,EAAAnE,EAASkI,MAAA,CACjBpH,MAAWqD,EAAAnE,EAASgI,OACpBhH,OAAYmD,EAAAnE,EAASgI,OACrBf,QAAa9C,EAAAnE,EAASgI,OAAAC,WACtB9B,QAAahC,EAAAnE,EAASsE,OAAA2D,aAMtBvB,QAAWvC,EAAAnE,EAASmI,KAKpB/B,UAAajC,EAAAnE,EAASgI,OAKtBnO,KAAQsK,EAAAnE,EAASgI,OAKjBvB,KAAQtC,EAAAnE,EAASgI,OAKjBjP,MAASoL,EAAAnE,EAASsE,OAKlB2C,QAAW9C,EAAAnE,EAASgI,OAKpBlH,MAASqD,EAAAnE,EAASgI,QAElB9B,EAAAkC,aAAA,CACA7B,SAAA,UACAE,KAAA,OAGe4B,EAAA","file":"static/js/209.64d1d970.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst PoliciescontentInjectionpathsDeleteModal = lazy(() => import('./policiescontent_injectionpathsDeleteModal'));\nconst PoliciescontentInjectionpathsAdd = lazy(() => import('./policiescontent_injectionpathsAdd'));\nconst PoliciescontentInjectionpathsEdit = lazy(() => import('./policiescontent_injectionpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_content_injection_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_content_injection_name\"] = document.getElementById(\"policies_content_injection_name_id\" + idPrefix).value;\n    }\n    json[\"policies_content_injection_full_line_match\"] = document.getElementById(\"policies_content_injection_full_line_match_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"policies_content_injection_location_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_content_injection_location\"] = document.getElementById(\"policies_content_injection_location_id\" + idPrefix).value;\n    }\n    json[\"policies_content_injection_replace_match\"] = document.getElementById(\"policies_content_injection_replace_match_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"policies_content_injection_content_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_content_injection_content\"] = document.getElementById(\"policies_content_injection_content_id\" + idPrefix).value;\n    }\n    json[\"policies_content_injection_paths\"] = policies_content_injection_pathsrowData.policies_content_injection_paths;\n      \n    loadGrid( json[\"policies_content_injection_name\"], json[\"policies_content_injection_full_line_match\"], json[\"policies_content_injection_location\"], json[\"policies_content_injection_replace_match\"], json[\"policies_content_injection_content\"], json[\"policies_content_injection_paths\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_content_injection\")) {\n        var len = \"_content_injection\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editpolicies_content_injectionPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_content_injection\")) {\n        var len = \"_content_injection\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editpolicies_content_injectionPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_content_injection_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_content_injection_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_content_injection_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_content_injection_pathsrowData = {policies_content_injection_paths: []};\n\nconst policies_content_injection_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_content_injection_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_content_injection_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciescontent_injection_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_content_injection_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    policies_content_injection_pathsrowData.policies_content_injection_paths = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].name)?data[i].name:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].paths !== undefined ) {\n              if(typeof data[i].paths === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].paths;\n                newItem[\"paths\"] = data[i].paths;\n                policies_content_injection_pathsrowData.policies_content_injection_paths.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].paths.length; i2++) {\n                  var newItem = {};\n                  if(data[i].paths[i2].id) {\n                    newItem[\"id\"] = data[i].paths[i2].id;\n                  } else if(data[i].paths[i2].paths) {\n                    newItem[\"id\"] = data[i].paths[i2].paths;\n                  } else {\n                    newItem[\"id\"] = data[i].paths[i2];\n                  }\n                  if(data[i].paths[i2].paths) {\n                    newItem[\"paths\"] = data[i].paths[i2].paths;\n                  } else {\n                    newItem[\"paths\"] = data[i].paths[i2];\n                  }\n                  policies_content_injection_pathsrowData.policies_content_injection_paths.push(newItem);\n                }\n              }\n              setData(\"setpolicies_content_injection_paths\", policies_content_injection_pathsrowData.policies_content_injection_paths);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.policies !== undefined && json.policies.content_injection !== undefined ) {\n        for(var i = 0; i < json.policies.content_injection.length; i++) {\n          var tempId = ((json.policies_content_injection[i].name)?json.policies_content_injection[i].name:\"\");\n          if(tempId === window[oName + \"rowId\"]) {\n            if(json !== undefined && json.policies !== undefined && json.policies.content_injection[i] !== undefined && json.policies.content_injection[i].paths !== undefined ) {\n              for(var i2 = 0; i2 < json.policies.content_injection[i].paths.length; i2++) {\n                var newItem = {};\n                newItem.id = json.policies.content_injection[i].paths[i2];\n                newItem.paths = json.policies.content_injection[i].paths[i2];\n                policies_content_injection_pathsrowData.policies_content_injection_paths.push(newItem);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\nconst Policies_content_injectionEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [policies_content_injection_paths, setpolicies_content_injection_paths] = React.useState([]);\n    const [fetchedpolicies_content_injection_paths, setFetchedpolicies_content_injection_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_content_injection_pathsloadGrid();\n    }, [fetchedpolicies_content_injection_paths]);\n\n    const policies_content_injection_pathsloadGrid = React.useCallback(async (policies_content_injection_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_content_injection_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_content_injection_pathsrowData.policies_content_injection_paths.length; i++) {\n              var tempId = ((policies_content_injection_pathsrowData.policies_content_injection_paths[i].paths)?policies_content_injection_pathsrowData.policies_content_injection_paths[i].paths:\"\") + \"\";\n              if((window.policies_content_injection_pathsediting != true && window.policies_content_injection_pathsediting != \"true\") || tempId != window.policies_content_injection_pathsrowId) {\n                attrs.push(policies_content_injection_pathsrowData.policies_content_injection_paths[i]);\n              }\n            }\n            var newId = ((policies_content_injection_paths_paths)?policies_content_injection_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_content_injection_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_content_injection_pathsrowData.policies_content_injection_paths.length; i++) {\n              if(policies_content_injection_pathsrowData.policies_content_injection_paths[i].paths !== policies_content_injection_paths_paths ) {\n                attrs.push(policies_content_injection_pathsrowData.policies_content_injection_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_content_injection_pathsrowData.policies_content_injection_paths;\n        }\n        policies_content_injection_pathsrowData.policies_content_injection_paths = attrs;\n        const data = {policies_content_injection_paths: attrs};\n        setpolicies_content_injection_paths(data.policies_content_injection_paths);\n\n        if(policies_content_injection_paths_paths !== undefined && policies_content_injection_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [policies_content_injection_name, setpolicies_content_injection_name] = useState(''),\n    updatepolicies_content_injection_name = useCallback((evt) => setpolicies_content_injection_name(evt.target.value), []);\n\n    const [policies_content_injection_paths_paths, setpolicies_content_injection_paths_paths] = useState(''),\n    updatepolicies_content_injection_paths_paths = useCallback((evt) => setpolicies_content_injection_paths_paths(evt.target.value), []);\n    const [policies_content_injection_paths_paths_valid, setpolicies_content_injection_paths_paths_valid] = useState(true);\n    const [policies_content_injection_paths_paths_invalid_text, setpolicies_content_injection_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_content_injection_full_line_match, setpolicies_content_injection_full_line_match] = useState(true),\n    updatepolicies_content_injection_full_line_match = useCallback((evt) => setpolicies_content_injection_full_line_match(evt), []);\n\n    const [policies_content_injection_location, setpolicies_content_injection_location] = useState(''),\n    updatepolicies_content_injection_location = useCallback((evt) => setpolicies_content_injection_location(evt.target.value), []);\n\n    const [policies_content_injection_replace_match, setpolicies_content_injection_replace_match] = useState(false),\n    updatepolicies_content_injection_replace_match = useCallback((evt) => setpolicies_content_injection_replace_match(evt), []);\n\n    const [policies_content_injection_content, setpolicies_content_injection_content] = useState(''),\n    updatepolicies_content_injection_content = useCallback((evt) => setpolicies_content_injection_content(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_content_injection_pathsrowData.policies_content_injection_paths.length; i++) {\n        if(policies_content_injection_pathsrowData.policies_content_injection_paths[i].id === window.policies_content_injection_pathsrowId) {\n        setpolicies_content_injection_paths_paths((policies_content_injection_pathsrowData.policies_content_injection_paths[i] !== undefined && policies_content_injection_pathsrowData.policies_content_injection_paths[i].paths !== undefined )?policies_content_injection_pathsrowData.policies_content_injection_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editpolicies_content_injectionPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"policies_content_injection_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_content_injection_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Content Injection : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_content_injection_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n          <TextInput  value={props.policies_content_injection_name}  id={\"policies_content_injection_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_content_injection_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_content_injection_name}/>\n          <ReactTooltip id={\"policies_content_injection_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A name to be associated with this content injection rule.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n          <Checkbox checked={props.policies_content_injection_full_line_match} id={\"policies_content_injection_full_line_match_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_content_injection_full_line_match_tooltip_id\" + idPrefix}  labelText=\"Full Line Match\" onChange={props.updatepolicies_content_injection_full_line_match}/>\n          <ReactTooltip id={\"policies_content_injection_full_line_match_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Should the location match a full line, or should it match any string in the response?  When a full line match is configured the content will be inserted prior to the matching line.  When a partial line match is configured the content will be inserted immediately prior to the matching string.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n          <TextInput  value={props.policies_content_injection_location}  id={\"policies_content_injection_location_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_content_injection_location_tooltip_id\" + idPrefix}  labelText=\"Location\" onChange={props.updatepolicies_content_injection_location}/>\n          <ReactTooltip id={\"policies_content_injection_location_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The location where the content should be injected. If a full line match is being used the location is pattern matched against a line in the response using the `*.` wildcard characters.  The maximum length of a line which can be matched is 8192 bytes.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n          <Checkbox checked={props.policies_content_injection_replace_match} id={\"policies_content_injection_replace_match_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_content_injection_replace_match_tooltip_id\" + idPrefix}  labelText=\"Replace Match\" onChange={props.updatepolicies_content_injection_replace_match}/>\n          <ReactTooltip id={\"policies_content_injection_replace_match_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If a partial line match is being used this configuration entry will control whether the matching string is replaced with the supplied content, or whether the supplied content is inserted prior to the matching string.  This configuration entry will be ignored if full line matches are being used.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n          <TextInput  value={props.policies_content_injection_content}  id={\"policies_content_injection_content_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_content_injection_content_tooltip_id\" + idPrefix}  labelText=\"Content\" onChange={props.updatepolicies_content_injection_content}/>\n          <ReactTooltip id={\"policies_content_injection_content_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The data which is to be injected.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_content_injection_name || !props.policies_content_injection_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_content_injection_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Content Injection : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_content_injection_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_content_injection_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_content_injection_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The path for which content injection will take place. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_content_injection_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n                    <DataTable id={\"policies_content_injection_pathsTable\" + idPrefix} isSortable\n                        headers={policies_content_injection_pathsheaderData}\n                        rows={policies_content_injection_pathsrowData.policies_content_injection_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_content_injection_pathshandleAdd(idPrefix, [setpolicies_content_injection_paths_paths(''),    setpolicies_content_injection_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciescontentInjectionpathsDeleteModal row={row} loadGrid={policies_content_injection_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciescontentInjectionpathsEdit  data={policies_content_injection_pathsrowData.policies_content_injection_paths} setData={setDataMain} row={row} loadGrid={policies_content_injection_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_content_injection_paths\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updatepolicies_content_injection_paths_paths={updatepolicies_content_injection_paths_paths} policies_content_injection_paths_paths={policies_content_injection_paths_paths}\n            policies_content_injection_paths_paths_valid={policies_content_injection_paths_paths_valid}\n            policies_content_injection_paths_paths_invalid_text={policies_content_injection_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_content_injection_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_content_injection_name || !props.policies_content_injection_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciescontentInjectionpathsAdd loadGrid={policies_content_injection_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_content_injection_paths_paths={updatepolicies_content_injection_paths_paths} policies_content_injection_paths_paths={policies_content_injection_paths_paths}\n            policies_content_injection_paths_paths_valid={policies_content_injection_paths_paths_valid}\n            policies_content_injection_paths_paths_invalid_text={policies_content_injection_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciescontentInjectionpathsEdit  loadGrid={policies_content_injection_pathsloadGrid} dataLoad={dataLoad} name={\"policies_content_injection_paths\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updatepolicies_content_injection_paths_paths={updatepolicies_content_injection_paths_paths} policies_content_injection_paths_paths={policies_content_injection_paths_paths}\n            policies_content_injection_paths_paths_valid={policies_content_injection_paths_paths_valid}\n            policies_content_injection_paths_paths_invalid_text={policies_content_injection_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Policies_content_injectionEdit;\n","function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"]);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"sourceRoot":""}