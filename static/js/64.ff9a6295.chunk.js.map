{"version":3,"sources":["content/servicesPage/servicesrediscollectionsserversAdd.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ServicesrediscollectionsserversssltrustCertificatesDeleteModal","lazy","all","__webpack_require__","e","bind","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","ServicesrediscollectionsserverssslclientCertificateDeleteModal","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","json","document","getElementById","endsWith","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","setservices_redis_collections_servers_ssl_trust_certificates","setservices_redis_collections_servers_ssl_client_certificate","doAdd","updateStyle","style","display","closeAdd","services_redis_collections_servers_ssl_trust_certificatesheaderData","header","services_redis_collections_servers_ssl_trust_certificateshandleAdd","clearFields","eval","services_redis_collections_servers_ssl_client_certificateheaderData","services_redis_collections_servers_ssl_client_certificatehandleAdd","Servicesrediscollections_serversAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","useEffect","services_redis_collections_servers_ssl_trust_certificatesloadGrid","useCallback","_ref","_asyncToGenerator","_callee","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","add","attrs","tempId","newId","_context","trust_certificates","window","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","id","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","_ref2","_callee2","services_redis_collections_servers_ssl_client_certificate_client_certificate","_context2","client_certificate","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","_x3","_x4","_useState","_useState2","services_redis_collections_servers_name","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","evt","target","_useState3","_useState4","services_redis_collections_servers_host","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","_useState5","_useState6","services_redis_collections_servers_port","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","_useState7","_useState8","services_redis_collections_servers_username","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","_useState9","_useState10","services_redis_collections_servers_password","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","_useState11","_useState12","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","validateField","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState13","_useState14","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","_useState15","_useState16","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState17","_useState18","setservices_redis_collections_servers_ssl_client_certificate_client_certificate","updateservices_redis_collections_servers_ssl_client_certificate_client_certificate","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState19","_useState20","services_redis_collections_servers_ssl_client_certificate_client_certificate_valid","_useState21","_useState22","services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState23","_useState24","services_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","services_redis_collections_servers_name_valid","invalidText","services_redis_collections_servers_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","NumberInput","min","label","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","_ref4"],"mappings":"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","file":"static/js/64.ff9a6295.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_name\"] = document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_host\"] = document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_port\"] = document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_username\"] = document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_password\"] = document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_ssl_sni\"] = document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_ssl_client_certificate\"] = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n    json[\"services_redis_collections_servers_ssl_trust_certificates\"] = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"services_redis_collections_servers_name\"], json[\"services_redis_collections_servers_host\"], json[\"services_redis_collections_servers_port\"], json[\"services_redis_collections_servers_username\"], json[\"services_redis_collections_servers_password\"], json[\"services_redis_collections_servers_ssl_sni\"], json[\"services_redis_collections_servers_ssl_client_certificate\"], json[\"services_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_client_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_redis_collections_servers_name_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_host_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_port_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_username_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_password_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_servers_ssl_sni_id\").value = \"\";\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = []\n    setservices_redis_collections_servers_ssl_trust_certificates(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = []\n    setservices_redis_collections_servers_ssl_client_certificate(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservicesrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Servicesrediscollections_serversAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => setservices_redis_collections_servers_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, \"Services Redis Collections Servers Ssl Trust Certificates\", \"trust_certificates\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateservices_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => {\n      setservices_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, \"Services Redis Collections Servers Ssl Client Certificate\", \"client_certificate\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].id === window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i] !== undefined && services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].id === window.services_redis_collections_servers_ssl_client_certificaterowId) {\n        setservices_redis_collections_servers_ssl_client_certificate_client_certificate((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i] !== undefined && services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservicesrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_redis_collections_servers_name_valid}  invalidText={props.services_redis_collections_servers_name_invalid_text}  value={props.services_redis_collections_servers_name}  id={\"services_redis_collections_servers_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_servers_name}/>\n          <ReactTooltip id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_host}  id={\"services_redis_collections_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_redis_collections_servers_host}/>\n          <ReactTooltip id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_servers_port} id={\"services_redis_collections_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateservices_redis_collections_servers_port}/>\n          <ReactTooltip id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_username}  id={\"services_redis_collections_servers_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_redis_collections_servers_username}/>\n          <ReactTooltip id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_password}  id={\"services_redis_collections_servers_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_redis_collections_servers_password}/>\n          <ReactTooltip id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  The SSL information associated with the Redis server.\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesEdit  data={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateEdit  data={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_ssl_sni}  id={\"services_redis_collections_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesAdd loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesEdit  loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateAdd loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateEdit  loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Servicesrediscollections_serversAdd;\n"],"sourceRoot":""}