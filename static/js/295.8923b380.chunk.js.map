{"version":3,"sources":["content/policiesPage/policieshttp_transformationsresponseAdd.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PolicieshttpTransformationsresponsepathsDeleteModal","lazy","all","__webpack_require__","e","bind","PolicieshttpTransformationsresponsepathsAdd","PolicieshttpTransformationsresponsepathsEdit","PolicieshttpTransformationsresponseattributesDeleteModal","PolicieshttpTransformationsresponseattributesAdd","PolicieshttpTransformationsresponseattributesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","json","document","getElementById","endsWith","policies_http_transformations_response_pathsrowData","policies_http_transformations_response_paths","policies_http_transformations_response_attributesrowData","policies_http_transformations_response_attributes","handleClose","handleAdd","setpolicies_http_transformations_response_paths","setpolicies_http_transformations_response_attributes","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_response_pathsheaderData","header","policies_http_transformations_response_pathshandleAdd","clearFields","eval","policies_http_transformations_response_attributesheaderData","policies_http_transformations_response_attributeshandleAdd","Policieshttp_transformations_responseAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedpolicies_http_transformations_response_paths","setFetchedpolicies_http_transformations_response_paths","useEffect","policies_http_transformations_response_pathsloadGrid","useCallback","_ref","_asyncToGenerator","_callee","policies_http_transformations_response_paths_paths","add","attrs","tempId","newId","_context","paths","window","policies_http_transformations_response_pathsediting","policies_http_transformations_response_pathsrowId","id","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedpolicies_http_transformations_response_attributes","setFetchedpolicies_http_transformations_response_attributes","policies_http_transformations_response_attributesloadGrid","_ref2","_callee2","policies_http_transformations_response_attributes_attributes","_context2","attributes","policies_http_transformations_response_attributesediting","policies_http_transformations_response_attributesrowId","_x3","_x4","_useState","_useState2","policies_http_transformations_response_name","setpolicies_http_transformations_response_name","updatepolicies_http_transformations_response_name","evt","target","_useState3","_useState4","policies_http_transformations_response_host","setpolicies_http_transformations_response_host","updatepolicies_http_transformations_response_host","_useState5","_useState6","setpolicies_http_transformations_response_paths_paths","updatepolicies_http_transformations_response_paths_paths","validateField","setpolicies_http_transformations_response_paths_paths_valid","setpolicies_http_transformations_response_paths_paths_invalid_text","_useState7","_useState8","policies_http_transformations_response_paths_paths_valid","_useState9","_useState10","policies_http_transformations_response_paths_paths_invalid_text","_useState11","_useState12","policies_http_transformations_response_method","setpolicies_http_transformations_response_method","updatepolicies_http_transformations_response_method","_useState13","_useState14","policies_http_transformations_response_rule","setpolicies_http_transformations_response_rule","updatepolicies_http_transformations_response_rule","_useState15","_useState16","setpolicies_http_transformations_response_attributes_attributes","updatepolicies_http_transformations_response_attributes_attributes","setpolicies_http_transformations_response_attributes_attributes_valid","setpolicies_http_transformations_response_attributes_attributes_invalid_text","_useState17","_useState18","policies_http_transformations_response_attributes_attributes_valid","_useState19","_useState20","policies_http_transformations_response_attributes_attributes_invalid_text","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","tabIndex","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","place","effect","maxWidth","marginLeft","marginBottom","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Button","onClick","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","disabled","policies_http_transformations_response_name_valid","TextInput","invalid","invalidText","policies_http_transformations_response_name_invalid_text","labelText","onChange","_ref4"],"mappings":"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","file":"static/js/295.8923b380.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationsresponsepathsDeleteModal = lazy(() => import('./policieshttp_transformationsresponsepathsDeleteModal'));\nconst PolicieshttpTransformationsresponsepathsAdd = lazy(() => import('./policieshttp_transformationsresponsepathsAdd'));\nconst PolicieshttpTransformationsresponsepathsEdit = lazy(() => import('./policieshttp_transformationsresponsepathsEdit'));\nconst PolicieshttpTransformationsresponseattributesDeleteModal = lazy(() => import('./policieshttp_transformationsresponseattributesDeleteModal'));\nconst PolicieshttpTransformationsresponseattributesAdd = lazy(() => import('./policieshttp_transformationsresponseattributesAdd'));\nconst PolicieshttpTransformationsresponseattributesEdit = lazy(() => import('./policieshttp_transformationsresponseattributesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_name\"] = document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_host\"] = document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_method\"] = document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_rule\"] = document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_response_paths\"] = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n    json[\"policies_http_transformations_response_attributes\"] = policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes;\n      \n    loadGrid( json[\"policies_http_transformations_response_name\"], json[\"policies_http_transformations_response_host\"], json[\"policies_http_transformations_response_method\"], json[\"policies_http_transformations_response_rule\"], json[\"policies_http_transformations_response_paths\"], json[\"policies_http_transformations_response_attributes\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_response_paths, setpolicies_http_transformations_response_attributes, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_response_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_rule_id\").value = \"\";\n    policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = []\n    setpolicies_http_transformations_response_paths(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths);\n\n    policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes = []\n    setpolicies_http_transformations_response_attributes(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_responsePage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_response_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_response_pathsrowData = {policies_http_transformations_response_paths: []};\n\nconst policies_http_transformations_response_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst policies_http_transformations_response_attributesheaderData = [\n    {\n    header: 'Attribute',\n    key: 'attributes',\n  },\n\n];\n\nconst policies_http_transformations_response_attributesrowData = {policies_http_transformations_response_attributes: []};\n\nconst policies_http_transformations_response_attributeshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_attributes_attributes_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_attributesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_responseAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_paths, setFetchedpolicies_http_transformations_response_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_response_paths]);\n\n    const policies_http_transformations_response_pathsloadGrid = React.useCallback(async (policies_http_transformations_response_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              var tempId = ((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths)?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_response_pathsediting != true && window.policies_http_transformations_response_pathsediting != \"true\") || tempId != window.policies_http_transformations_response_pathsrowId) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_paths_paths)?policies_http_transformations_response_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_response_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== policies_http_transformations_response_paths_paths ) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n        }\n        policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = attrs;\n        const data = {policies_http_transformations_response_paths: attrs};\n        setpolicies_http_transformations_response_paths(data.policies_http_transformations_response_paths);\n\n        if(policies_http_transformations_response_paths_paths !== undefined && policies_http_transformations_response_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [policies_http_transformations_response_attributes, setpolicies_http_transformations_response_attributes] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_attributes, setFetchedpolicies_http_transformations_response_attributes] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_attributesloadGrid();\n    }, [fetchedpolicies_http_transformations_response_attributes]);\n\n    const policies_http_transformations_response_attributesloadGrid = React.useCallback(async (policies_http_transformations_response_attributes_attributes, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_attributes_attributes) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n              var tempId = ((policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes)?policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes:\"\") + \"\";\n              if((window.policies_http_transformations_response_attributesediting != true && window.policies_http_transformations_response_attributesediting != \"true\") || tempId != window.policies_http_transformations_response_attributesrowId) {\n                attrs.push(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_attributes_attributes)?policies_http_transformations_response_attributes_attributes:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              attributes: policies_http_transformations_response_attributes_attributes,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n              if(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes !== policies_http_transformations_response_attributes_attributes ) {\n                attrs.push(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes;\n        }\n        policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes = attrs;\n        const data = {policies_http_transformations_response_attributes: attrs};\n        setpolicies_http_transformations_response_attributes(data.policies_http_transformations_response_attributes);\n\n        if(policies_http_transformations_response_attributes_attributes !== undefined && policies_http_transformations_response_attributes_attributes !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_response_name, setpolicies_http_transformations_response_name] = useState(''),\n    updatepolicies_http_transformations_response_name = useCallback((evt) => setpolicies_http_transformations_response_name(evt.target.value), []);\n\n    const [policies_http_transformations_response_host, setpolicies_http_transformations_response_host] = useState(''),\n    updatepolicies_http_transformations_response_host = useCallback((evt) => setpolicies_http_transformations_response_host(evt.target.value), []);\n\n    const [policies_http_transformations_response_paths_paths, setpolicies_http_transformations_response_paths_paths] = useState(''),\n    updatepolicies_http_transformations_response_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_response_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_invalid_text, \"Policies Http Transformations Response Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_response_paths_paths_invalid_text, setpolicies_http_transformations_response_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_response_method, setpolicies_http_transformations_response_method] = useState(''),\n    updatepolicies_http_transformations_response_method = useCallback((evt) => setpolicies_http_transformations_response_method(evt.target.value), []);\n\n    const [policies_http_transformations_response_rule, setpolicies_http_transformations_response_rule] = useState(''),\n    updatepolicies_http_transformations_response_rule = useCallback((evt) => setpolicies_http_transformations_response_rule(evt.target.value), []);\n\n    const [policies_http_transformations_response_attributes_attributes, setpolicies_http_transformations_response_attributes_attributes] = useState(''),\n    updatepolicies_http_transformations_response_attributes_attributes = useCallback((evt) => {\n      setpolicies_http_transformations_response_attributes_attributes(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes, setpolicies_http_transformations_response_attributes_attributes_valid, setpolicies_http_transformations_response_attributes_attributes_invalid_text, \"Policies Http Transformations Response Attributes\", \"attributes\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_attributes_attributes_valid, setpolicies_http_transformations_response_attributes_attributes_valid] = useState(true);\n    const [policies_http_transformations_response_attributes_attributes_invalid_text, setpolicies_http_transformations_response_attributes_attributes_invalid_text] = useState(\"\");\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n        if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].id === window.policies_http_transformations_response_pathsrowId) {\n        setpolicies_http_transformations_response_paths_paths((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i] !== undefined && policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== undefined )?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\");\n        }\n      }\n\n      for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n        if(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].id === window.policies_http_transformations_response_attributesrowId) {\n        setpolicies_http_transformations_response_attributes_attributes((policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i] !== undefined && policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes !== undefined )?policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_responsePage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_response_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"attributes_tab\" + idPrefix}>Attributes</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"attributes_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Attributes Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_attributes_tooltip_id\" + idPrefix} >Attributes</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_attributes_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the rule is a legacy XSLT based rule, this entry specifies the credential  attributes which will be included in the XML input document, used when  evaluating the HTTP transformation rule.  The attributes will be stored in the HTTPResponse/credential/attributes/attribute path of the XML document.<br/>This is entry is not required and has no effect when using a Lua transformation rule.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_attributesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_attributesTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_attributesheaderData}\n                        rows={policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_attributeshandleAdd(idPrefix, [setpolicies_http_transformations_response_attributes_attributes(''),    setpolicies_http_transformations_response_attributes_attributes_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponseattributesDeleteModal row={row} loadGrid={policies_http_transformations_response_attributesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponseattributesEdit  data={policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_attributesloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3>Response</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_response_name_valid}  invalidText={props.policies_http_transformations_response_name_invalid_text}  value={props.policies_http_transformations_response_name}  id={\"policies_http_transformations_response_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_response_name}/>\n          <ReactTooltip id={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_host}  id={\"policies_http_transformations_response_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_response_host}/>\n          <ReactTooltip id={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_method}  id={\"policies_http_transformations_response_method_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_response_method}/>\n          <ReactTooltip id={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_rule}  id={\"policies_http_transformations_response_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_response_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched.  This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_pathsheaderData}\n                        rows={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_pathshandleAdd(idPrefix, [setpolicies_http_transformations_response_paths_paths(''),    setpolicies_http_transformations_response_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsDeleteModal row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsEdit  data={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsAdd loadGrid={policies_http_transformations_response_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsEdit  loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponseattributesAdd loadGrid={policies_http_transformations_response_attributesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponseattributesEdit  loadGrid={policies_http_transformations_response_attributesloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_responseAdd;\n"],"sourceRoot":""}