{"version":3,"sources":["content/serverPage/serverclient_ip_rulesAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Server_client_ip_rulesAdd","props","row","_useState","useState","_useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","server_client_ip_rules_client_ip_rules","setserver_client_ip_rules_client_ip_rules","updateserver_client_ip_rules_client_ip_rules","useCallback","evt","target","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","id","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_5__","defaultTab","vertical","overflow","tabFor","width","tabId","height","carbon_components_react__WEBPACK_IMPORTED_MODULE_2__","invalid","server_client_ip_rules_client_ip_rules_valid","invalidText","server_client_ip_rules_client_ip_rules_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_6__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","onClick","disabled"],"mappings":"gjCA6BQA,aAAe,aAGfC,WAAa,SAACC,EAAUC,EAAUC,QAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,IAEgG,IAAxGC,SAASC,eAAe,4CAA8CL,GAAUM,MAAMC,SAAS,OAChGJ,EAAI,uCAA6CC,SAASC,eAAe,4CAA8CL,GAAUM,OAGnIP,EAAUI,EAAI,wCAA4C,GAE1DK,YAAYR,EAAUC,IAGlBQ,UAAY,SAACT,EAAUU,EAAOT,QAClBC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,6CAA6CC,MAAQ,GAE1EI,GACDA,IAGFF,YAAYR,EAAWC,IAGnBO,YAAc,SAACR,EAAUC,GAC7BU,gDAAY,aAAeX,EAAU,UAAW,SAChDI,SAASC,eAAe,gCAAkCL,GAAUY,MAAMC,QAAU,OAE/EZ,GACDA,KAIAa,SAAW,SAACd,QACEE,IAAbF,IAAwBA,EAAW,IAEtCW,gDAAY,6BAA+BX,EAAU,UAAW,SAChEI,SAASC,eAAe,6BAA+BL,GAAUY,MAAMC,QAAU,QAKjFE,0BAA4B,SAA5BA,0BAA6BC,OAE/B,IAAIC,IAAMD,MAAMC,IACVlB,SAAWiB,MAAMjB,SACjBE,QAAUe,MAAMf,QAChBD,SAAYgB,MAAMhB,SAAUgB,MAAMhB,SAAS,GALRkB,UASmDC,oDAAS,IAT5DC,WAAAC,OAAAC,oKAAA,EAAAD,CAAAH,UAAA,GASlCK,uCATkCH,WAAA,GASMI,0CATNJ,WAAA,GAUzCK,6CAA+CC,uDAAY,SAACC,GAAD,OAASH,0CAA0CG,EAAIC,OAAOtB,QAAQ,IAVxFuB,gBAaHC,6CAAMX,UAAS,GAbZY,iBAAAV,OAAAC,oKAAA,EAAAD,CAAAQ,gBAAA,GAalCG,YAbkCD,iBAAA,GAarBE,eAbqBF,iBAAA,GAczCD,6CAAMI,UAAU,WACdC,YACC,CAACH,cACJ,IAAMG,SAAW,WAGf,OAAO,GAGHC,YAAc,SAAdA,YAAeC,aAAcC,MAC9BD,cAAgBC,MACjBC,KAAKF,aAALE,CAAmBD,OAIvB,OACEE,2CAAAC,EAAAC,cAAA,WAEEF,2CAAAC,EAAAC,cAAA,OAAKC,GAAI,gCAAkC3C,SAAUY,MAAO,CAACC,QAAQ,QAAS+B,UAAU,yBAEtFJ,2CAAAC,EAAAC,cAACG,4CAAA,EAAD,CAAMF,GAAK,6BAA+B3C,SAAU8C,WAAY,cAAgB9C,SAAU+C,UAAQ,EAACH,UAAU,gBAAgBhC,MAAO,CAACoC,SAAS,SAC1IR,2CAAAC,EAAAC,cAACG,4CAAA,EAAD,KACEL,2CAAAC,EAAAC,cAACG,4CAAA,EAAD,CAAKI,OAAQ,cAAgBjD,UAA7B,YAEFwC,2CAAAC,EAAAC,cAACG,4CAAA,EAAD,CAAUjC,MAAO,CAACsC,MAAM,OAAQF,SAAS,QAASG,MAAO,cAAgBnD,UACvEwC,2CAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAoBhC,MAAO,CAACwC,OAAO,OAAQJ,SAAS,SACnER,2CAAAC,EAAAC,cAAA,OAAKE,UAAY,2DAA6D5C,UAC5EwC,2CAAAC,EAAAC,cAAA,QAAME,UAAU,kBAAhB,+BAAmEJ,2CAAAC,EAAAC,cAAA,WADrE,qBAC4FF,2CAAAC,EAAAC,cAAA,8BAAyBF,2CAAAC,EAAAC,cAAA,WADrH,iEAIAF,2CAAAC,EAAAC,cAAA,OAAKE,UAAW,6CAA+C5C,UAC/DwC,2CAAAC,EAAAC,cAAA,OAAKE,UAAY,2CAA6C5C,UACpEwC,2CAAAC,EAAAC,cAACW,qDAAA,EAAD,CAAYC,SAAUtC,MAAMuC,6CAA+CC,YAAaxC,MAAMyC,oDAAsDnD,MAAOU,MAAMO,uCAAyCoB,GAAI,4CAA8C3C,SAAW0D,QAAS,SAACC,GAAD,OAAOC,6CAAaC,KAAKF,EAAE/B,SAASkC,OAAQ,SAACH,GAAD,OAAOC,6CAAaG,KAAKJ,EAAE/B,SAASoC,YAAA,EAASC,WAAU,oDAAsDjE,SAAWkE,UAAU,eAAeC,SAAUnD,MAAMS,+CAC7de,2CAAAC,EAAAC,cAAC0B,2CAAA,EAAD,CAAczB,GAAI,oDAAsD3C,SAAUqE,MAAM,MAAMC,OAAO,SAAS9B,2CAAAC,EAAAC,cAAA,OAAK9B,MAAO,CAAE2D,SAAU,MAAxB,kCAA8D/B,2CAAAC,EAAAC,cAAA,gBAKpKF,2CAAAC,EAAAC,cAAA,OAAKE,UAAY,2CAA6C5C,UAC5DwC,2CAAAC,EAAAC,cAAC8B,qDAAA,EAAD,CAAQC,QAAS,WAAQjE,YAAYR,SAAWC,WAAhD,UACAuC,2CAAAC,EAAAC,cAAC8B,qDAAA,EAAD,CAAQE,UAAY1D,MAAMO,yCAA2CP,MAAMuC,6CAA+CkB,QAAS,WAAQ3E,WAAWC,SAAUC,SAAWC,WAA3K,cASLc","file":"static/js/310.a7e78b03.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_client_ip_rules_client_ip_rules_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_client_ip_rules_client_ip_rules\"] = document.getElementById(\"server_client_ip_rules_client_ip_rules_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"server_client_ip_rules_client_ip_rules\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_client_ip_rules_client_ip_rules_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserver_client_ip_rulesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_client_ip_rules_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_client_ip_rules_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Server_client_ip_rulesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [server_client_ip_rules_client_ip_rules, setserver_client_ip_rules_client_ip_rules] = useState(''),\n    updateserver_client_ip_rules_client_ip_rules = useCallback((evt) => setserver_client_ip_rules_client_ip_rules(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserver_client_ip_rulesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_client_ip_rules_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_client_ip_rules_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / Client IP Rules : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_client_ip_rules_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_client_ip_rules_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_client_ip_rules_client_ip_rules_valid}  invalidText={props.server_client_ip_rules_client_ip_rules_invalid_text}  value={props.server_client_ip_rules_client_ip_rules}  id={\"server_client_ip_rules_client_ip_rules_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_client_ip_rules_client_ip_rules_tooltip_id\" + idPrefix}  labelText=\"IP Pattern *\" onChange={props.updateserver_client_ip_rules_client_ip_rules}/>\n          <ReactTooltip id={\"server_client_ip_rules_client_ip_rules_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A client IP address pattern(s).<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_client_ip_rules_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_client_ip_rules_client_ip_rules || !props.server_client_ip_rules_client_ip_rules_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Server_client_ip_rulesAdd;\n"],"sourceRoot":""}