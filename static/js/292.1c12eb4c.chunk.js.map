{"version":3,"sources":["content/policiesPage/policiesauthorizationAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","PoliciesauthorizationmethodsDeleteModal","lazy","all","__webpack_require__","bind","PoliciesauthorizationmethodsAdd","PoliciesauthorizationmethodsEdit","PoliciesauthorizationpathsDeleteModal","PoliciesauthorizationpathsAdd","PoliciesauthorizationpathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","policies_authorization_pathsrowData","policies_authorization_paths","policies_authorization_methodsrowData","policies_authorization_methods","handleClose","handleAdd","setpolicies_authorization_methods","setpolicies_authorization_paths","doAdd","updateStyle","style","display","closeAdd","policies_authorization_methodsheaderData","header","key","policies_authorization_methodshandleAdd","clearFields","eval","policies_authorization_pathsheaderData","policies_authorization_pathshandleAdd","Policies_authorizationAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedpolicies_authorization_methods","setFetchedpolicies_authorization_methods","useEffect","policies_authorization_methodsloadGrid","useCallback","_ref","_asyncToGenerator","_callee","policies_authorization_methods_methods","add","attrs","tempId","newId","_context","methods","window","policies_authorization_methodsediting","policies_authorization_methodsrowId","id","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedpolicies_authorization_paths","setFetchedpolicies_authorization_paths","policies_authorization_pathsloadGrid","_ref2","_callee2","policies_authorization_paths_paths","_context2","paths","policies_authorization_pathsediting","policies_authorization_pathsrowId","_x3","_x4","_useState","_useState2","policies_authorization_action","setpolicies_authorization_action","updatepolicies_authorization_action","evt","target","_useState3","_useState4","policies_authorization_host","setpolicies_authorization_host","updatepolicies_authorization_host","_useState5","_useState6","setpolicies_authorization_methods_methods","updatepolicies_authorization_methods_methods","validateField","setpolicies_authorization_methods_methods_valid","setpolicies_authorization_methods_methods_invalid_text","_useState7","_useState8","policies_authorization_methods_methods_valid","_useState9","_useState10","policies_authorization_methods_methods_invalid_text","_useState11","_useState12","policies_authorization_name","setpolicies_authorization_name","updatepolicies_authorization_name","_useState13","_useState14","policies_authorization_obligation_oidc_acr_values","setpolicies_authorization_obligation_oidc_acr_values","updatepolicies_authorization_obligation_oidc_acr_values","_useState15","_useState16","policies_authorization_obligation_oidc_max_age","setpolicies_authorization_obligation_oidc_max_age","updatepolicies_authorization_obligation_oidc_max_age","_useState17","_useState18","policies_authorization_obligation_oidc_prompt","setpolicies_authorization_obligation_oidc_prompt","updatepolicies_authorization_obligation_oidc_prompt","_useState19","_useState20","policies_authorization_obligation_redirect_url","setpolicies_authorization_obligation_redirect_url","updatepolicies_authorization_obligation_redirect_url","_useState21","_useState22","setpolicies_authorization_paths_paths","updatepolicies_authorization_paths_paths","setpolicies_authorization_paths_paths_valid","setpolicies_authorization_paths_paths_invalid_text","_useState23","_useState24","policies_authorization_paths_paths_valid","_useState25","_useState26","policies_authorization_paths_paths_invalid_text","_useState27","_useState28","policies_authorization_rule","setpolicies_authorization_rule","updatepolicies_authorization_rule","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","Collapsible","tabIndex","trigger","textAlign","border","borderRight","padding","paddingLeft","marginLeft","marginBottom","TextInput","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","NumberInput","label","Button","onClick","disabled","policies_authorization_name_valid","Select","SelectItem","text","invalid","invalidText","policies_authorization_name_invalid_text","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","_ref4"],"mappings":"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","file":"static/js/292.1c12eb4c.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PoliciesauthorizationmethodsDeleteModal = lazy(() => import('./policiesauthorizationmethodsDeleteModal'));\nconst PoliciesauthorizationmethodsAdd = lazy(() => import('./policiesauthorizationmethodsAdd'));\nconst PoliciesauthorizationmethodsEdit = lazy(() => import('./policiesauthorizationmethodsEdit'));\nconst PoliciesauthorizationpathsDeleteModal = lazy(() => import('./policiesauthorizationpathsDeleteModal'));\nconst PoliciesauthorizationpathsAdd = lazy(() => import('./policiesauthorizationpathsAdd'));\nconst PoliciesauthorizationpathsEdit = lazy(() => import('./policiesauthorizationpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_authorization_action_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_action\"] = document.getElementById(\"policies_authorization_action_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_host\"] = document.getElementById(\"policies_authorization_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_name\"] = document.getElementById(\"policies_authorization_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_obligation_oidc_acr_values_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_obligation_oidc_acr_values\"] = document.getElementById(\"policies_authorization_obligation_oidc_acr_values_id\" + idPrefix).value;\n    }\n    json[\"policies_authorization_obligation_oidc_max_age\"] = document.getElementById(\"policies_authorization_obligation_oidc_max_age_id\" + idPrefix).value;\n    if(document.getElementById(\"policies_authorization_obligation_oidc_prompt_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_obligation_oidc_prompt\"] = document.getElementById(\"policies_authorization_obligation_oidc_prompt_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_obligation_redirect_url_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_obligation_redirect_url\"] = document.getElementById(\"policies_authorization_obligation_redirect_url_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_rule\"] = document.getElementById(\"policies_authorization_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_authorization_paths\"] = policies_authorization_pathsrowData.policies_authorization_paths;\n    json[\"policies_authorization_methods\"] = policies_authorization_methodsrowData.policies_authorization_methods;\n      \n    loadGrid( json[\"policies_authorization_action\"], json[\"policies_authorization_host\"], json[\"policies_authorization_name\"], json[\"policies_authorization_obligation_oidc_acr_values\"], json[\"policies_authorization_obligation_oidc_max_age\"], json[\"policies_authorization_obligation_oidc_prompt\"], json[\"policies_authorization_obligation_redirect_url\"], json[\"policies_authorization_rule\"], json[\"policies_authorization_paths\"], json[\"policies_authorization_methods\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_authorization_methods, setpolicies_authorization_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_authorization_action_id\").value = \"\";\n    document.getElementById(\"policies_authorization_host_id\").value = \"\";\n    document.getElementById(\"policies_authorization_name_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_oidc_acr_values_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_oidc_max_age_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_oidc_prompt_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_redirect_url_id\").value = \"\";\n    document.getElementById(\"policies_authorization_rule_id\").value = \"\";\n    policies_authorization_methodsrowData.policies_authorization_methods = []\n    setpolicies_authorization_methods(policies_authorization_methodsrowData.policies_authorization_methods);\n\n    policies_authorization_pathsrowData.policies_authorization_paths = []\n    setpolicies_authorization_paths(policies_authorization_pathsrowData.policies_authorization_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicies_authorizationPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_authorization_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_authorization_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_authorization_methodsheaderData = [\n    {\n    header: 'Method',\n    key: 'methods',\n  },\n\n];\n\nconst policies_authorization_methodsrowData = {policies_authorization_methods: []};\n\nconst policies_authorization_methodshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_authorization_methods_methods_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_authorization_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciesauthorization_methodsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_authorization_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst policies_authorization_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_authorization_pathsrowData = {policies_authorization_paths: []};\n\nconst policies_authorization_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_authorization_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_authorization_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciesauthorization_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_authorization_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policies_authorizationAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_authorization_methods, setpolicies_authorization_methods] = React.useState([]);\n    const [fetchedpolicies_authorization_methods, setFetchedpolicies_authorization_methods] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_authorization_methodsloadGrid();\n    }, [fetchedpolicies_authorization_methods]);\n\n    const policies_authorization_methodsloadGrid = React.useCallback(async (policies_authorization_methods_methods, add) => {\n      try {\n        var attrs = [];\n        if(policies_authorization_methods_methods) {\n          if(add) {\n            for(var i = 0; i < policies_authorization_methodsrowData.policies_authorization_methods.length; i++) {\n              var tempId = ((policies_authorization_methodsrowData.policies_authorization_methods[i].methods)?policies_authorization_methodsrowData.policies_authorization_methods[i].methods:\"\") + \"\";\n              if((window.policies_authorization_methodsediting != true && window.policies_authorization_methodsediting != \"true\") || tempId != window.policies_authorization_methodsrowId) {\n                attrs.push(policies_authorization_methodsrowData.policies_authorization_methods[i]);\n              }\n            }\n            var newId = ((policies_authorization_methods_methods)?policies_authorization_methods_methods:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              methods: policies_authorization_methods_methods,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_authorization_methodsrowData.policies_authorization_methods.length; i++) {\n              if(policies_authorization_methodsrowData.policies_authorization_methods[i].methods !== policies_authorization_methods_methods ) {\n                attrs.push(policies_authorization_methodsrowData.policies_authorization_methods[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_authorization_methodsrowData.policies_authorization_methods;\n        }\n        policies_authorization_methodsrowData.policies_authorization_methods = attrs;\n        const data = {policies_authorization_methods: attrs};\n        setpolicies_authorization_methods(data.policies_authorization_methods);\n\n        if(policies_authorization_methods_methods !== undefined && policies_authorization_methods_methods !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [policies_authorization_paths, setpolicies_authorization_paths] = React.useState([]);\n    const [fetchedpolicies_authorization_paths, setFetchedpolicies_authorization_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_authorization_pathsloadGrid();\n    }, [fetchedpolicies_authorization_paths]);\n\n    const policies_authorization_pathsloadGrid = React.useCallback(async (policies_authorization_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_authorization_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_authorization_pathsrowData.policies_authorization_paths.length; i++) {\n              var tempId = ((policies_authorization_pathsrowData.policies_authorization_paths[i].paths)?policies_authorization_pathsrowData.policies_authorization_paths[i].paths:\"\") + \"\";\n              if((window.policies_authorization_pathsediting != true && window.policies_authorization_pathsediting != \"true\") || tempId != window.policies_authorization_pathsrowId) {\n                attrs.push(policies_authorization_pathsrowData.policies_authorization_paths[i]);\n              }\n            }\n            var newId = ((policies_authorization_paths_paths)?policies_authorization_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_authorization_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_authorization_pathsrowData.policies_authorization_paths.length; i++) {\n              if(policies_authorization_pathsrowData.policies_authorization_paths[i].paths !== policies_authorization_paths_paths ) {\n                attrs.push(policies_authorization_pathsrowData.policies_authorization_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_authorization_pathsrowData.policies_authorization_paths;\n        }\n        policies_authorization_pathsrowData.policies_authorization_paths = attrs;\n        const data = {policies_authorization_paths: attrs};\n        setpolicies_authorization_paths(data.policies_authorization_paths);\n\n        if(policies_authorization_paths_paths !== undefined && policies_authorization_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_authorization_action, setpolicies_authorization_action] = useState(''),\n    updatepolicies_authorization_action = useCallback((evt) => setpolicies_authorization_action(evt.target.value), []);\n\n    const [policies_authorization_host, setpolicies_authorization_host] = useState(''),\n    updatepolicies_authorization_host = useCallback((evt) => setpolicies_authorization_host(evt.target.value), []);\n\n    const [policies_authorization_methods_methods, setpolicies_authorization_methods_methods] = useState(''),\n    updatepolicies_authorization_methods_methods = useCallback((evt) => {\n      setpolicies_authorization_methods_methods(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_authorization_methodsrowData.policies_authorization_methods, setpolicies_authorization_methods_methods_valid, setpolicies_authorization_methods_methods_invalid_text, \"Policies Authorization Methods\", \"methods\", tempId);\n    }, []);\n\n    const [policies_authorization_methods_methods_valid, setpolicies_authorization_methods_methods_valid] = useState(true);\n    const [policies_authorization_methods_methods_invalid_text, setpolicies_authorization_methods_methods_invalid_text] = useState(\"\");\n\n\n    const [policies_authorization_name, setpolicies_authorization_name] = useState(''),\n    updatepolicies_authorization_name = useCallback((evt) => setpolicies_authorization_name(evt.target.value), []);\n\n    const [policies_authorization_obligation_oidc_acr_values, setpolicies_authorization_obligation_oidc_acr_values] = useState(''),\n    updatepolicies_authorization_obligation_oidc_acr_values = useCallback((evt) => setpolicies_authorization_obligation_oidc_acr_values(evt.target.value), []);\n\n    const [policies_authorization_obligation_oidc_max_age, setpolicies_authorization_obligation_oidc_max_age] = useState(0),\n    updatepolicies_authorization_obligation_oidc_max_age = useCallback((evt) => {}, []);\n\n    const [policies_authorization_obligation_oidc_prompt, setpolicies_authorization_obligation_oidc_prompt] = useState(''),\n    updatepolicies_authorization_obligation_oidc_prompt = useCallback((evt) => setpolicies_authorization_obligation_oidc_prompt(evt.target.value), []);\n\n    const [policies_authorization_obligation_redirect_url, setpolicies_authorization_obligation_redirect_url] = useState(''),\n    updatepolicies_authorization_obligation_redirect_url = useCallback((evt) => setpolicies_authorization_obligation_redirect_url(evt.target.value), []);\n\n    const [policies_authorization_paths_paths, setpolicies_authorization_paths_paths] = useState(''),\n    updatepolicies_authorization_paths_paths = useCallback((evt) => {\n      setpolicies_authorization_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_authorization_pathsrowData.policies_authorization_paths, setpolicies_authorization_paths_paths_valid, setpolicies_authorization_paths_paths_invalid_text, \"Policies Authorization Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_authorization_paths_paths_valid, setpolicies_authorization_paths_paths_valid] = useState(true);\n    const [policies_authorization_paths_paths_invalid_text, setpolicies_authorization_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_authorization_rule, setpolicies_authorization_rule] = useState(''),\n    updatepolicies_authorization_rule = useCallback((evt) => setpolicies_authorization_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_authorization_methodsrowData.policies_authorization_methods.length; i++) {\n        if(policies_authorization_methodsrowData.policies_authorization_methods[i].id === window.policies_authorization_methodsrowId) {\n        setpolicies_authorization_methods_methods((policies_authorization_methodsrowData.policies_authorization_methods[i] !== undefined && policies_authorization_methodsrowData.policies_authorization_methods[i].methods !== undefined )?policies_authorization_methodsrowData.policies_authorization_methods[i].methods:\"\");\n        }\n      }\n\n      for(var i = 0; i < policies_authorization_pathsrowData.policies_authorization_paths.length; i++) {\n        if(policies_authorization_pathsrowData.policies_authorization_paths[i].id === window.policies_authorization_pathsrowId) {\n        setpolicies_authorization_paths_paths((policies_authorization_pathsrowData.policies_authorization_paths[i] !== undefined && policies_authorization_pathsrowData.policies_authorization_paths[i].paths !== undefined )?policies_authorization_pathsrowData.policies_authorization_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicies_authorizationPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_authorization_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"methods_tab\" + idPrefix}>Methods</Tab>\n                <Tab tabFor={\"obligation_tab\" + idPrefix}>Obligation</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"obligation_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>Obligation Settings</h2><hr/>\n                  <Collapsible tabIndex=\"0\" trigger=\"If the action for this rule is obligate or reauth, this obligation can be used to indicate that authentication should take place again with specific parameters\">\n                    <p>If the action for this rule is obligate or reauth, this obligation can be used to indicate that authentication should take place again with specific parameters.<br/><br/>This parameter is required for policies with the 'obligation' action, and is optional for policies with the 'reauth' action.<br/><br/>Note that a policy can only contain one obligated action, that is, this entry must contain `oidc` or `redirect_url`.<br/><br/><h4> Redirect URL Macros</h4><br/>The following macros are available:<br/><br/><table style={{textAlign:'left', border:'1px solid black'}}><tbody><tr style={{textAlign:'left', border:'1px solid black'}}><th style={{borderRight:'1px solid black', padding: '10px'}}>Macro </th><th style={{borderRight:'1px solid black', padding: '10px'}}> Value</th></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%USERNAME% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The current logged in user, or `unauthenticated` for unauthenticated users.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%METHOD% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The HTTP method of the request which matched this policy.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%URL% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The URL the client was attempting to access when this policy was matched.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%HOSTNAME% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The hostname (HTTP Host header) of the client request which matched this policy.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%PROTOCOL% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The protocol (`http` or `https`) which was used</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%CREDATTR&#123;&lt;attribute_name&gt;}% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The value of the credential attribute named by `&lt;attribute_name&gt;`.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%HTTPHDR&#123;&lt;header_name&gt;}% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The value of the HTTP header from the client request named by `&lt;header_name&gt;`.</td></tr></tbody></table></p>\n                  </Collapsible>\n\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3>Obligation</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3>OIDC</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_obligation_oidc_acr_values}  id={\"policies_authorization_obligation_oidc_acr_values_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_oidc_acr_values_tooltip_id\" + idPrefix}  labelText=\"acr Values\" onChange={props.updatepolicies_authorization_obligation_oidc_acr_values}/>\n          <ReactTooltip id={\"policies_authorization_obligation_oidc_acr_values_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A string of ACR (Authentication Context Class References) to pass to the identity provider. Refer to \"acr_values\" in section 3.1.2 of the OpenID Connect Core specification for further information.<br/>Valid ACRs are defined by the identity provider. Refer to your identity provider for further information about the ACRs which it supports.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <NumberInput value={props.policies_authorization_obligation_oidc_max_age} id={\"policies_authorization_obligation_oidc_max_age_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_oidc_max_age_tooltip_id\" + idPrefix}  label=\"Max Age\" onChange={props.updatepolicies_authorization_obligation_oidc_max_age}/>\n          <ReactTooltip id={\"policies_authorization_obligation_oidc_max_age_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum age of the authentication. Refer to  \"max_age\" in section 3.1.2 of the OpenID Connect Core  specification for further information.<br/>Setting this to '0' indicates to the provider that the user should re-authenticate immediately. This  parameter also forces the provider to include the auth_time parameter in the returned id token, which is used by IAG to determine when the user last performed a re-authentication.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_obligation_oidc_prompt}  id={\"policies_authorization_obligation_oidc_prompt_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_oidc_prompt_tooltip_id\" + idPrefix}  labelText=\"Prompt\" onChange={props.updatepolicies_authorization_obligation_oidc_prompt}/>\n          <ReactTooltip id={\"policies_authorization_obligation_oidc_prompt_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A string of prompt options to pass to the identity provider. Refer to \"prompt\" in section 3.1.2 of the OpenID Connect Core specification for further information.<br/>Prompt options are optional and may not be supported by all identity providers. Refer to your identity provider for further information about support prompt values.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_obligation_redirect_url}  id={\"policies_authorization_obligation_redirect_url_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_redirect_url_tooltip_id\" + idPrefix}  labelText=\"Redirect URL\" onChange={props.updatepolicies_authorization_obligation_redirect_url}/>\n          <ReactTooltip id={\"policies_authorization_obligation_redirect_url_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Allows clients to be redirected to a URL as a result of this policy evaluating successfully.<br/>This URL can contain embedded macros to include contextual information about the request and client which was obligated to be redirected to this URL. See the  Redirect URL Macros table above for  the available macros.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                <Select\n                  value={props.policies_authorization_action}\n                   id={\"policies_authorization_action_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_action_tooltip_id\" + idPrefix}                   labelText=\"Action\"\n                  onChange={props.updatepolicies_authorization_action}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"permit\" value=\"permit\" />\n                  <SelectItem text=\"deny\" value=\"deny\" />\n                  <SelectItem text=\"obligate\" value=\"obligate\" />\n                  <SelectItem text=\"reauth\" value=\"reauth\" />\n                </Select>\n          <ReactTooltip id={\"policies_authorization_action_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Defines the action to perform if the rule matches. If the action is obligate, the obligation property must also be set for this authorization rule.<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_host}  id={\"policies_authorization_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_authorization_host}/>\n          <ReactTooltip id={\"policies_authorization_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this policy will be applied. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_authorization_name_valid}  invalidText={props.policies_authorization_name_invalid_text}  value={props.policies_authorization_name}  id={\"policies_authorization_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_authorization_name}/>\n          <ReactTooltip id={\"policies_authorization_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A name for this policy, which is used to refer to this policy in audit events.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_rule}  id={\"policies_authorization_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_authorization_rule}/>\n          <ReactTooltip id={\"policies_authorization_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If a rule string is not defined here, the gateway will look for a named rule (with the same name as this policy) in the authorization section of the configuration YAML. Refer to the authorization section of this template for an explanation of rule syntax. The predefined rules anyuser or anyauth can also be referenced here.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_authorization_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths which this policy will be applied. Each path may contain the `*?` pattern matching characters. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_authorization_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <DataTable id={\"policies_authorization_pathsTable\" + idPrefix} isSortable\n                        headers={policies_authorization_pathsheaderData}\n                        rows={policies_authorization_pathsrowData.policies_authorization_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_authorization_pathshandleAdd(idPrefix, [setpolicies_authorization_paths_paths(''),    setpolicies_authorization_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationpathsDeleteModal row={row} loadGrid={policies_authorization_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationpathsEdit  data={policies_authorization_pathsrowData.policies_authorization_paths} setData={setDataMain} row={row} loadGrid={policies_authorization_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_authorization_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_paths_paths={updatepolicies_authorization_paths_paths} policies_authorization_paths_paths={policies_authorization_paths_paths}\n            policies_authorization_paths_paths_valid={policies_authorization_paths_paths_valid}\n            policies_authorization_paths_paths_invalid_text={policies_authorization_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"methods_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>Methods Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_methods_tooltip_id\" + idPrefix} >Methods</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_authorization_methods_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The method(s) which this policy applies to. If this is not defined, the policy will apply to all methods.<br/></div></ReactTooltip>\n\n                <div id={\"policies_authorization_methodsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <DataTable id={\"policies_authorization_methodsTable\" + idPrefix} isSortable\n                        headers={policies_authorization_methodsheaderData}\n                        rows={policies_authorization_methodsrowData.policies_authorization_methods}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_authorization_methodshandleAdd(idPrefix, [setpolicies_authorization_methods_methods(''),    setpolicies_authorization_methods_methods_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationmethodsDeleteModal row={row} loadGrid={policies_authorization_methodsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationmethodsEdit  data={policies_authorization_methodsrowData.policies_authorization_methods} setData={setDataMain} row={row} loadGrid={policies_authorization_methodsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_authorization_methods\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_methods_methods={updatepolicies_authorization_methods_methods} policies_authorization_methods_methods={policies_authorization_methods_methods}\n            policies_authorization_methods_methods_valid={policies_authorization_methods_methods_valid}\n            policies_authorization_methods_methods_invalid_text={policies_authorization_methods_methods_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationmethodsAdd loadGrid={policies_authorization_methodsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_authorization_methods_methods={updatepolicies_authorization_methods_methods} policies_authorization_methods_methods={policies_authorization_methods_methods}\n            policies_authorization_methods_methods_valid={policies_authorization_methods_methods_valid}\n            policies_authorization_methods_methods_invalid_text={policies_authorization_methods_methods_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationmethodsEdit  loadGrid={policies_authorization_methodsloadGrid} dataLoad={dataLoad} name={\"policies_authorization_methods\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_methods_methods={updatepolicies_authorization_methods_methods} policies_authorization_methods_methods={policies_authorization_methods_methods}\n            policies_authorization_methods_methods_valid={policies_authorization_methods_methods_valid}\n            policies_authorization_methods_methods_invalid_text={policies_authorization_methods_methods_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationpathsAdd loadGrid={policies_authorization_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_authorization_paths_paths={updatepolicies_authorization_paths_paths} policies_authorization_paths_paths={policies_authorization_paths_paths}\n            policies_authorization_paths_paths_valid={policies_authorization_paths_paths_valid}\n            policies_authorization_paths_paths_invalid_text={policies_authorization_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationpathsEdit  loadGrid={policies_authorization_pathsloadGrid} dataLoad={dataLoad} name={\"policies_authorization_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_paths_paths={updatepolicies_authorization_paths_paths} policies_authorization_paths_paths={policies_authorization_paths_paths}\n            policies_authorization_paths_paths_valid={policies_authorization_paths_paths_valid}\n            policies_authorization_paths_paths_invalid_text={policies_authorization_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policies_authorizationAdd;\n"],"sourceRoot":""}