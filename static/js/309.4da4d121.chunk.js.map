{"version":3,"sources":["content/resource_serversPage/resource_serversDeleteModal.js"],"names":["ModalStateManager","_ref","LauncherContent","renderLauncher","ModalContent","children","_useState","useState","_useState2","_slicedToArray","open","setOpen","React","createElement","Fragment","document","ReactDOM","createPortal","body","deleteProps","arguments","length","undefined","titleOnly","danger","selectorPrimaryFocus","_ref3","name","label","title","iconDescription","hasScrollingContent","aria-label","primaryButtonText","primaryButtonDisabled","secondaryButtonText","shouldCloseAfterSubmit","style","margin","icon","iconDelete","role","fill","fillRule","width","height","description","iconTitle","className","handleSubmit","resource_servers_path","resource_servers_virtual_host","resource_servers_connection_type","resource_servers_transparent_path","resource_servers_stateful","resource_servers_http2_enabled","resource_servers_sni","resource_servers_identity_headers_kerberos_resource_spn","resource_servers_identity_headers_kerberos_always_send_tokens","resource_servers_identity_headers_kerberos_user_identity_username","resource_servers_identity_headers_kerberos_user_identity_realm","resource_servers_identity_headers_encoding","resource_servers_identity_headers_basic_auth_mode","resource_servers_identity_headers_basic_auth_password","resource_servers_identity_headers_basic_auth_service","resource_servers_identity_headers_basic_auth_resource_name","resource_servers_identity_headers_ip_address","resource_servers_identity_headers_iv_creds","resource_servers_identity_headers_session_cookie","resource_servers_identity_headers_jwt_hdr_name","resource_servers_identity_headers_ltpa_key","resource_servers_identity_headers_ltpa_key_password","resource_servers_identity_headers_ltpa_version","resource_servers_cookies_junction_cookie_position","resource_servers_cookies_junction_cookie_version","resource_servers_cookies_junction_cookie_ensure_unique","resource_servers_cookies_junction_cookie_preserve_name","resource_servers_mutual_auth_basic_auth_username","resource_servers_mutual_auth_basic_auth_password","resource_servers_forms_login_credential_learning","resource_servers_health_ping_method","resource_servers_health_ping_url","resource_servers_health_ping_policy_frequency","resource_servers_health_ping_policy_threshold","resource_servers_health_ping_policy_timeout","resource_servers_health_ping_policy_recovery_frequency","resource_servers_health_ping_policy_recovery_threshold","resource_servers_worker_threads_soft_limit","resource_servers_worker_threads_hard_limit","resource_servers_persistent_connections_max_cache_size","resource_servers_persistent_connections_connection_timeout","resource_servers_identity_oauth","loadGrid","Resource_serversDeleteModal","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","state","row","cells","value","_createClass","key","_this2","_deleteProps$composed","size","rest","_objectWithoutProperties","_deleteProps$modalBod","_ref4","Icon","Object","assign","onClick","id","_ref5","ComposedModal","onClose","ModalHeader","code","model","ModalBody","ModalFooter","onRequestSubmit","Component"],"mappings":"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","file":"static/js/309.4da4d121.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  TextInput,\n  NumberInput,\n  ComposedModal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Button,\n  Icon\n} from  'carbon-components-react';\nimport { \n  iconDelete, iconDeleteSolid, iconDeleteOutline, \n} from 'carbon-icons';\n\n// This defines a modal controlled by a launcher button. We have one per DataTable row.\nconst ModalStateManager = ({\n  renderLauncher: LauncherContent,\n  children: ModalContent,\n}) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      {!ModalContent || typeof document === 'undefined'\n        ? null\n        : ReactDOM.createPortal(\n            <ModalContent  \n              open={open} \n              setOpen={setOpen} \n            />,\n            document.body\n          )\n      }\n      {LauncherContent && \n      <LauncherContent \n        open={open} \n        setOpen={setOpen} \n      />\n      }\n    </>\n  );\n};\n\n// Modal properties\nconst deleteProps = {\n  composedModal: ({ titleOnly } = {}) => ({\n    open: true,\n    danger: true,\n    selectorPrimaryFocus: '[data-modal-primary-focus]',\n  }),\n  modalHeader: ({ titleOnly, name } = {}) => ({\n    label: 'Resource Servers',\n    title: 'Delete Resource Servers?',\n    iconDescription: 'Close',\n  }),\n  modalBody: () => ({\n    hasScrollingContent: false,\n    'aria-label': 'Delete Resource Servers?',\n  }),\n  modalFooter: () => ({\n    primaryButtonText: 'Delete',\n    primaryButtonDisabled: false,\n    secondaryButtonText: 'Cancel',\n    shouldCloseAfterSubmit: true,\n    danger: true,\n  }),\n  menuItem: () => ({\n    closeMenu: (event) => { handleSubmit(event); }\n  }),\n  deleteIcon: () => ({\n    style: {\n      margin: '5px',\n    },\n    icon: iconDelete,\n    name: iconDelete,\n    role: 'img',\n    fill: 'grey',\n    fillRule: '',\n    width: '',\n    height: '',\n    description: 'This is a description of the icon and what it does in context',\n    iconTitle: '',\n    className: 'extra-class',\n  }),\n};\n\n// On submit we should be passed the values, not have to look them up\nconst handleSubmit = (resource_servers_path, resource_servers_virtual_host, resource_servers_connection_type, resource_servers_transparent_path, resource_servers_stateful, resource_servers_http2_enabled, resource_servers_sni, resource_servers_identity_headers_kerberos_resource_spn, resource_servers_identity_headers_kerberos_always_send_tokens, resource_servers_identity_headers_kerberos_user_identity_username, resource_servers_identity_headers_kerberos_user_identity_realm, resource_servers_identity_headers_encoding, resource_servers_identity_headers_basic_auth_mode, resource_servers_identity_headers_basic_auth_password, resource_servers_identity_headers_basic_auth_service, resource_servers_identity_headers_basic_auth_resource_name, resource_servers_identity_headers_ip_address, resource_servers_identity_headers_iv_creds, resource_servers_identity_headers_session_cookie, resource_servers_identity_headers_jwt_hdr_name, resource_servers_identity_headers_ltpa_key, resource_servers_identity_headers_ltpa_key_password, resource_servers_identity_headers_ltpa_version, resource_servers_cookies_junction_cookie_position, resource_servers_cookies_junction_cookie_version, resource_servers_cookies_junction_cookie_ensure_unique, resource_servers_cookies_junction_cookie_preserve_name, resource_servers_mutual_auth_basic_auth_username, resource_servers_mutual_auth_basic_auth_password, resource_servers_forms_login_credential_learning, resource_servers_health_ping_method, resource_servers_health_ping_url, resource_servers_health_ping_policy_frequency, resource_servers_health_ping_policy_threshold, resource_servers_health_ping_policy_timeout, resource_servers_health_ping_policy_recovery_frequency, resource_servers_health_ping_policy_recovery_threshold, resource_servers_worker_threads_soft_limit, resource_servers_worker_threads_hard_limit, resource_servers_persistent_connections_max_cache_size, resource_servers_persistent_connections_connection_timeout, resource_servers_identity_oauth,  loadGrid, setOpen) => {\n \n  // Refresh data\n  loadGrid(resource_servers_path, resource_servers_virtual_host, resource_servers_connection_type, resource_servers_transparent_path, resource_servers_stateful, resource_servers_http2_enabled, resource_servers_sni, resource_servers_identity_headers_kerberos_resource_spn, resource_servers_identity_headers_kerberos_always_send_tokens, resource_servers_identity_headers_kerberos_user_identity_username, resource_servers_identity_headers_kerberos_user_identity_realm, resource_servers_identity_headers_encoding, resource_servers_identity_headers_basic_auth_mode, resource_servers_identity_headers_basic_auth_password, resource_servers_identity_headers_basic_auth_service, resource_servers_identity_headers_basic_auth_resource_name, resource_servers_identity_headers_ip_address, resource_servers_identity_headers_iv_creds, resource_servers_identity_headers_session_cookie, resource_servers_identity_headers_jwt_hdr_name, resource_servers_identity_headers_ltpa_key, resource_servers_identity_headers_ltpa_key_password, resource_servers_identity_headers_ltpa_version, resource_servers_cookies_junction_cookie_position, resource_servers_cookies_junction_cookie_version, resource_servers_cookies_junction_cookie_ensure_unique, resource_servers_cookies_junction_cookie_preserve_name, resource_servers_mutual_auth_basic_auth_username, resource_servers_mutual_auth_basic_auth_password, resource_servers_forms_login_credential_learning, resource_servers_health_ping_method, resource_servers_health_ping_url, resource_servers_health_ping_policy_frequency, resource_servers_health_ping_policy_threshold, resource_servers_health_ping_policy_timeout, resource_servers_health_ping_policy_recovery_frequency, resource_servers_health_ping_policy_recovery_threshold, resource_servers_worker_threads_soft_limit, resource_servers_worker_threads_hard_limit, resource_servers_persistent_connections_max_cache_size, resource_servers_persistent_connections_connection_timeout, resource_servers_identity_oauth,  false);\n\n  return true;\n}\n\n// The implementation of the Modal\nclass Resource_serversDeleteModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      row: props.row,\n      loadGrid: props.loadGrid,\n      resource_servers_path: this.props.row.cells[0].value,\n      resource_servers_virtual_host: this.props.row.cells[1].value,\n      resource_servers_connection_type: this.props.row.cells[2].value,\n      resource_servers_transparent_path: this.props.row.cells[3].value,\n      resource_servers_stateful: this.props.row.cells[4].value,\n      resource_servers_sni: this.props.row.cells[5].value,\n      open: false,\n    }\n  }\n\n  render() {\n    // const { open } = this.state.open;\n    const { size, ...rest } = deleteProps.composedModal();\n    const { hasScrollingContent, ...bodyProps } = deleteProps.modalBody();\n\n    return (\n      <ModalStateManager\n        renderLauncher={({ setOpen }) => (\n          <Icon {...deleteProps.deleteIcon()} onClick={() => setOpen(true)} title={this.state.id} />\n        )}>\n        {({ open, setOpen }) => (\n          <ComposedModal\n            {...rest}\n            open={open}\n            row={this.props.row}\n            loadGrid={this.state.loadGrid}\n            size={size || undefined}\n            onClose={() => setOpen(false)}>\n            <ModalHeader {...deleteProps.modalHeader({ titleOnly: true, name: this.state.code + ' ' + this.state.model })} />\n            <ModalBody />\n            <ModalFooter {...deleteProps.modalFooter()} shouldCloseAfterSubmit={true} onRequestSubmit={() => { handleSubmit(this.state.resource_servers_path,this.state.resource_servers_virtual_host,this.state.resource_servers_connection_type,this.state.resource_servers_transparent_path,this.state.resource_servers_stateful,this.state.resource_servers_http2_enabled,this.state.resource_servers_sni,this.state.resource_servers_identity_headers_kerberos_resource_spn,this.state.resource_servers_identity_headers_kerberos_always_send_tokens,this.state.resource_servers_identity_headers_kerberos_user_identity_username,this.state.resource_servers_identity_headers_kerberos_user_identity_realm,this.state.resource_servers_identity_headers_encoding,this.state.resource_servers_identity_headers_basic_auth_mode,this.state.resource_servers_identity_headers_basic_auth_password,this.state.resource_servers_identity_headers_basic_auth_service,this.state.resource_servers_identity_headers_basic_auth_resource_name,this.state.resource_servers_identity_headers_ip_address,this.state.resource_servers_identity_headers_iv_creds,this.state.resource_servers_identity_headers_session_cookie,this.state.resource_servers_identity_headers_jwt_hdr_name,this.state.resource_servers_identity_headers_ltpa_key,this.state.resource_servers_identity_headers_ltpa_key_password,this.state.resource_servers_identity_headers_ltpa_version,this.state.resource_servers_cookies_junction_cookie_position,this.state.resource_servers_cookies_junction_cookie_version,this.state.resource_servers_cookies_junction_cookie_ensure_unique,this.state.resource_servers_cookies_junction_cookie_preserve_name,this.state.resource_servers_mutual_auth_basic_auth_username,this.state.resource_servers_mutual_auth_basic_auth_password,this.state.resource_servers_forms_login_credential_learning,this.state.resource_servers_health_ping_method,this.state.resource_servers_health_ping_url,this.state.resource_servers_health_ping_policy_frequency,this.state.resource_servers_health_ping_policy_threshold,this.state.resource_servers_health_ping_policy_timeout,this.state.resource_servers_health_ping_policy_recovery_frequency,this.state.resource_servers_health_ping_policy_recovery_threshold,this.state.resource_servers_worker_threads_soft_limit,this.state.resource_servers_worker_threads_hard_limit,this.state.resource_servers_persistent_connections_max_cache_size,this.state.resource_servers_persistent_connections_connection_timeout,this.state.resource_servers_identity_oauth, this.state.loadGrid, setOpen); }} />\n          </ComposedModal>\n        )}\n      </ModalStateManager>\n    );\n  }\n\n  \n}\n\nexport default Resource_serversDeleteModal;\n"],"sourceRoot":""}