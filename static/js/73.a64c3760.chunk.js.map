{"version":3,"sources":["content/servicesPage/serviceskerberosrealmspropertiesAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Serviceskerberosrealms_propertiesAdd","props","row","_useState","useState","_useState2","_slicedToArray","services_kerberos_realms_properties_name","setservices_kerberos_realms_properties_name","updateservices_kerberos_realms_properties_name","useCallback","evt","target","_useState3","_useState4","services_kerberos_realms_properties_value","setservices_kerberos_realms_properties_value","updateservices_kerberos_realms_properties_value","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","services_kerberos_realms_properties_name_valid","invalidText","services_kerberos_realms_properties_name_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled"],"mappings":"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","file":"static/js/73.a64c3760.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_properties_name\"] = document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_properties_value\"] = document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"services_kerberos_realms_properties_name\"], json[\"services_kerberos_realms_properties_value\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_kerberos_realms_properties_name_id\").value = \"\";\n    document.getElementById(\"services_kerberos_realms_properties_value_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"properties_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserviceskerberosrealms_propertiesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_realms_properties_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_realms_properties_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Serviceskerberosrealms_propertiesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [services_kerberos_realms_properties_name, setservices_kerberos_realms_properties_name] = useState(''),\n    updateservices_kerberos_realms_properties_name = useCallback((evt) => setservices_kerberos_realms_properties_name(evt.target.value), []);\n\n    const [services_kerberos_realms_properties_value, setservices_kerberos_realms_properties_value] = useState(''),\n    updateservices_kerberos_realms_properties_value = useCallback((evt) => setservices_kerberos_realms_properties_value(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserviceskerberosrealms_propertiesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_kerberos_realms_properties_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_properties_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms / Properties : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_properties_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n  <h3>Properties</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_kerberos_realms_properties_name_valid}  invalidText={props.services_kerberos_realms_properties_name_invalid_text}  value={props.services_kerberos_realms_properties_name}  id={\"services_kerberos_realms_properties_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_kerberos_realms_properties_name}/>\n          <ReactTooltip id={\"services_kerberos_realms_properties_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Name of the entry to be written into the realms section of the Kerberos configuration.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_properties_value}  id={\"services_kerberos_realms_properties_value_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_value_tooltip_id\" + idPrefix}  labelText=\"Value\" onChange={props.updateservices_kerberos_realms_properties_value}/>\n          <ReactTooltip id={\"services_kerberos_realms_properties_value_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Value of the entry to be written into the realms section of the Kerberos configuration.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_properties_name || !props.services_kerberos_realms_properties_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Serviceskerberosrealms_propertiesAdd;\n"],"sourceRoot":""}