{"version":3,"file":"static/js/7268.142ef4c2.chunk.js","mappings":"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","sources":["content/resource_serversPage/aliasesAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_aliases_aliases_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_aliases_aliases\"] = document.getElementById(\"resource_servers_aliases_aliases_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"resource_servers_aliases_aliases\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"resource_servers_aliases_aliases_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"aliases_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addaliasesPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_aliases_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_aliases_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst AliasesAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [resource_servers_aliases_aliases, setresource_servers_aliases_aliases] = useState(''),\n    updateresource_servers_aliases_aliases = useCallback((evt) => setresource_servers_aliases_aliases(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addaliasesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"resource_servers_aliases_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_aliases_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Aliases : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_aliases_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_aliases_div\" + idPrefix}>\n          <TextInput  invalid={!props.resource_servers_aliases_aliases_valid}  invalidText={props.resource_servers_aliases_aliases_invalid_text}  value={props.resource_servers_aliases_aliases}  id={\"resource_servers_aliases_aliases_id\" + idPrefix}  data-tooltip-id={\"resource_servers_aliases_aliases_tooltip_id\" + idPrefix}  labelText=\"Aliases *\" onChange={props.updateresource_servers_aliases_aliases}/>\n          <ReactTooltip id={\"resource_servers_aliases_aliases_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The format of the alias should be: `&lt;host&gt;:&lt;port&gt;`. Note that the port is required even if the default HTTP or HTTPS ports are used.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_aliases_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default AliasesAdd;\n"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","AliasesAdd","props","row","resource_servers_aliases_aliases","setresource_servers_aliases_aliases","useState","updateresource_servers_aliases_aliases","useCallback","evt","target","fetcheddata","setFetcheddata","React","dataLoad","setDataMain","functionName","data","eval","_jsx","children","id","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","resource_servers_aliases_aliases_valid","invalidText","resource_servers_aliases_aliases_invalid_text","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","onClick"],"sourceRoot":""}