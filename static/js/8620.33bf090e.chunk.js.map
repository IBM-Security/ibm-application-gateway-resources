{"version":3,"file":"static/js/8620.33bf090e.chunk.js","mappings":"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","sources":["content/policiesPage/policieswafrequest_matchAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_waf_request_match_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_waf_request_match_method\"] = document.getElementById(\"policies_waf_request_match_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_waf_request_match_path_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_waf_request_match_path\"] = document.getElementById(\"policies_waf_request_match_path_id\" + idPrefix).value;\n    }\n    json[\"policies_waf_request_match_phases_logging\"] = document.getElementById(\"policies_waf_request_match_phases_logging_id\" + idPrefix).checked.toString();\n    json[\"policies_waf_request_match_phases_request_body\"] = document.getElementById(\"policies_waf_request_match_phases_request_body_id\" + idPrefix).checked.toString();\n    json[\"policies_waf_request_match_phases_request_headers\"] = document.getElementById(\"policies_waf_request_match_phases_request_headers_id\" + idPrefix).checked.toString();\n    json[\"policies_waf_request_match_phases_response_body\"] = document.getElementById(\"policies_waf_request_match_phases_response_body_id\" + idPrefix).checked.toString();\n    json[\"policies_waf_request_match_phases_response_headers\"] = document.getElementById(\"policies_waf_request_match_phases_response_headers_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"policies_waf_request_match_version_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_waf_request_match_version\"] = document.getElementById(\"policies_waf_request_match_version_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"policies_waf_request_match_method\"], json[\"policies_waf_request_match_path\"], json[\"policies_waf_request_match_phases_logging\"], json[\"policies_waf_request_match_phases_request_body\"], json[\"policies_waf_request_match_phases_request_headers\"], json[\"policies_waf_request_match_phases_response_body\"], json[\"policies_waf_request_match_phases_response_headers\"], json[\"policies_waf_request_match_version\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_waf_request_match_method_id\").value = \"\";\n    document.getElementById(\"policies_waf_request_match_path_id\").value = \"\";\n    document.getElementById(\"policies_waf_request_match_phases_logging_id\").checked = false;\n    document.getElementById(\"policies_waf_request_match_phases_request_body_id\").checked = false;\n    document.getElementById(\"policies_waf_request_match_phases_request_headers_id\").checked = false;\n    document.getElementById(\"policies_waf_request_match_phases_response_body_id\").checked = false;\n    document.getElementById(\"policies_waf_request_match_phases_response_headers_id\").checked = false;\n    document.getElementById(\"policies_waf_request_match_version_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieswaf_request_matchPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_waf_request_match_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_waf_request_match_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Policieswaf_request_matchAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [policies_waf_request_match_method, setpolicies_waf_request_match_method] = useState(''),\n    updatepolicies_waf_request_match_method = useCallback((evt) => setpolicies_waf_request_match_method(evt.target.value), []);\n\n    const [policies_waf_request_match_path, setpolicies_waf_request_match_path] = useState(''),\n    updatepolicies_waf_request_match_path = useCallback((evt) => setpolicies_waf_request_match_path(evt.target.value), []);\n\n    const [policies_waf_request_match_phases_logging, setpolicies_waf_request_match_phases_logging] = useState(true),\n    updatepolicies_waf_request_match_phases_logging = useCallback((evt) => setpolicies_waf_request_match_phases_logging(evt), []);\n\n    const [policies_waf_request_match_phases_request_body, setpolicies_waf_request_match_phases_request_body] = useState(true),\n    updatepolicies_waf_request_match_phases_request_body = useCallback((evt) => setpolicies_waf_request_match_phases_request_body(evt), []);\n\n    const [policies_waf_request_match_phases_request_headers, setpolicies_waf_request_match_phases_request_headers] = useState(true),\n    updatepolicies_waf_request_match_phases_request_headers = useCallback((evt) => setpolicies_waf_request_match_phases_request_headers(evt), []);\n\n    const [policies_waf_request_match_phases_response_body, setpolicies_waf_request_match_phases_response_body] = useState(true),\n    updatepolicies_waf_request_match_phases_response_body = useCallback((evt) => setpolicies_waf_request_match_phases_response_body(evt), []);\n\n    const [policies_waf_request_match_phases_response_headers, setpolicies_waf_request_match_phases_response_headers] = useState(true),\n    updatepolicies_waf_request_match_phases_response_headers = useCallback((evt) => setpolicies_waf_request_match_phases_response_headers(evt), []);\n\n    const [policies_waf_request_match_version, setpolicies_waf_request_match_version] = useState('*'),\n    updatepolicies_waf_request_match_version = useCallback((evt) => setpolicies_waf_request_match_version(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieswaf_request_matchPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_waf_request_match_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"phases_tab\" + idPrefix}>Phases</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"phases_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_waf_request_match_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Web Application Firewall / Request Match : </span><br/>                  <h2>Phases Settings</h2><hr/>\n                  <Collapsible tabIndex=\"0\" trigger=\"The phases of the request cycle for which this match should be triggered\">\n                    <p>The phases of the request cycle for which this match should be triggered. The default is to trigger at each phase of the  request cycle.</p>\n                  </Collapsible>\n\n                </div>\n                <div className={\"iag--simple-div policies_waf_request_match_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n  <h3>Phases</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <Checkbox checked={props.policies_waf_request_match_phases_logging} id={\"policies_waf_request_match_phases_logging_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_phases_logging_tooltip_id\" + idPrefix}  labelText=\"Logging\" onChange={props.updatepolicies_waf_request_match_phases_logging}/>\n          <ReactTooltip id={\"policies_waf_request_match_phases_logging_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Whether or not to run the WAF rules during the logging phase.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <Checkbox checked={props.policies_waf_request_match_phases_request_body} id={\"policies_waf_request_match_phases_request_body_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_phases_request_body_tooltip_id\" + idPrefix}  labelText=\"Request Body\" onChange={props.updatepolicies_waf_request_match_phases_request_body}/>\n          <ReactTooltip id={\"policies_waf_request_match_phases_request_body_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Whether or not to run the WAF rules after the HTTP request body has been received.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <Checkbox checked={props.policies_waf_request_match_phases_request_headers} id={\"policies_waf_request_match_phases_request_headers_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_phases_request_headers_tooltip_id\" + idPrefix}  labelText=\"Request Headers\" onChange={props.updatepolicies_waf_request_match_phases_request_headers}/>\n          <ReactTooltip id={\"policies_waf_request_match_phases_request_headers_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Whether or not to run the WAF rules after the HTTP request  headers have been received.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <Checkbox checked={props.policies_waf_request_match_phases_response_body} id={\"policies_waf_request_match_phases_response_body_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_phases_response_body_tooltip_id\" + idPrefix}  labelText=\"Response Body\" onChange={props.updatepolicies_waf_request_match_phases_response_body}/>\n          <ReactTooltip id={\"policies_waf_request_match_phases_response_body_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Whether or not to run the WAF rules after the HTTP response body has been received.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <Checkbox checked={props.policies_waf_request_match_phases_response_headers} id={\"policies_waf_request_match_phases_response_headers_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_phases_response_headers_tooltip_id\" + idPrefix}  labelText=\"Response Headers\" onChange={props.updatepolicies_waf_request_match_phases_response_headers}/>\n          <ReactTooltip id={\"policies_waf_request_match_phases_response_headers_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Whether or not to run the WAF rules after the HTTP response headers have been received.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_waf_request_match_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Web Application Firewall / Request Match : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_waf_request_match_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n  <h3>Request Match</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_waf_request_match_method_valid}  invalidText={props.policies_waf_request_match_method_invalid_text}  value={props.policies_waf_request_match_method}  id={\"policies_waf_request_match_method_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_method_tooltip_id\" + idPrefix}  labelText=\"Method *\" onChange={props.updatepolicies_waf_request_match_method}/>\n          <ReactTooltip id={\"policies_waf_request_match_method_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this match should be triggered. This value can include the wildcard `*` character to match multiple methods.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_waf_request_match_path_valid}  invalidText={props.policies_waf_request_match_path_invalid_text}  value={props.policies_waf_request_match_path}  id={\"policies_waf_request_match_path_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_path_tooltip_id\" + idPrefix}  labelText=\"Path *\" onChange={props.updatepolicies_waf_request_match_path}/>\n          <ReactTooltip id={\"policies_waf_request_match_path_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP path for which this match should be triggered. This value can include the wildcard `*` character to match multiple paths.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_waf_request_match_version_valid}  invalidText={props.policies_waf_request_match_version_invalid_text}  value={props.policies_waf_request_match_version}  id={\"policies_waf_request_match_version_id\" + idPrefix}  data-tooltip-id={\"policies_waf_request_match_version_tooltip_id\" + idPrefix}  labelText=\"Version *\" onChange={props.updatepolicies_waf_request_match_version}/>\n          <ReactTooltip id={\"policies_waf_request_match_version_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP version string for which this match should be  triggered. This value can include the wildcard `*` character to match multiple versions.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_waf_request_match_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieswaf_request_matchAdd;\n"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Policieswaf_request_matchAdd","props","row","policies_waf_request_match_method","setpolicies_waf_request_match_method","useState","updatepolicies_waf_request_match_method","useCallback","evt","target","policies_waf_request_match_path","setpolicies_waf_request_match_path","updatepolicies_waf_request_match_path","policies_waf_request_match_phases_logging","setpolicies_waf_request_match_phases_logging","updatepolicies_waf_request_match_phases_logging","policies_waf_request_match_phases_request_body","setpolicies_waf_request_match_phases_request_body","updatepolicies_waf_request_match_phases_request_body","policies_waf_request_match_phases_request_headers","setpolicies_waf_request_match_phases_request_headers","updatepolicies_waf_request_match_phases_request_headers","policies_waf_request_match_phases_response_body","setpolicies_waf_request_match_phases_response_body","updatepolicies_waf_request_match_phases_response_body","policies_waf_request_match_phases_response_headers","setpolicies_waf_request_match_phases_response_headers","updatepolicies_waf_request_match_phases_response_headers","policies_waf_request_match_version","setpolicies_waf_request_match_version","updatepolicies_waf_request_match_version","fetcheddata","setFetcheddata","React","dataLoad","setDataMain","functionName","data","eval","_jsx","children","id","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","Collapsible","tabIndex","trigger","marginLeft","marginBottom","Checkbox","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","onClick","TextInput","invalid","policies_waf_request_match_method_valid","invalidText","policies_waf_request_match_method_invalid_text","policies_waf_request_match_path_valid","policies_waf_request_match_path_invalid_text","policies_waf_request_match_version_valid","policies_waf_request_match_version_invalid_text"],"sourceRoot":""}