{"version":3,"sources":["content/servicesPage/serviceskerberosrealmsAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ServiceskerberosrealmspropertiesDeleteModal","lazy","all","__webpack_require__","bind","ServiceskerberosrealmspropertiesAdd","ServiceskerberosrealmspropertiesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","services_kerberos_realms_propertiesrowData","services_kerberos_realms_properties","handleClose","handleAdd","setservices_kerberos_realms_properties","doAdd","updateStyle","style","display","closeAdd","services_kerberos_realms_propertiesheaderData","header","key","services_kerberos_realms_propertieshandleAdd","clearFields","eval","Serviceskerberos_realmsAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedservices_kerberos_realms_properties","setFetchedservices_kerberos_realms_properties","useEffect","services_kerberos_realms_propertiesloadGrid","useCallback","_ref","_asyncToGenerator","_callee","services_kerberos_realms_properties_name","services_kerberos_realms_properties_value","add","attrs","tempId","newId","_context","window","services_kerberos_realms_propertiesediting","services_kerberos_realms_propertiesrowId","id","console","log","_x","_x2","_x3","apply","arguments","_useState","_useState2","services_kerberos_realms_name","setservices_kerberos_realms_name","updateservices_kerberos_realms_name","evt","target","_useState3","_useState4","services_kerberos_realms_kdc","setservices_kerberos_realms_kdc","updateservices_kerberos_realms_kdc","_useState5","_useState6","setservices_kerberos_realms_properties_name","updateservices_kerberos_realms_properties_name","validateField","setservices_kerberos_realms_properties_name_valid","setservices_kerberos_realms_properties_name_invalid_text","_useState7","_useState8","services_kerberos_realms_properties_name_valid","_useState9","_useState10","services_kerberos_realms_properties_name_invalid_text","_useState11","_useState12","setservices_kerberos_realms_properties_value","updateservices_kerberos_realms_properties_value","_useState13","_useState14","services_kerberos_realms_hostname","setservices_kerberos_realms_hostname","updateservices_kerberos_realms_hostname","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","services_kerberos_realms_name_valid","invalidText","services_kerberos_realms_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/337.99364ece.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServiceskerberosrealmspropertiesDeleteModal = lazy(() => import('./serviceskerberosrealmspropertiesDeleteModal'));\nconst ServiceskerberosrealmspropertiesAdd = lazy(() => import('./serviceskerberosrealmspropertiesAdd'));\nconst ServiceskerberosrealmspropertiesEdit = lazy(() => import('./serviceskerberosrealmspropertiesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_realms_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_name\"] = document.getElementById(\"services_kerberos_realms_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_kdc_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_kdc\"] = document.getElementById(\"services_kerberos_realms_kdc_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_hostname\"] = document.getElementById(\"services_kerberos_realms_hostname_id\" + idPrefix).value;\n    }\n    json[\"services_kerberos_realms_properties\"] = services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties;\n      \n    loadGrid( json[\"services_kerberos_realms_name\"], json[\"services_kerberos_realms_kdc\"], json[\"services_kerberos_realms_hostname\"], json[\"services_kerberos_realms_properties\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_kerberos_realms_properties, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_kerberos_realms_name_id\").value = \"\";\n    document.getElementById(\"services_kerberos_realms_kdc_id\").value = \"\";\n    document.getElementById(\"services_kerberos_realms_hostname_id\").value = \"\";\n    services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties = []\n    setservices_kerberos_realms_properties(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserviceskerberos_realmsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_realms_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_realms_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_kerberos_realms_propertiesheaderData = [\n    {\n    header: 'Name',\n    key: 'name',\n  },\n{\n    header: 'Value',\n    key: 'value',\n  },\n\n];\n\nconst services_kerberos_realms_propertiesrowData = {services_kerberos_realms_properties: []};\n\nconst services_kerberos_realms_propertieshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_kerberos_realms_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserviceskerberosrealms_propertiesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_kerberos_realms_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serviceskerberos_realmsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_kerberos_realms_properties, setservices_kerberos_realms_properties] = React.useState([]);\n    const [fetchedservices_kerberos_realms_properties, setFetchedservices_kerberos_realms_properties] = React.useState(false);\n\n    React.useEffect(() => {\n      services_kerberos_realms_propertiesloadGrid();\n    }, [fetchedservices_kerberos_realms_properties]);\n\n    const services_kerberos_realms_propertiesloadGrid = React.useCallback(async (services_kerberos_realms_properties_name, services_kerberos_realms_properties_value, add) => {\n      try {\n        var attrs = [];\n        if(services_kerberos_realms_properties_name) {\n          if(add) {\n            for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n              var tempId = ((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name)?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name:\"\") + \"\";\n              if((window.services_kerberos_realms_propertiesediting != true && window.services_kerberos_realms_propertiesediting != \"true\") || tempId != window.services_kerberos_realms_propertiesrowId) {\n                attrs.push(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i]);\n              }\n            }\n            var newId = ((services_kerberos_realms_properties_name)?services_kerberos_realms_properties_name:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              name: services_kerberos_realms_properties_name,\nvalue: services_kerberos_realms_properties_value,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n              if(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name !== services_kerberos_realms_properties_name ) {\n                attrs.push(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties;\n        }\n        services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties = attrs;\n        const data = {services_kerberos_realms_properties: attrs};\n        setservices_kerberos_realms_properties(data.services_kerberos_realms_properties);\n\n        if(services_kerberos_realms_properties_name !== undefined && services_kerberos_realms_properties_name !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_kerberos_realms_name, setservices_kerberos_realms_name] = useState(''),\n    updateservices_kerberos_realms_name = useCallback((evt) => setservices_kerberos_realms_name(evt.target.value), []);\n\n    const [services_kerberos_realms_kdc, setservices_kerberos_realms_kdc] = useState(''),\n    updateservices_kerberos_realms_kdc = useCallback((evt) => setservices_kerberos_realms_kdc(evt.target.value), []);\n\n    const [services_kerberos_realms_properties_name, setservices_kerberos_realms_properties_name] = useState(''),\n    updateservices_kerberos_realms_properties_name = useCallback((evt) => {\n      setservices_kerberos_realms_properties_name(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties, setservices_kerberos_realms_properties_name_valid, setservices_kerberos_realms_properties_name_invalid_text, \"Services Kerberos Realms Properties\", \"name\", tempId);\n    }, []);\n\n    const [services_kerberos_realms_properties_name_valid, setservices_kerberos_realms_properties_name_valid] = useState(true);\n    const [services_kerberos_realms_properties_name_invalid_text, setservices_kerberos_realms_properties_name_invalid_text] = useState(\"\");\n\n\n    const [services_kerberos_realms_properties_value, setservices_kerberos_realms_properties_value] = useState(''),\n    updateservices_kerberos_realms_properties_value = useCallback((evt) => setservices_kerberos_realms_properties_value(evt.target.value), []);\n\n    const [services_kerberos_realms_hostname, setservices_kerberos_realms_hostname] = useState(''),\n    updateservices_kerberos_realms_hostname = useCallback((evt) => setservices_kerberos_realms_hostname(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n        if(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].id === window.services_kerberos_realms_propertiesrowId) {\n        setservices_kerberos_realms_properties_name((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i] !== undefined && services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name !== undefined )?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name:\"\");\n        setservices_kerberos_realms_properties_value((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i] !== undefined && services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].value !== undefined )?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].value:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserviceskerberos_realmsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_kerberos_realms_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"properties_tab\" + idPrefix}>Properties</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n  <h3>Realms</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_kerberos_realms_name_valid}  invalidText={props.services_kerberos_realms_name_invalid_text}  value={props.services_kerberos_realms_name}  id={\"services_kerberos_realms_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_kerberos_realms_name}/>\n          <ReactTooltip id={\"services_kerberos_realms_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the Kerberos Realm being configured.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_kdc}  id={\"services_kerberos_realms_kdc_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_kdc_tooltip_id\" + idPrefix}  labelText=\"KDC\" onChange={props.updateservices_kerberos_realms_kdc}/>\n          <ReactTooltip id={\"services_kerberos_realms_kdc_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or address of a host running a KDC for that realm. An optional port number, separated from the hostname by a colon, may be included.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_hostname}  id={\"services_kerberos_realms_hostname_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname\" onChange={props.updateservices_kerberos_realms_hostname}/>\n          <ReactTooltip id={\"services_kerberos_realms_hostname_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The hostname for this realm.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_name || !props.services_kerberos_realms_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"properties_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms : </span><br/>                  <h2>Properties Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_tooltip_id\" + idPrefix} >Properties</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_kerberos_realms_properties_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Advanced additional properties to be added to the Realm configuration. These properties correspond to the properties in the [realms] &lt;realm name&gt; section of krb5.conf.<br/></div></ReactTooltip>\n\n                <div id={\"services_kerberos_realms_propertiesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <DataTable id={\"services_kerberos_realms_propertiesTable\" + idPrefix} isSortable\n                        headers={services_kerberos_realms_propertiesheaderData}\n                        rows={services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_kerberos_realms_propertieshandleAdd(idPrefix, [setservices_kerberos_realms_properties_name(''),    setservices_kerberos_realms_properties_name_valid(true),    setservices_kerberos_realms_properties_value(''),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberosrealmspropertiesDeleteModal row={row} loadGrid={services_kerberos_realms_propertiesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberosrealmspropertiesEdit  data={services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties} setData={setDataMain} row={row} loadGrid={services_kerberos_realms_propertiesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_kerberos_realms_properties\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_name || !props.services_kerberos_realms_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberosrealmspropertiesAdd loadGrid={services_kerberos_realms_propertiesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberosrealmspropertiesEdit  loadGrid={services_kerberos_realms_propertiesloadGrid} dataLoad={dataLoad} name={\"services_kerberos_realms_properties\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serviceskerberos_realmsAdd;\n"],"sourceRoot":""}