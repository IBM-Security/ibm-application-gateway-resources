{"version":3,"sources":["content/servicesPage/servicesrediscollectionsserversEdit.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ServicesrediscollectionsserverssslclientCertificateDeleteModal","lazy","__webpack_require__","bind","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","ServicesrediscollectionsserversssltrustCertificatesDeleteModal","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","endsWith","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","pName","len","style","display","updateStyle","closeAdd","services_redis_collections_servers_ssl_client_certificateheaderData","header","key","services_redis_collections_servers_ssl_client_certificatehandleAdd","clearFields","eval","services_redis_collections_servers_ssl_trust_certificatesheaderData","services_redis_collections_servers_ssl_trust_certificateshandleAdd","getEditData","yamlText","iagyaml","safeLoad","ssl","client_certificate","newItem","i2","id","trust_certificates","services","redis","collections","Servicesrediscollections_serversEdit","props","row","toolbarName","_React$useState","React","useState","_React$useState2","_slicedToArray","setservices_redis_collections_servers_ssl_client_certificate","_React$useState3","_React$useState4","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","useEffect","services_redis_collections_servers_ssl_client_certificateloadGrid","useCallback","_ref","_asyncToGenerator","_callee","services_redis_collections_servers_ssl_client_certificate_client_certificate","add","attrs","tempId","newId","_context","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","setservices_redis_collections_servers_ssl_trust_certificates","_React$useState7","_React$useState8","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","services_redis_collections_servers_ssl_trust_certificatesloadGrid","_ref2","_callee2","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","_context2","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","_x3","_x4","_useState","_useState2","services_redis_collections_servers_host","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","evt","target","_useState3","_useState4","services_redis_collections_servers_name","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","_useState5","_useState6","services_redis_collections_servers_password","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","_useState7","_useState8","services_redis_collections_servers_port","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","_useState9","_useState10","setservices_redis_collections_servers_ssl_client_certificate_client_certificate","updateservices_redis_collections_servers_ssl_client_certificate_client_certificate","_useState11","_useState12","services_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid","_useState13","_useState14","services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState15","_useState16","services_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","_useState17","_useState18","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates","_useState19","_useState20","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","_useState21","_useState22","services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState23","_useState24","services_redis_collections_servers_username","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","setDataMain","functionName","editing","createElement","Icon","assign","editProps","editIcon","onClick","title","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","NumberInput","min","label","Button","disabled","services_redis_collections_servers_name_valid","tabIndex","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","_ref4"],"mappings":"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","file":"static/js/75.0194f0d5.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_host\"] = document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_name\"] = document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_password\"] = document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_port\"] = document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_ssl_sni\"] = document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_servers_username\"] = document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers_ssl_client_certificate\"] = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n    json[\"services_redis_collections_servers_ssl_trust_certificates\"] = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"services_redis_collections_servers_host\"], json[\"services_redis_collections_servers_name\"], json[\"services_redis_collections_servers_password\"], json[\"services_redis_collections_servers_port\"], json[\"services_redis_collections_servers_ssl_sni\"], json[\"services_redis_collections_servers_username\"], json[\"services_redis_collections_servers_ssl_client_certificate\"], json[\"services_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editservicesrediscollections_serversPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editservicesrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = [];\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].name)?data[i].name:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.client_certificate !== undefined ) {\n              if(typeof data[i].ssl.client_certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.client_certificate;\n                newItem[\"client_certificate\"] = data[i].ssl.client_certificate;\n                services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.client_certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.client_certificate[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.client_certificate[i2].id;\n                  } else if(data[i].ssl.client_certificate[i2].client_certificate) {\n                    newItem[\"id\"] = data[i].ssl.client_certificate[i2].client_certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.client_certificate[i2];\n                  }\n                  if(data[i].ssl.client_certificate[i2].client_certificate) {\n                    newItem[\"client_certificate\"] = data[i].ssl.client_certificate[i2].client_certificate;\n                  } else {\n                    newItem[\"client_certificate\"] = data[i].ssl.client_certificate[i2];\n                  }\n                  services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.push(newItem);\n                }\n              }\n              setData(\"setservices_redis_collections_servers_ssl_client_certificate\", services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n            }\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.trust_certificates !== undefined ) {\n              if(typeof data[i].ssl.trust_certificates === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.trust_certificates;\n                newItem[\"trust_certificates\"] = data[i].ssl.trust_certificates;\n                services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.trust_certificates.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.trust_certificates[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.trust_certificates[i2].id;\n                  } else if(data[i].ssl.trust_certificates[i2].trust_certificates) {\n                    newItem[\"id\"] = data[i].ssl.trust_certificates[i2].trust_certificates;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.trust_certificates[i2];\n                  }\n                  if(data[i].ssl.trust_certificates[i2].trust_certificates) {\n                    newItem[\"trust_certificates\"] = data[i].ssl.trust_certificates[i2].trust_certificates;\n                  } else {\n                    newItem[\"trust_certificates\"] = data[i].ssl.trust_certificates[i2];\n                  }\n                  services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.push(newItem);\n                }\n              }\n              setData(\"setservices_redis_collections_servers_ssl_trust_certificates\", services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.services !== undefined && json.services.redis !== undefined && json.services.redis.collections !== undefined ) {\n      }\n    }\n  };\nconst Servicesrediscollections_serversEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => setservices_redis_collections_servers_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate, setservices_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateservices_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => setservices_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value), []);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setservices_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value), []);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].id === window.services_redis_collections_servers_ssl_client_certificaterowId) {\n        setservices_redis_collections_servers_ssl_client_certificate_client_certificate((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i] !== undefined && services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n      for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].id === window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i] !== undefined && services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editservicesrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"services_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_host}  id={\"services_redis_collections_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_redis_collections_servers_host}/>\n          <ReactTooltip id={\"services_redis_collections_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_name}  id={\"services_redis_collections_servers_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_servers_name}/>\n          <ReactTooltip id={\"services_redis_collections_servers_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_password}  id={\"services_redis_collections_servers_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_redis_collections_servers_password}/>\n          <ReactTooltip id={\"services_redis_collections_servers_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_servers_port} id={\"services_redis_collections_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateservices_redis_collections_servers_port}/>\n          <ReactTooltip id={\"services_redis_collections_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_username}  id={\"services_redis_collections_servers_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_redis_collections_servers_username}/>\n          <ReactTooltip id={\"services_redis_collections_servers_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  The SSL information associated with the Redis server.\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setservices_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserverssslclientCertificateEdit  data={services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_servers_ssl_sni}  id={\"services_redis_collections_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setservices_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversssltrustCertificatesEdit  data={services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_servers_name || !props.services_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateAdd loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserverssslclientCertificateEdit  loadGrid={services_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_client_certificate_client_certificate={updateservices_redis_collections_servers_ssl_client_certificate_client_certificate} services_redis_collections_servers_ssl_client_certificate_client_certificate={services_redis_collections_servers_ssl_client_certificate_client_certificate}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_valid={services_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={services_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesAdd loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversssltrustCertificatesEdit  loadGrid={services_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateservices_redis_collections_servers_ssl_trust_certificates_trust_certificates} services_redis_collections_servers_ssl_trust_certificates_trust_certificates={services_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={services_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Servicesrediscollections_serversEdit;\n"],"sourceRoot":""}