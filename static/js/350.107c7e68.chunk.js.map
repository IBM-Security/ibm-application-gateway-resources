{"version":3,"sources":["content/serverPage/serversslfront_endsniAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ServersslfrontEndsnicertificateDeleteModal","lazy","all","__webpack_require__","bind","ServersslfrontEndsnicertificateAdd","ServersslfrontEndsnicertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","server_ssl_front_end_sni_certificaterowData","server_ssl_front_end_sni_certificate","handleClose","handleAdd","setserver_ssl_front_end_sni_certificate","doAdd","updateStyle","style","display","closeAdd","server_ssl_front_end_sni_certificateheaderData","header","key","server_ssl_front_end_sni_certificatehandleAdd","clearFields","eval","Serversslfront_end_sniAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedserver_ssl_front_end_sni_certificate","setFetchedserver_ssl_front_end_sni_certificate","useEffect","server_ssl_front_end_sni_certificateloadGrid","useCallback","_ref","_asyncToGenerator","_callee","server_ssl_front_end_sni_certificate_certificate","add","attrs","tempId","newId","_context","certificate","window","server_ssl_front_end_sni_certificateediting","server_ssl_front_end_sni_certificaterowId","id","console","log","_x","_x2","apply","arguments","_useState","_useState2","setserver_ssl_front_end_sni_certificate_certificate","updateserver_ssl_front_end_sni_certificate_certificate","evt","target","validateField","setserver_ssl_front_end_sni_certificate_certificate_valid","setserver_ssl_front_end_sni_certificate_certificate_invalid_text","_useState3","_useState4","server_ssl_front_end_sni_certificate_certificate_valid","_useState5","_useState6","server_ssl_front_end_sni_certificate_certificate_invalid_text","_useState7","_useState8","server_ssl_front_end_sni_hostname","setserver_ssl_front_end_sni_hostname","updateserver_ssl_front_end_sni_hostname","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","server_ssl_front_end_sni_hostname_valid","invalidText","server_ssl_front_end_sni_hostname_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/350.107c7e68.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServersslfrontEndsnicertificateDeleteModal = lazy(() => import('./serversslfront_endsnicertificateDeleteModal'));\nconst ServersslfrontEndsnicertificateAdd = lazy(() => import('./serversslfront_endsnicertificateAdd'));\nconst ServersslfrontEndsnicertificateEdit = lazy(() => import('./serversslfront_endsnicertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_ssl_front_end_sni_hostname\"] = document.getElementById(\"server_ssl_front_end_sni_hostname_id\" + idPrefix).value;\n    }\n    json[\"server_ssl_front_end_sni_certificate\"] = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n      \n    loadGrid( json[\"server_ssl_front_end_sni_hostname\"], json[\"server_ssl_front_end_sni_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setserver_ssl_front_end_sni_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_ssl_front_end_sni_hostname_id\").value = \"\";\n    server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = []\n    setserver_ssl_front_end_sni_certificate(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversslfront_end_sniPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst server_ssl_front_end_sni_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst server_ssl_front_end_sni_certificaterowData = {server_ssl_front_end_sni_certificate: []};\n\nconst server_ssl_front_end_sni_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"server_ssl_front_end_sni_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"server_ssl_front_end_sni_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversslfront_endsni_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"server_ssl_front_end_sni_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serversslfront_end_sniAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate] = React.useState([]);\n    const [fetchedserver_ssl_front_end_sni_certificate, setFetchedserver_ssl_front_end_sni_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      server_ssl_front_end_sni_certificateloadGrid();\n    }, [fetchedserver_ssl_front_end_sni_certificate]);\n\n    const server_ssl_front_end_sni_certificateloadGrid = React.useCallback(async (server_ssl_front_end_sni_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(server_ssl_front_end_sni_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              var tempId = ((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate)?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\") + \"\";\n              if((window.server_ssl_front_end_sni_certificateediting != true && window.server_ssl_front_end_sni_certificateediting != \"true\") || tempId != window.server_ssl_front_end_sni_certificaterowId) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n            var newId = ((server_ssl_front_end_sni_certificate_certificate)?server_ssl_front_end_sni_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: server_ssl_front_end_sni_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n              if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== server_ssl_front_end_sni_certificate_certificate ) {\n                attrs.push(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate;\n        }\n        server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate = attrs;\n        const data = {server_ssl_front_end_sni_certificate: attrs};\n        setserver_ssl_front_end_sni_certificate(data.server_ssl_front_end_sni_certificate);\n\n        if(server_ssl_front_end_sni_certificate_certificate !== undefined && server_ssl_front_end_sni_certificate_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [server_ssl_front_end_sni_certificate_certificate, setserver_ssl_front_end_sni_certificate_certificate] = useState(''),\n    updateserver_ssl_front_end_sni_certificate_certificate = useCallback((evt) => {\n      setserver_ssl_front_end_sni_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate, setserver_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_invalid_text, \"Server Ssl Front End Sni Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [server_ssl_front_end_sni_certificate_certificate_valid, setserver_ssl_front_end_sni_certificate_certificate_valid] = useState(true);\n    const [server_ssl_front_end_sni_certificate_certificate_invalid_text, setserver_ssl_front_end_sni_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [server_ssl_front_end_sni_hostname, setserver_ssl_front_end_sni_hostname] = useState(''),\n    updateserver_ssl_front_end_sni_hostname = useCallback((evt) => setserver_ssl_front_end_sni_hostname(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate.length; i++) {\n        if(server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].id === window.server_ssl_front_end_sni_certificaterowId) {\n        setserver_ssl_front_end_sni_certificate_certificate((server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i] !== undefined && server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate !== undefined )?server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversslfront_end_sniPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_ssl_front_end_sni_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"certificate_tab\" + idPrefix}>Certificate</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3>SNI</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_ssl_front_end_sni_hostname_valid}  invalidText={props.server_ssl_front_end_sni_hostname_invalid_text}  value={props.server_ssl_front_end_sni_hostname}  id={\"server_ssl_front_end_sni_hostname_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname *\" onChange={props.updateserver_ssl_front_end_sni_hostname}/>\n          <ReactTooltip id={\"server_ssl_front_end_sni_hostname_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the host for this SNI entry.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"certificate_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_front_end_sni_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Front End / SNI : </span><br/>                  <h2>Certificate Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div server_ssl_front_end_sni_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"server_ssl_front_end_sni_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>PEM based personal certificate files which will be used when communicating with clients which indicate this host. These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"server_ssl_front_end_sni_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <DataTable id={\"server_ssl_front_end_sni_certificateTable\" + idPrefix} isSortable\n                        headers={server_ssl_front_end_sni_certificateheaderData}\n                        rows={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {server_ssl_front_end_sni_certificatehandleAdd(idPrefix, [setserver_ssl_front_end_sni_certificate_certificate(''),    setserver_ssl_front_end_sni_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateDeleteModal row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersslfrontEndsnicertificateEdit  data={server_ssl_front_end_sni_certificaterowData.server_ssl_front_end_sni_certificate} setData={setDataMain} row={row} loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_front_end_sni_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_front_end_sni_hostname || !props.server_ssl_front_end_sni_hostname_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateAdd loadGrid={server_ssl_front_end_sni_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersslfrontEndsnicertificateEdit  loadGrid={server_ssl_front_end_sni_certificateloadGrid} dataLoad={dataLoad} name={\"server_ssl_front_end_sni_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_ssl_front_end_sni_certificate_certificate={updateserver_ssl_front_end_sni_certificate_certificate} server_ssl_front_end_sni_certificate_certificate={server_ssl_front_end_sni_certificate_certificate}\n            server_ssl_front_end_sni_certificate_certificate_valid={server_ssl_front_end_sni_certificate_certificate_valid}\n            server_ssl_front_end_sni_certificate_certificate_invalid_text={server_ssl_front_end_sni_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serversslfront_end_sniAdd;\n"],"sourceRoot":""}