{"version":3,"file":"static/js/2231.081ee0a0.chunk.js","mappings":"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","sources":["content/resource_serversPage/serversEdit.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].port)?data[i].port:\"\") + ((data[i].host)?data[i].host:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.certificate !== undefined ) {\n              if(typeof data[i].ssl.certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.certificate;\n                newItem[\"certificate\"] = data[i].ssl.certificate;\n                resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.certificate[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].id;\n                  } else if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2];\n                  }\n                  if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2];\n                  }\n                  resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n                }\n              }\n              setData(\"setresource_servers_servers_ssl_certificate\", resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.resource_servers !== undefined ) {\n      }\n    }\n  };\nconst ServersEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => setresource_servers_servers_ssl_certificate_certificate(evt.target.value), []);\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ServersEdit;\n"],"names":["ServerssslcertificateDeleteModal","lazy","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","slice","style","display","updateStyle","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","port","host","ssl","certificate","newItem","push","i2","id","resource_servers","ServersEdit","props","row","name","toolbarName","setresource_servers_servers_ssl_certificate","React","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","resource_servers_servers_ssl_certificateloadGrid","async","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","newId","e","console","log","resource_servers_servers_host","setresource_servers_servers_host","useState","updateresource_servers_servers_host","useCallback","evt","target","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","resource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_valid","resource_servers_servers_ssl_certificate_certificate_invalid_text","setresource_servers_servers_ssl_certificate_certificate_invalid_text","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","fetcheddata","setFetcheddata","setDataMain","functionName","editing","_jsx","Icon","_objectSpread","editProps","editIcon","onClick","title","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","Checkbox","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","TextInput","NumberInput","min","max","label","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback"],"sourceRoot":""}