{"version":3,"sources":["content/loggingPage/loggingtracingAdd.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Logging_tracingAdd","props","row","_useState","useState","_useState2","_slicedToArray","logging_tracing_component","setlogging_tracing_component","updatelogging_tracing_component","useCallback","evt","target","_useState3","_useState4","logging_tracing_compress","setlogging_tracing_compress","updatelogging_tracing_compress","_useState5","_useState6","logging_tracing_file_name","setlogging_tracing_file_name","updatelogging_tracing_file_name","_useState7","_useState8","logging_tracing_level","setlogging_tracing_level","updatelogging_tracing_level","_useState9","_useState10","logging_tracing_max_file_size","setlogging_tracing_max_file_size","updatelogging_tracing_max_file_size","_useState11","_useState12","logging_tracing_max_rollover_files","setlogging_tracing_max_rollover_files","updatelogging_tracing_max_rollover_files","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","dataLoad","setDataMain","functionName","data","eval","createElement","id","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","invalid","logging_tracing_component_valid","invalidText","logging_tracing_component_invalid_text","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Checkbox","logging_tracing_file_name_valid","logging_tracing_file_name_invalid_text","NumberInput","min","max","label","Button","onClick","disabled"],"mappings":"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","file":"static/js/290.0d400818.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"logging_tracing_component_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_component\"] = document.getElementById(\"logging_tracing_component_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_compress\"] = document.getElementById(\"logging_tracing_compress_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_file_name\"] = document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_level\"] = document.getElementById(\"logging_tracing_level_id\" + idPrefix).value;\n    json[\"logging_tracing_max_file_size\"] = document.getElementById(\"logging_tracing_max_file_size_id\" + idPrefix).value;\n    json[\"logging_tracing_max_rollover_files\"] = document.getElementById(\"logging_tracing_max_rollover_files_id\" + idPrefix).value;\n      \n    loadGrid( json[\"logging_tracing_component\"], json[\"logging_tracing_compress\"], json[\"logging_tracing_file_name\"], json[\"logging_tracing_level\"], json[\"logging_tracing_max_file_size\"], json[\"logging_tracing_max_rollover_files\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"logging_tracing_component_id\").value = \"\";\n    document.getElementById(\"logging_tracing_compress_id\").checked = false;\n    document.getElementById(\"logging_tracing_file_name_id\").value = \"\";\n    document.getElementById(\"logging_tracing_level_id\").value = \"\";\n    document.getElementById(\"logging_tracing_max_file_size_id\").value = \"\";\n    document.getElementById(\"logging_tracing_max_rollover_files_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"logging_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addlogging_tracingPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"logging_tracing_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"logging_tracing_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Logging_tracingAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [logging_tracing_component, setlogging_tracing_component] = useState(''),\n    updatelogging_tracing_component = useCallback((evt) => setlogging_tracing_component(evt.target.value), []);\n\n    const [logging_tracing_compress, setlogging_tracing_compress] = useState(true),\n    updatelogging_tracing_compress = useCallback((evt) => setlogging_tracing_compress(evt), []);\n\n    const [logging_tracing_file_name, setlogging_tracing_file_name] = useState(''),\n    updatelogging_tracing_file_name = useCallback((evt) => setlogging_tracing_file_name(evt.target.value), []);\n\n    const [logging_tracing_level, setlogging_tracing_level] = useState(0),\n    updatelogging_tracing_level = useCallback((evt) => {}, []);\n\n    const [logging_tracing_max_file_size, setlogging_tracing_max_file_size] = useState(1),\n    updatelogging_tracing_max_file_size = useCallback((evt) => {}, []);\n\n    const [logging_tracing_max_rollover_files, setlogging_tracing_max_rollover_files] = useState(1),\n    updatelogging_tracing_max_rollover_files = useCallback((evt) => {}, []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addlogging_tracingPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"logging_tracing_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading logging_tracing_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Logging / Tracing : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div logging_tracing_div\" + idPrefix}>\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  invalid={!props.logging_tracing_component_valid}  invalidText={props.logging_tracing_component_invalid_text}  value={props.logging_tracing_component}  id={\"logging_tracing_component_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_component_tooltip_id\" + idPrefix}  labelText=\"Component *\" onChange={props.updatelogging_tracing_component}/>\n          <ReactTooltip id={\"logging_tracing_component_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the tracing component to be enabled. Refer to the troubleshooting documentation for the full list of component names.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <Checkbox checked={props.logging_tracing_compress} id={\"logging_tracing_compress_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_compress_tooltip_id\" + idPrefix}  labelText=\"Compress\" onChange={props.updatelogging_tracing_compress}/>\n          <ReactTooltip id={\"logging_tracing_compress_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean which indicates whether rolled over log files should be automatically compressed to conserve disk space.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  invalid={!props.logging_tracing_file_name_valid}  invalidText={props.logging_tracing_file_name_invalid_text}  value={props.logging_tracing_file_name}  id={\"logging_tracing_file_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_file_name_tooltip_id\" + idPrefix}  labelText=\"File Name *\" onChange={props.updatelogging_tracing_file_name}/>\n          <ReactTooltip id={\"logging_tracing_file_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the generated log file.  If the file name is supplied without any path information the file will be written to the `/var/iag/logs` directory.  If the file name contains path information the hosting directory must be created and available before the container is started.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_level} id={\"logging_tracing_level_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_level_tooltip_id\" + idPrefix}  min={0}  max={9}  label=\"Level\" onChange={props.updatelogging_tracing_level}/>\n          <ReactTooltip id={\"logging_tracing_level_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The level of detail to be gathered by the tracing component in the range 0 to 9. Level 1 specifies the least detailed output and level 9 specifies the most detailed output. Level 0 will disable tracing for the component.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_max_file_size} id={\"logging_tracing_max_file_size_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_max_file_size_tooltip_id\" + idPrefix}  min={1}  label=\"Max File Size\" onChange={props.updatelogging_tracing_max_file_size}/>\n          <ReactTooltip id={\"logging_tracing_max_file_size_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum size (in MB) that the file can reach before it is rolled over.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_max_rollover_files} id={\"logging_tracing_max_rollover_files_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"logging_tracing_max_rollover_files_tooltip_id\" + idPrefix}  min={1}  label=\"Max Rollover Files\" onChange={props.updatelogging_tracing_max_rollover_files}/>\n          <ReactTooltip id={\"logging_tracing_max_rollover_files_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of rollover files to be kept on disk.  When the number of rollover log files reaches the specified threshold, the oldest log file is deleted.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.logging_tracing_component || !props.logging_tracing_component_valid) || (!props.logging_tracing_file_name || !props.logging_tracing_file_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Logging_tracingAdd;\n"],"sourceRoot":""}