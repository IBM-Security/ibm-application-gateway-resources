{"version":3,"sources":["content/policiesPage/policieshttp_transformationspostaznAdd.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PolicieshttpTransformationspostaznpathsDeleteModal","lazy","all","__webpack_require__","e","bind","PolicieshttpTransformationspostaznpathsAdd","PolicieshttpTransformationspostaznpathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","json","document","getElementById","endsWith","policies_http_transformations_postazn_pathsrowData","policies_http_transformations_postazn_paths","handleClose","handleAdd","setpolicies_http_transformations_postazn_paths","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_postazn_pathsheaderData","header","policies_http_transformations_postazn_pathshandleAdd","clearFields","eval","Policieshttp_transformations_postaznAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedpolicies_http_transformations_postazn_paths","setFetchedpolicies_http_transformations_postazn_paths","useEffect","policies_http_transformations_postazn_pathsloadGrid","useCallback","_ref","_asyncToGenerator","_callee","policies_http_transformations_postazn_paths_paths","add","attrs","tempId","newId","_context","paths","window","policies_http_transformations_postazn_pathsediting","policies_http_transformations_postazn_pathsrowId","id","console","log","_x","_x2","apply","arguments","_useState","_useState2","policies_http_transformations_postazn_name","setpolicies_http_transformations_postazn_name","updatepolicies_http_transformations_postazn_name","evt","target","_useState3","_useState4","policies_http_transformations_postazn_host","setpolicies_http_transformations_postazn_host","updatepolicies_http_transformations_postazn_host","_useState5","_useState6","setpolicies_http_transformations_postazn_paths_paths","updatepolicies_http_transformations_postazn_paths_paths","validateField","setpolicies_http_transformations_postazn_paths_paths_valid","setpolicies_http_transformations_postazn_paths_paths_invalid_text","_useState7","_useState8","policies_http_transformations_postazn_paths_paths_valid","_useState9","_useState10","policies_http_transformations_postazn_paths_paths_invalid_text","_useState11","_useState12","policies_http_transformations_postazn_method","setpolicies_http_transformations_postazn_method","updatepolicies_http_transformations_postazn_method","_useState13","_useState14","policies_http_transformations_postazn_rule","setpolicies_http_transformations_postazn_rule","updatepolicies_http_transformations_postazn_rule","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","policies_http_transformations_postazn_name_valid","invalidText","policies_http_transformations_postazn_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/289.7887a239.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationspostaznpathsDeleteModal = lazy(() => import('./policieshttp_transformationspostaznpathsDeleteModal'));\nconst PolicieshttpTransformationspostaznpathsAdd = lazy(() => import('./policieshttp_transformationspostaznpathsAdd'));\nconst PolicieshttpTransformationspostaznpathsEdit = lazy(() => import('./policieshttp_transformationspostaznpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_postazn_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_name\"] = document.getElementById(\"policies_http_transformations_postazn_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_postazn_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_host\"] = document.getElementById(\"policies_http_transformations_postazn_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_postazn_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_method\"] = document.getElementById(\"policies_http_transformations_postazn_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_postazn_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_postazn_rule\"] = document.getElementById(\"policies_http_transformations_postazn_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_postazn_paths\"] = policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths;\n      \n    loadGrid( json[\"policies_http_transformations_postazn_name\"], json[\"policies_http_transformations_postazn_host\"], json[\"policies_http_transformations_postazn_method\"], json[\"policies_http_transformations_postazn_rule\"], json[\"policies_http_transformations_postazn_paths\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_postazn_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_postazn_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_postazn_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_postazn_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_postazn_rule_id\").value = \"\";\n    policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths = []\n    setpolicies_http_transformations_postazn_paths(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_postaznPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_postazn_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_postazn_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_postazn_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_postazn_pathsrowData = {policies_http_transformations_postazn_paths: []};\n\nconst policies_http_transformations_postazn_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_postazn_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_postazn_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationspostazn_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_postazn_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_postaznAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_postazn_paths, setpolicies_http_transformations_postazn_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_postazn_paths, setFetchedpolicies_http_transformations_postazn_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_postazn_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_postazn_paths]);\n\n    const policies_http_transformations_postazn_pathsloadGrid = React.useCallback(async (policies_http_transformations_postazn_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_postazn_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths.length; i++) {\n              var tempId = ((policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths)?policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_postazn_pathsediting != true && window.policies_http_transformations_postazn_pathsediting != \"true\") || tempId != window.policies_http_transformations_postazn_pathsrowId) {\n                attrs.push(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_postazn_paths_paths)?policies_http_transformations_postazn_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_postazn_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths.length; i++) {\n              if(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths !== policies_http_transformations_postazn_paths_paths ) {\n                attrs.push(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths;\n        }\n        policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths = attrs;\n        const data = {policies_http_transformations_postazn_paths: attrs};\n        setpolicies_http_transformations_postazn_paths(data.policies_http_transformations_postazn_paths);\n\n        if(policies_http_transformations_postazn_paths_paths !== undefined && policies_http_transformations_postazn_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_postazn_name, setpolicies_http_transformations_postazn_name] = useState(''),\n    updatepolicies_http_transformations_postazn_name = useCallback((evt) => setpolicies_http_transformations_postazn_name(evt.target.value), []);\n\n    const [policies_http_transformations_postazn_host, setpolicies_http_transformations_postazn_host] = useState(''),\n    updatepolicies_http_transformations_postazn_host = useCallback((evt) => setpolicies_http_transformations_postazn_host(evt.target.value), []);\n\n    const [policies_http_transformations_postazn_paths_paths, setpolicies_http_transformations_postazn_paths_paths] = useState(''),\n    updatepolicies_http_transformations_postazn_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_postazn_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths, setpolicies_http_transformations_postazn_paths_paths_valid, setpolicies_http_transformations_postazn_paths_paths_invalid_text, \"Policies Http Transformations Postazn Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_postazn_paths_paths_valid, setpolicies_http_transformations_postazn_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_postazn_paths_paths_invalid_text, setpolicies_http_transformations_postazn_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_postazn_method, setpolicies_http_transformations_postazn_method] = useState(''),\n    updatepolicies_http_transformations_postazn_method = useCallback((evt) => setpolicies_http_transformations_postazn_method(evt.target.value), []);\n\n    const [policies_http_transformations_postazn_rule, setpolicies_http_transformations_postazn_rule] = useState(''),\n    updatepolicies_http_transformations_postazn_rule = useCallback((evt) => setpolicies_http_transformations_postazn_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths.length; i++) {\n        if(policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].id === window.policies_http_transformations_postazn_pathsrowId) {\n        setpolicies_http_transformations_postazn_paths_paths((policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i] !== undefined && policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths !== undefined )?policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_postaznPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_postazn_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_postazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Postazn : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_postazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n  <h3>Postazn</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_postazn_name_valid}  invalidText={props.policies_http_transformations_postazn_name_invalid_text}  value={props.policies_http_transformations_postazn_name}  id={\"policies_http_transformations_postazn_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_postazn_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_postazn_name}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_postazn_host}  id={\"policies_http_transformations_postazn_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_postazn_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_postazn_host}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_postazn_method}  id={\"policies_http_transformations_postazn_method_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_postazn_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_postazn_method}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_method_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_postazn_rule}  id={\"policies_http_transformations_postazn_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_postazn_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_postazn_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_postazn_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_postazn_name || !props.policies_http_transformations_postazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_postazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Postazn : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_postazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_postazn_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_postazn_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_postazn_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_postazn_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_postazn_pathsheaderData}\n                        rows={policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_postazn_pathshandleAdd(idPrefix, [setpolicies_http_transformations_postazn_paths_paths(''),    setpolicies_http_transformations_postazn_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspostaznpathsDeleteModal row={row} loadGrid={policies_http_transformations_postazn_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspostaznpathsEdit  data={policies_http_transformations_postazn_pathsrowData.policies_http_transformations_postazn_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_postazn_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_postazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_postazn_paths_paths={updatepolicies_http_transformations_postazn_paths_paths} policies_http_transformations_postazn_paths_paths={policies_http_transformations_postazn_paths_paths}\n            policies_http_transformations_postazn_paths_paths_valid={policies_http_transformations_postazn_paths_paths_valid}\n            policies_http_transformations_postazn_paths_paths_invalid_text={policies_http_transformations_postazn_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_postazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_postazn_name || !props.policies_http_transformations_postazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspostaznpathsAdd loadGrid={policies_http_transformations_postazn_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_postazn_paths_paths={updatepolicies_http_transformations_postazn_paths_paths} policies_http_transformations_postazn_paths_paths={policies_http_transformations_postazn_paths_paths}\n            policies_http_transformations_postazn_paths_paths_valid={policies_http_transformations_postazn_paths_paths_valid}\n            policies_http_transformations_postazn_paths_paths_invalid_text={policies_http_transformations_postazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspostaznpathsEdit  loadGrid={policies_http_transformations_postazn_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_postazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_postazn_paths_paths={updatepolicies_http_transformations_postazn_paths_paths} policies_http_transformations_postazn_paths_paths={policies_http_transformations_postazn_paths_paths}\n            policies_http_transformations_postazn_paths_paths_valid={policies_http_transformations_postazn_paths_paths_valid}\n            policies_http_transformations_postazn_paths_paths_invalid_text={policies_http_transformations_postazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_postaznAdd;\n"],"sourceRoot":""}