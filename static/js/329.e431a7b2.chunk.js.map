{"version":3,"sources":["content/servicesPage/servicescredentialAdd.js"],"names":["ServicescredentialsslcertificateDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServicescredentialsslcertificateAdd","ServicescredentialsslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_credential_ssl_certificaterowData","services_credential_ssl_certificate","handleClose","handleAdd","setservices_credential_ssl_certificate","doAdd","updateStyle","style","display","closeAdd","services_credential_ssl_certificateheaderData","header","key","services_credential_ssl_certificatehandleAdd","clearFields","i","length","eval","Services_credentialAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_React$useState3","_React$useState4","fetchedservices_credential_ssl_certificate","setFetchedservices_credential_ssl_certificate","useEffect","services_credential_ssl_certificateloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","services_credential_ssl_certificate_certificate","add","attrs","tempId","newId","wrap","_context","prev","next","certificate","window","services_credential_ssl_certificateediting","services_credential_ssl_certificaterowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_useState","_useState2","services_credential_name","setservices_credential_name","updateservices_credential_name","evt","target","_useState3","_useState4","services_credential_host","setservices_credential_host","updateservices_credential_host","_useState5","_useState6","services_credential_port","setservices_credential_port","updateservices_credential_port","_useState7","_useState8","services_credential_proxy","setservices_credential_proxy","updateservices_credential_proxy","_useState9","_useState10","services_credential_url_pattern","setservices_credential_url_pattern","updateservices_credential_url_pattern","_useState11","_useState12","services_credential_user_attribute","setservices_credential_user_attribute","updateservices_credential_user_attribute","_useState13","_useState14","services_credential_user_attribute_encoding","setservices_credential_user_attribute_encoding","updateservices_credential_user_attribute_encoding","_useState15","_useState16","services_credential_enc_key","setservices_credential_enc_key","updateservices_credential_enc_key","_useState17","_useState18","setservices_credential_ssl_certificate_certificate","updateservices_credential_ssl_certificate_certificate","validateField","setservices_credential_ssl_certificate_certificate_valid","setservices_credential_ssl_certificate_certificate_invalid_text","_useState19","_useState20","services_credential_ssl_certificate_certificate_valid","_useState21","_useState22","services_credential_ssl_certificate_certificate_invalid_text","_useState23","_useState24","services_credential_ssl_server_dn","setservices_credential_ssl_server_dn","updateservices_credential_ssl_server_dn","_useState25","_useState26","services_credential_ssl_sni","setservices_credential_ssl_sni","updateservices_credential_ssl_sni","_useState27","_useState28","services_credential_authentication_sso_endpoint","setservices_credential_authentication_sso_endpoint","updateservices_credential_authentication_sso_endpoint","_useState29","_useState30","services_credential_authentication_sso_client_id","setservices_credential_authentication_sso_client_id","updateservices_credential_authentication_sso_client_id","_useState31","_useState32","services_credential_authentication_sso_client_secret","setservices_credential_authentication_sso_client_secret","updateservices_credential_authentication_sso_client_secret","_useState33","_useState34","services_credential_authentication_sso_payload","setservices_credential_authentication_sso_payload","updateservices_credential_authentication_sso_payload","_useState35","_useState36","services_credential_authentication_access_token_token","setservices_credential_authentication_access_token_token","updateservices_credential_authentication_access_token_token","_useState37","_useState38","services_credential_authentication_ba_username","setservices_credential_authentication_ba_username","updateservices_credential_authentication_ba_username","_useState39","_useState40","services_credential_authentication_ba_password","setservices_credential_authentication_ba_password","updateservices_credential_authentication_ba_password","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_18__","defaultTab","vertical","overflow","tabFor","width","tabId","height","react_collapsible__WEBPACK_IMPORTED_MODULE_17___default","tabIndex","trigger","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_19__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","text","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","onClick","disabled","services_credential_name_valid","invalid","invalidText","services_credential_name_invalid_text","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","setData","editing","name","parentIdPrefix"],"mappings":"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","file":"static/js/329.e431a7b2.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicescredentialsslcertificateDeleteModal = lazy(() => import('./servicescredentialsslcertificateDeleteModal'));\nconst ServicescredentialsslcertificateAdd = lazy(() => import('./servicescredentialsslcertificateAdd'));\nconst ServicescredentialsslcertificateEdit = lazy(() => import('./servicescredentialsslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_credential_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_name\"] = document.getElementById(\"services_credential_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_host\"] = document.getElementById(\"services_credential_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_port_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_port\"] = document.getElementById(\"services_credential_port_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_proxy_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_proxy\"] = document.getElementById(\"services_credential_proxy_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_url_pattern_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_url_pattern\"] = document.getElementById(\"services_credential_url_pattern_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_user_attribute_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_user_attribute\"] = document.getElementById(\"services_credential_user_attribute_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_user_attribute_encoding_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_user_attribute_encoding\"] = document.getElementById(\"services_credential_user_attribute_encoding_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_enc_key_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_enc_key\"] = document.getElementById(\"services_credential_enc_key_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_ssl_server_dn\"] = document.getElementById(\"services_credential_ssl_server_dn_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_ssl_sni\"] = document.getElementById(\"services_credential_ssl_sni_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_sso_endpoint_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_sso_endpoint\"] = document.getElementById(\"services_credential_authentication_sso_endpoint_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_sso_client_id_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_sso_client_id\"] = document.getElementById(\"services_credential_authentication_sso_client_id_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_sso_client_secret_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_sso_client_secret\"] = document.getElementById(\"services_credential_authentication_sso_client_secret_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_sso_payload_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_sso_payload\"] = document.getElementById(\"services_credential_authentication_sso_payload_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_access_token_token_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_access_token_token\"] = document.getElementById(\"services_credential_authentication_access_token_token_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_ba_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_ba_username\"] = document.getElementById(\"services_credential_authentication_ba_username_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_credential_authentication_ba_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_credential_authentication_ba_password\"] = document.getElementById(\"services_credential_authentication_ba_password_id\" + idPrefix).value;\n    }\n    json[\"services_credential_ssl_certificate\"] = services_credential_ssl_certificaterowData.services_credential_ssl_certificate;\n      \n    loadGrid( json[\"services_credential_name\"], json[\"services_credential_host\"], json[\"services_credential_port\"], json[\"services_credential_proxy\"], json[\"services_credential_url_pattern\"], json[\"services_credential_user_attribute\"], json[\"services_credential_user_attribute_encoding\"], json[\"services_credential_enc_key\"], json[\"services_credential_ssl_server_dn\"], json[\"services_credential_ssl_sni\"], json[\"services_credential_authentication_sso_endpoint\"], json[\"services_credential_authentication_sso_client_id\"], json[\"services_credential_authentication_sso_client_secret\"], json[\"services_credential_authentication_sso_payload\"], json[\"services_credential_authentication_access_token_token\"], json[\"services_credential_authentication_ba_username\"], json[\"services_credential_authentication_ba_password\"], json[\"services_credential_ssl_certificate\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_credential_ssl_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_credential_name_id\").value = \"\";\n    document.getElementById(\"services_credential_host_id\").value = \"\";\n    document.getElementById(\"services_credential_port_id\").value = \"\";\n    document.getElementById(\"services_credential_proxy_id\").value = \"\";\n    document.getElementById(\"services_credential_url_pattern_id\").value = \"\";\n    document.getElementById(\"services_credential_user_attribute_id\").value = \"\";\n    document.getElementById(\"services_credential_user_attribute_encoding_id\").value = \"\";\n    document.getElementById(\"services_credential_enc_key_id\").value = \"\";\n    document.getElementById(\"services_credential_ssl_server_dn_id\").value = \"\";\n    document.getElementById(\"services_credential_ssl_sni_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_sso_endpoint_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_sso_client_id_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_sso_client_secret_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_sso_payload_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_access_token_token_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_ba_username_id\").value = \"\";\n    document.getElementById(\"services_credential_authentication_ba_password_id\").value = \"\";\n    services_credential_ssl_certificaterowData.services_credential_ssl_certificate = []\n    setservices_credential_ssl_certificate(services_credential_ssl_certificaterowData.services_credential_ssl_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservices_credentialPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_credential_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_credential_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_credential_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst services_credential_ssl_certificaterowData = {services_credential_ssl_certificate: []};\n\nconst services_credential_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_credential_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_credential_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicescredentialssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_credential_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Services_credentialAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_credential_ssl_certificate, setservices_credential_ssl_certificate] = React.useState([]);\n    const [fetchedservices_credential_ssl_certificate, setFetchedservices_credential_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_credential_ssl_certificateloadGrid();\n    }, [fetchedservices_credential_ssl_certificate]);\n\n    const services_credential_ssl_certificateloadGrid = React.useCallback(async (services_credential_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_credential_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < services_credential_ssl_certificaterowData.services_credential_ssl_certificate.length; i++) {\n              var tempId = ((services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i].certificate)?services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.services_credential_ssl_certificateediting != true && window.services_credential_ssl_certificateediting != \"true\") || tempId != window.services_credential_ssl_certificaterowId) {\n                attrs.push(services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i]);\n              }\n            }\n            var newId = ((services_credential_ssl_certificate_certificate)?services_credential_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: services_credential_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_credential_ssl_certificaterowData.services_credential_ssl_certificate.length; i++) {\n              if(services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i].certificate !== services_credential_ssl_certificate_certificate ) {\n                attrs.push(services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_credential_ssl_certificaterowData.services_credential_ssl_certificate;\n        }\n        services_credential_ssl_certificaterowData.services_credential_ssl_certificate = attrs;\n        const data = {services_credential_ssl_certificate: attrs};\n        setservices_credential_ssl_certificate(data.services_credential_ssl_certificate);\n\n        if(services_credential_ssl_certificate_certificate !== undefined && services_credential_ssl_certificate_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_credential_name, setservices_credential_name] = useState(''),\n    updateservices_credential_name = useCallback((evt) => setservices_credential_name(evt.target.value), []);\n\n    const [services_credential_host, setservices_credential_host] = useState(''),\n    updateservices_credential_host = useCallback((evt) => setservices_credential_host(evt.target.value), []);\n\n    const [services_credential_port, setservices_credential_port] = useState(''),\n    updateservices_credential_port = useCallback((evt) => setservices_credential_port(evt.target.value), []);\n\n    const [services_credential_proxy, setservices_credential_proxy] = useState(''),\n    updateservices_credential_proxy = useCallback((evt) => setservices_credential_proxy(evt.target.value), []);\n\n    const [services_credential_url_pattern, setservices_credential_url_pattern] = useState(''),\n    updateservices_credential_url_pattern = useCallback((evt) => setservices_credential_url_pattern(evt.target.value), []);\n\n    const [services_credential_user_attribute, setservices_credential_user_attribute] = useState('AZN_PRINCIPAL_ID'),\n    updateservices_credential_user_attribute = useCallback((evt) => setservices_credential_user_attribute(evt.target.value), []);\n\n    const [services_credential_user_attribute_encoding, setservices_credential_user_attribute_encoding] = useState('url'),\n    updateservices_credential_user_attribute_encoding = useCallback((evt) => setservices_credential_user_attribute_encoding(evt.target.value), []);\n\n    const [services_credential_enc_key, setservices_credential_enc_key] = useState(''),\n    updateservices_credential_enc_key = useCallback((evt) => setservices_credential_enc_key(evt.target.value), []);\n\n    const [services_credential_ssl_certificate_certificate, setservices_credential_ssl_certificate_certificate] = useState(''),\n    updateservices_credential_ssl_certificate_certificate = useCallback((evt) => {\n      setservices_credential_ssl_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_credential_ssl_certificaterowData.services_credential_ssl_certificate, setservices_credential_ssl_certificate_certificate_valid, setservices_credential_ssl_certificate_certificate_invalid_text, \"Services Credential Ssl Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [services_credential_ssl_certificate_certificate_valid, setservices_credential_ssl_certificate_certificate_valid] = useState(true);\n    const [services_credential_ssl_certificate_certificate_invalid_text, setservices_credential_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [services_credential_ssl_server_dn, setservices_credential_ssl_server_dn] = useState(''),\n    updateservices_credential_ssl_server_dn = useCallback((evt) => setservices_credential_ssl_server_dn(evt.target.value), []);\n\n    const [services_credential_ssl_sni, setservices_credential_ssl_sni] = useState(''),\n    updateservices_credential_ssl_sni = useCallback((evt) => setservices_credential_ssl_sni(evt.target.value), []);\n\n    const [services_credential_authentication_sso_endpoint, setservices_credential_authentication_sso_endpoint] = useState(''),\n    updateservices_credential_authentication_sso_endpoint = useCallback((evt) => setservices_credential_authentication_sso_endpoint(evt.target.value), []);\n\n    const [services_credential_authentication_sso_client_id, setservices_credential_authentication_sso_client_id] = useState(''),\n    updateservices_credential_authentication_sso_client_id = useCallback((evt) => setservices_credential_authentication_sso_client_id(evt.target.value), []);\n\n    const [services_credential_authentication_sso_client_secret, setservices_credential_authentication_sso_client_secret] = useState(''),\n    updateservices_credential_authentication_sso_client_secret = useCallback((evt) => setservices_credential_authentication_sso_client_secret(evt.target.value), []);\n\n    const [services_credential_authentication_sso_payload, setservices_credential_authentication_sso_payload] = useState('basic'),\n    updateservices_credential_authentication_sso_payload = useCallback((evt) => setservices_credential_authentication_sso_payload(evt.target.value), []);\n\n    const [services_credential_authentication_access_token_token, setservices_credential_authentication_access_token_token] = useState(''),\n    updateservices_credential_authentication_access_token_token = useCallback((evt) => setservices_credential_authentication_access_token_token(evt.target.value), []);\n\n    const [services_credential_authentication_ba_username, setservices_credential_authentication_ba_username] = useState(''),\n    updateservices_credential_authentication_ba_username = useCallback((evt) => setservices_credential_authentication_ba_username(evt.target.value), []);\n\n    const [services_credential_authentication_ba_password, setservices_credential_authentication_ba_password] = useState(''),\n    updateservices_credential_authentication_ba_password = useCallback((evt) => setservices_credential_authentication_ba_password(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_credential_ssl_certificaterowData.services_credential_ssl_certificate.length; i++) {\n        if(services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i].id === window.services_credential_ssl_certificaterowId) {\n        setservices_credential_ssl_certificate_certificate((services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i] !== undefined && services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i].certificate !== undefined )?services_credential_ssl_certificaterowData.services_credential_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservices_credentialPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_credential_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"authentication_tab\" + idPrefix}>Authentication</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"authentication_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_credential_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Credential : </span><br/>                  <h2>Authentication Settings</h2><hr/>\n                  <Collapsible tabIndex=\"0\" trigger=\"Controls how IAG will authenticate itself when communicating with the credential service\">\n                    <p>Controls how IAG will authenticate itself when communicating with the credential service. Only one of the following may be used at any time.</p>\n                  </Collapsible>\n\n                </div>\n                <div className={\"iag--simple-div services_credential_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n  <h3>Authentication</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n  <h3>SSO</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_authentication_sso_endpoint}  id={\"services_credential_authentication_sso_endpoint_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_sso_endpoint_tooltip_id\" + idPrefix}  labelText=\"Endpoint\" onChange={props.updateservices_credential_authentication_sso_endpoint}/>\n          <ReactTooltip id={\"services_credential_authentication_sso_endpoint_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The endpoint which will be called to obtain an access token which is used in requests to the credential service.<br/>The endpoint should conform to the OAuth client credential flow (OAuth 2.0 RFC 6749, section 4.4).<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_authentication_sso_client_id}  id={\"services_credential_authentication_sso_client_id_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_sso_client_id_tooltip_id\" + idPrefix}  labelText=\"Client ID\" onChange={props.updateservices_credential_authentication_sso_client_id}/>\n          <ReactTooltip id={\"services_credential_authentication_sso_client_id_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The client identifier to use during the OAuth client credential flow.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_authentication_sso_client_secret}  id={\"services_credential_authentication_sso_client_secret_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_sso_client_secret_tooltip_id\" + idPrefix}  labelText=\"Client Secret\" onChange={props.updateservices_credential_authentication_sso_client_secret}/>\n          <ReactTooltip id={\"services_credential_authentication_sso_client_secret_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The client identifier to use during the OAuth client credential flow.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n                <Select\n                  value={props.services_credential_authentication_sso_payload}\n                   id={\"services_credential_authentication_sso_payload_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_sso_payload_tooltip_id\" + idPrefix}                   labelText=\"Payload\"\n                  onChange={props.updateservices_credential_authentication_sso_payload}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"basic\" value=\"basic\" />\n                  <SelectItem text=\"form\" value=\"form\" />\n                </Select>\n          <ReactTooltip id={\"services_credential_authentication_sso_payload_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Specifies how the client id and secret will be posted to the authentication endpoint.<br/>  - If this value is `form`, the client id and secret will be included in forms POST data.<br/>  - If this value is `basic`, a basic authentication header will be constructed using the client id and secret.<br/></div></ReactTooltip>\n                </div>\n\n                </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n  <h3>Access Token</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_authentication_access_token_token}  id={\"services_credential_authentication_access_token_token_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_access_token_token_tooltip_id\" + idPrefix}  labelText=\"Token\" onChange={props.updateservices_credential_authentication_access_token_token}/>\n          <ReactTooltip id={\"services_credential_authentication_access_token_token_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The literal access token that will be passed as a bearer token.<br/>Alternatively, if surrounded by &#123;}, this field can name a credential attribute for which the value of will be used as a bearer token.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n  <h3>Basic Authentication</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_authentication_ba_username}  id={\"services_credential_authentication_ba_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_ba_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateservices_credential_authentication_ba_username}/>\n          <ReactTooltip id={\"services_credential_authentication_ba_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The username to be used to perform basic authentication to the credential service.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_authentication_ba_password}  id={\"services_credential_authentication_ba_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_authentication_ba_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateservices_credential_authentication_ba_password}/>\n          <ReactTooltip id={\"services_credential_authentication_ba_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password to be used to perform basic authentication to the credential service.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_credential_name || !props.services_credential_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_credential_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Credential : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_credential_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_credential_name_valid}  invalidText={props.services_credential_name_invalid_text}  value={props.services_credential_name}  id={\"services_credential_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_credential_name}/>\n          <ReactTooltip id={\"services_credential_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this credential service.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_host}  id={\"services_credential_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateservices_credential_host}/>\n          <ReactTooltip id={\"services_credential_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The hostname of the endpoint where the credentials will be retrieved from.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_port}  id={\"services_credential_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_port_tooltip_id\" + idPrefix}  labelText=\"Port\" onChange={props.updateservices_credential_port}/>\n          <ReactTooltip id={\"services_credential_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port of the endpoint where the credentials will be retrieved from.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_proxy}  id={\"services_credential_proxy_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_proxy_tooltip_id\" + idPrefix}  labelText=\"Proxy\" onChange={props.updateservices_credential_proxy}/>\n          <ReactTooltip id={\"services_credential_proxy_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The proxy server which will be used when connecting to the credential service. The configuration entry should be of the form: `&lt;server&gt;:&lt;port&gt;`<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_url_pattern}  id={\"services_credential_url_pattern_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_url_pattern_tooltip_id\" + idPrefix}  labelText=\"URL Pattern\" onChange={props.updateservices_credential_url_pattern}/>\n          <ReactTooltip id={\"services_credential_url_pattern_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The path of the endpoint where the credentials will be retrieved from. This must contain the &#123;user} and &#123;resource} macros. When communicating with the credential service, IAG will substitute `&#123;resource}` for the resource name provided in the configuration which refers to this credential service.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_user_attribute}  id={\"services_credential_user_attribute_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_user_attribute_tooltip_id\" + idPrefix}  labelText=\"User Attribute\" onChange={props.updateservices_credential_user_attribute}/>\n          <ReactTooltip id={\"services_credential_user_attribute_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the credential attribute which is used to populate the &#123;user} macro in the URL used when communicating with the credential service.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n                <Select\n                  value={props.services_credential_user_attribute_encoding}\n                   id={\"services_credential_user_attribute_encoding_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_user_attribute_encoding_tooltip_id\" + idPrefix}                   labelText=\"User Attribute Encoding\"\n                  onChange={props.updateservices_credential_user_attribute_encoding}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"url\" value=\"url\" />\n                  <SelectItem text=\"base64url\" value=\"base64url\" />\n                </Select>\n          <ReactTooltip id={\"services_credential_user_attribute_encoding_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The type of encoding to perform on the user_attribute for inclusion in the URL to communicate with the credential service.<br/>  - If this value is `url`, the user attribute value will be URL Encoded.<br/>  - If this value is `base64url`, the user attribute value will be converted to lower case and Base64 Encoded for URL.<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_enc_key}  id={\"services_credential_enc_key_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_enc_key_tooltip_id\" + idPrefix}  labelText=\"Encryption Key\" onChange={props.updateservices_credential_enc_key}/>\n          <ReactTooltip id={\"services_credential_enc_key_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The key which will be used to encrypt and decrypt credential data. This key should be an RSA or ECDSA key for which the private and public parts are available.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_credential_name || !props.services_credential_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_credential_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Credential : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the credential service connection.\n                </div>\n                <div className={\"iag--simple-div services_credential_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_credential_ssl_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>PEM based personal certificate files which will be used when communicating with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"services_credential_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_credential_div\" + idPrefix}>\n                    <DataTable id={\"services_credential_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={services_credential_ssl_certificateheaderData}\n                        rows={services_credential_ssl_certificaterowData.services_credential_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_credential_ssl_certificatehandleAdd(idPrefix, [setservices_credential_ssl_certificate_certificate(''),    setservices_credential_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicescredentialsslcertificateDeleteModal row={row} loadGrid={services_credential_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicescredentialsslcertificateEdit  data={services_credential_ssl_certificaterowData.services_credential_ssl_certificate} setData={setDataMain} row={row} loadGrid={services_credential_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"services_credential_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_credential_ssl_certificate_certificate={updateservices_credential_ssl_certificate_certificate} services_credential_ssl_certificate_certificate={services_credential_ssl_certificate_certificate}\n            services_credential_ssl_certificate_certificate_valid={services_credential_ssl_certificate_certificate_valid}\n            services_credential_ssl_certificate_certificate_invalid_text={services_credential_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_ssl_server_dn}  id={\"services_credential_ssl_server_dn_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateservices_credential_ssl_server_dn}/>\n          <ReactTooltip id={\"services_credential_ssl_server_dn_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Specifies the accepted DN of the certificate presented by the credential service. If this entry is empty, any DN will be accepted.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n          <TextInput  value={props.services_credential_ssl_sni}  id={\"services_credential_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_credential_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateservices_credential_ssl_sni}/>\n          <ReactTooltip id={\"services_credential_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name (SNI) which will be indicated when establishing a connection to the credential service. If this entry is empty, no name will be indicated.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_credential_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_credential_name || !props.services_credential_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicescredentialsslcertificateAdd loadGrid={services_credential_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_credential_ssl_certificate_certificate={updateservices_credential_ssl_certificate_certificate} services_credential_ssl_certificate_certificate={services_credential_ssl_certificate_certificate}\n            services_credential_ssl_certificate_certificate_valid={services_credential_ssl_certificate_certificate_valid}\n            services_credential_ssl_certificate_certificate_invalid_text={services_credential_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicescredentialsslcertificateEdit  loadGrid={services_credential_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"services_credential_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_credential_ssl_certificate_certificate={updateservices_credential_ssl_certificate_certificate} services_credential_ssl_certificate_certificate={services_credential_ssl_certificate_certificate}\n            services_credential_ssl_certificate_certificate_valid={services_credential_ssl_certificate_certificate_valid}\n            services_credential_ssl_certificate_certificate_invalid_text={services_credential_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Services_credentialAdd;\n"],"sourceRoot":""}