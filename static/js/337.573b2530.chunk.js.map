{"version":3,"sources":["content/servicesPage/serviceskerberosrealmsAdd.js"],"names":["ServiceskerberosrealmspropertiesDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServiceskerberosrealmspropertiesAdd","ServiceskerberosrealmspropertiesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_kerberos_realms_propertiesrowData","services_kerberos_realms_properties","handleClose","handleAdd","setservices_kerberos_realms_properties","doAdd","updateStyle","style","display","closeAdd","services_kerberos_realms_propertiesheaderData","header","key","services_kerberos_realms_propertieshandleAdd","clearFields","i","length","eval","Serviceskerberos_realmsAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_React$useState3","_React$useState4","fetchedservices_kerberos_realms_properties","setFetchedservices_kerberos_realms_properties","useEffect","services_kerberos_realms_propertiesloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","services_kerberos_realms_properties_name","services_kerberos_realms_properties_value","add","attrs","tempId","newId","wrap","_context","prev","next","name","window","services_kerberos_realms_propertiesediting","services_kerberos_realms_propertiesrowId","push","id","console","log","abrupt","stop","_x","_x2","_x3","apply","this","arguments","_useState","_useState2","services_kerberos_realms_name","setservices_kerberos_realms_name","updateservices_kerberos_realms_name","evt","target","_useState3","_useState4","services_kerberos_realms_kdc","setservices_kerberos_realms_kdc","updateservices_kerberos_realms_kdc","_useState5","_useState6","setservices_kerberos_realms_properties_name","updateservices_kerberos_realms_properties_name","validateField","setservices_kerberos_realms_properties_name_valid","setservices_kerberos_realms_properties_name_invalid_text","_useState7","_useState8","services_kerberos_realms_properties_name_valid","_useState9","_useState10","services_kerberos_realms_properties_name_invalid_text","_useState11","_useState12","setservices_kerberos_realms_properties_value","updateservices_kerberos_realms_properties_value","_useState13","_useState14","services_kerberos_realms_hostname","setservices_kerberos_realms_hostname","updateservices_kerberos_realms_hostname","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_16__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_3__","invalid","services_kerberos_realms_name_valid","invalidText","services_kerberos_realms_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_17__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","onClick","disabled","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","react__WEBPACK_IMPORTED_MODULE_2__","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/337.573b2530.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServiceskerberosrealmspropertiesDeleteModal = lazy(() => import('./serviceskerberosrealmspropertiesDeleteModal'));\nconst ServiceskerberosrealmspropertiesAdd = lazy(() => import('./serviceskerberosrealmspropertiesAdd'));\nconst ServiceskerberosrealmspropertiesEdit = lazy(() => import('./serviceskerberosrealmspropertiesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_realms_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_name\"] = document.getElementById(\"services_kerberos_realms_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_kdc_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_kdc\"] = document.getElementById(\"services_kerberos_realms_kdc_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_hostname_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_hostname\"] = document.getElementById(\"services_kerberos_realms_hostname_id\" + idPrefix).value;\n    }\n    json[\"services_kerberos_realms_properties\"] = services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties;\n      \n    loadGrid( json[\"services_kerberos_realms_name\"], json[\"services_kerberos_realms_kdc\"], json[\"services_kerberos_realms_hostname\"], json[\"services_kerberos_realms_properties\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_kerberos_realms_properties, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_kerberos_realms_name_id\").value = \"\";\n    document.getElementById(\"services_kerberos_realms_kdc_id\").value = \"\";\n    document.getElementById(\"services_kerberos_realms_hostname_id\").value = \"\";\n    services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties = []\n    setservices_kerberos_realms_properties(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserviceskerberos_realmsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_realms_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_realms_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_kerberos_realms_propertiesheaderData = [\n    {\n    header: 'Name',\n    key: 'name',\n  },\n{\n    header: 'Value',\n    key: 'value',\n  },\n\n];\n\nconst services_kerberos_realms_propertiesrowData = {services_kerberos_realms_properties: []};\n\nconst services_kerberos_realms_propertieshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_kerberos_realms_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserviceskerberosrealms_propertiesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_kerberos_realms_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serviceskerberos_realmsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_kerberos_realms_properties, setservices_kerberos_realms_properties] = React.useState([]);\n    const [fetchedservices_kerberos_realms_properties, setFetchedservices_kerberos_realms_properties] = React.useState(false);\n\n    React.useEffect(() => {\n      services_kerberos_realms_propertiesloadGrid();\n    }, [fetchedservices_kerberos_realms_properties]);\n\n    const services_kerberos_realms_propertiesloadGrid = React.useCallback(async (services_kerberos_realms_properties_name, services_kerberos_realms_properties_value, add) => {\n      try {\n        var attrs = [];\n        if(services_kerberos_realms_properties_name) {\n          if(add) {\n            for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n              var tempId = ((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name)?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name:\"\") + \"\";\n              if((window.services_kerberos_realms_propertiesediting != true && window.services_kerberos_realms_propertiesediting != \"true\") || tempId != window.services_kerberos_realms_propertiesrowId) {\n                attrs.push(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i]);\n              }\n            }\n            var newId = ((services_kerberos_realms_properties_name)?services_kerberos_realms_properties_name:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              name: services_kerberos_realms_properties_name,\nvalue: services_kerberos_realms_properties_value,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n              if(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name !== services_kerberos_realms_properties_name ) {\n                attrs.push(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties;\n        }\n        services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties = attrs;\n        const data = {services_kerberos_realms_properties: attrs};\n        setservices_kerberos_realms_properties(data.services_kerberos_realms_properties);\n\n        if(services_kerberos_realms_properties_name !== undefined && services_kerberos_realms_properties_name !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_kerberos_realms_name, setservices_kerberos_realms_name] = useState(''),\n    updateservices_kerberos_realms_name = useCallback((evt) => setservices_kerberos_realms_name(evt.target.value), []);\n\n    const [services_kerberos_realms_kdc, setservices_kerberos_realms_kdc] = useState(''),\n    updateservices_kerberos_realms_kdc = useCallback((evt) => setservices_kerberos_realms_kdc(evt.target.value), []);\n\n    const [services_kerberos_realms_properties_name, setservices_kerberos_realms_properties_name] = useState(''),\n    updateservices_kerberos_realms_properties_name = useCallback((evt) => {\n      setservices_kerberos_realms_properties_name(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties, setservices_kerberos_realms_properties_name_valid, setservices_kerberos_realms_properties_name_invalid_text, \"Services Kerberos Realms Properties\", \"name\", tempId);\n    }, []);\n\n    const [services_kerberos_realms_properties_name_valid, setservices_kerberos_realms_properties_name_valid] = useState(true);\n    const [services_kerberos_realms_properties_name_invalid_text, setservices_kerberos_realms_properties_name_invalid_text] = useState(\"\");\n\n\n    const [services_kerberos_realms_properties_value, setservices_kerberos_realms_properties_value] = useState(''),\n    updateservices_kerberos_realms_properties_value = useCallback((evt) => setservices_kerberos_realms_properties_value(evt.target.value), []);\n\n    const [services_kerberos_realms_hostname, setservices_kerberos_realms_hostname] = useState(''),\n    updateservices_kerberos_realms_hostname = useCallback((evt) => setservices_kerberos_realms_hostname(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties.length; i++) {\n        if(services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].id === window.services_kerberos_realms_propertiesrowId) {\n        setservices_kerberos_realms_properties_name((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i] !== undefined && services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name !== undefined )?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].name:\"\");\n        setservices_kerberos_realms_properties_value((services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i] !== undefined && services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].value !== undefined )?services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties[i].value:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserviceskerberos_realmsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_kerberos_realms_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"properties_tab\" + idPrefix}>Properties</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n  <h3>Realms</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_kerberos_realms_name_valid}  invalidText={props.services_kerberos_realms_name_invalid_text}  value={props.services_kerberos_realms_name}  id={\"services_kerberos_realms_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_kerberos_realms_name}/>\n          <ReactTooltip id={\"services_kerberos_realms_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the Kerberos Realm being configured.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_kdc}  id={\"services_kerberos_realms_kdc_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_kdc_tooltip_id\" + idPrefix}  labelText=\"KDC\" onChange={props.updateservices_kerberos_realms_kdc}/>\n          <ReactTooltip id={\"services_kerberos_realms_kdc_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or address of a host running a KDC for that realm. An optional port number, separated from the hostname by a colon, may be included.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_hostname}  id={\"services_kerberos_realms_hostname_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_hostname_tooltip_id\" + idPrefix}  labelText=\"Hostname\" onChange={props.updateservices_kerberos_realms_hostname}/>\n          <ReactTooltip id={\"services_kerberos_realms_hostname_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The hostname for this realm.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_name || !props.services_kerberos_realms_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"properties_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms : </span><br/>                  <h2>Properties Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_tooltip_id\" + idPrefix} >Properties</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_kerberos_realms_properties_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Advanced additional properties to be added to the Realm configuration. These properties correspond to the properties in the [realms] &lt;realm name&gt; section of krb5.conf.<br/></div></ReactTooltip>\n\n                <div id={\"services_kerberos_realms_propertiesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <DataTable id={\"services_kerberos_realms_propertiesTable\" + idPrefix} isSortable\n                        headers={services_kerberos_realms_propertiesheaderData}\n                        rows={services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_kerberos_realms_propertieshandleAdd(idPrefix, [setservices_kerberos_realms_properties_name(''),    setservices_kerberos_realms_properties_name_valid(true),    setservices_kerberos_realms_properties_value(''),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberosrealmspropertiesDeleteModal row={row} loadGrid={services_kerberos_realms_propertiesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServiceskerberosrealmspropertiesEdit  data={services_kerberos_realms_propertiesrowData.services_kerberos_realms_properties} setData={setDataMain} row={row} loadGrid={services_kerberos_realms_propertiesloadGrid} dataLoad={dataLoad} editing={true} name={\"services_kerberos_realms_properties\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_name || !props.services_kerberos_realms_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberosrealmspropertiesAdd loadGrid={services_kerberos_realms_propertiesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServiceskerberosrealmspropertiesEdit  loadGrid={services_kerberos_realms_propertiesloadGrid} dataLoad={dataLoad} name={\"services_kerberos_realms_properties\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_kerberos_realms_properties_name={updateservices_kerberos_realms_properties_name} services_kerberos_realms_properties_name={services_kerberos_realms_properties_name}\n            services_kerberos_realms_properties_name_valid={services_kerberos_realms_properties_name_valid}\n            services_kerberos_realms_properties_name_invalid_text={services_kerberos_realms_properties_name_invalid_text}\n            updateservices_kerberos_realms_properties_value={updateservices_kerberos_realms_properties_value} services_kerberos_realms_properties_value={services_kerberos_realms_properties_value}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serviceskerberos_realmsAdd;\n"],"sourceRoot":""}