{"version":3,"sources":["content/policiesPage/policiesauthorizationAdd.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PoliciesauthorizationpathsDeleteModal","lazy","all","__webpack_require__","e","bind","PoliciesauthorizationpathsAdd","PoliciesauthorizationpathsEdit","PoliciesauthorizationmethodsDeleteModal","PoliciesauthorizationmethodsAdd","PoliciesauthorizationmethodsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","json","document","getElementById","endsWith","policies_authorization_pathsrowData","policies_authorization_paths","policies_authorization_methodsrowData","policies_authorization_methods","handleClose","handleAdd","setpolicies_authorization_paths","setpolicies_authorization_methods","doAdd","updateStyle","style","display","closeAdd","policies_authorization_pathsheaderData","header","policies_authorization_pathshandleAdd","clearFields","eval","policies_authorization_methodsheaderData","policies_authorization_methodshandleAdd","Policies_authorizationAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedpolicies_authorization_paths","setFetchedpolicies_authorization_paths","useEffect","policies_authorization_pathsloadGrid","useCallback","_ref","_asyncToGenerator","_callee","policies_authorization_paths_paths","add","attrs","tempId","newId","_context","paths","window","policies_authorization_pathsediting","policies_authorization_pathsrowId","id","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedpolicies_authorization_methods","setFetchedpolicies_authorization_methods","policies_authorization_methodsloadGrid","_ref2","_callee2","policies_authorization_methods_methods","_context2","methods","policies_authorization_methodsediting","policies_authorization_methodsrowId","_x3","_x4","_useState","_useState2","policies_authorization_name","setpolicies_authorization_name","updatepolicies_authorization_name","evt","target","_useState3","_useState4","policies_authorization_host","setpolicies_authorization_host","updatepolicies_authorization_host","_useState5","_useState6","setpolicies_authorization_paths_paths","updatepolicies_authorization_paths_paths","validateField","setpolicies_authorization_paths_paths_valid","setpolicies_authorization_paths_paths_invalid_text","_useState7","_useState8","policies_authorization_paths_paths_valid","_useState9","_useState10","policies_authorization_paths_paths_invalid_text","_useState11","_useState12","setpolicies_authorization_methods_methods","updatepolicies_authorization_methods_methods","setpolicies_authorization_methods_methods_valid","setpolicies_authorization_methods_methods_invalid_text","_useState13","_useState14","policies_authorization_methods_methods_valid","_useState15","_useState16","policies_authorization_methods_methods_invalid_text","_useState17","_useState18","policies_authorization_rule","setpolicies_authorization_rule","updatepolicies_authorization_rule","_useState19","_useState20","policies_authorization_action","setpolicies_authorization_action","updatepolicies_authorization_action","_useState21","_useState22","policies_authorization_obligation_oidc_acr_values","setpolicies_authorization_obligation_oidc_acr_values","updatepolicies_authorization_obligation_oidc_acr_values","_useState23","_useState24","policies_authorization_obligation_oidc_prompt","setpolicies_authorization_obligation_oidc_prompt","updatepolicies_authorization_obligation_oidc_prompt","_useState25","_useState26","policies_authorization_obligation_oidc_max_age","setpolicies_authorization_obligation_oidc_max_age","updatepolicies_authorization_obligation_oidc_max_age","_useState27","_useState28","policies_authorization_obligation_redirect_url","setpolicies_authorization_obligation_redirect_url","updatepolicies_authorization_obligation_redirect_url","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","Collapsible","tabIndex","trigger","textAlign","border","borderRight","padding","paddingLeft","marginLeft","marginBottom","TextInput","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","NumberInput","label","Button","onClick","disabled","policies_authorization_name_valid","invalid","invalidText","policies_authorization_name_invalid_text","Select","SelectItem","text","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","_ref4"],"mappings":"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","file":"static/js/275.f9246205.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PoliciesauthorizationpathsDeleteModal = lazy(() => import('./policiesauthorizationpathsDeleteModal'));\nconst PoliciesauthorizationpathsAdd = lazy(() => import('./policiesauthorizationpathsAdd'));\nconst PoliciesauthorizationpathsEdit = lazy(() => import('./policiesauthorizationpathsEdit'));\nconst PoliciesauthorizationmethodsDeleteModal = lazy(() => import('./policiesauthorizationmethodsDeleteModal'));\nconst PoliciesauthorizationmethodsAdd = lazy(() => import('./policiesauthorizationmethodsAdd'));\nconst PoliciesauthorizationmethodsEdit = lazy(() => import('./policiesauthorizationmethodsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_authorization_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_name\"] = document.getElementById(\"policies_authorization_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_host\"] = document.getElementById(\"policies_authorization_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_rule\"] = document.getElementById(\"policies_authorization_rule_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_action_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_action\"] = document.getElementById(\"policies_authorization_action_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_obligation_oidc_acr_values_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_obligation_oidc_acr_values\"] = document.getElementById(\"policies_authorization_obligation_oidc_acr_values_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_authorization_obligation_oidc_prompt_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_obligation_oidc_prompt\"] = document.getElementById(\"policies_authorization_obligation_oidc_prompt_id\" + idPrefix).value;\n    }\n    json[\"policies_authorization_obligation_oidc_max_age\"] = document.getElementById(\"policies_authorization_obligation_oidc_max_age_id\" + idPrefix).value;\n    if(document.getElementById(\"policies_authorization_obligation_redirect_url_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_authorization_obligation_redirect_url\"] = document.getElementById(\"policies_authorization_obligation_redirect_url_id\" + idPrefix).value;\n    }\n    json[\"policies_authorization_paths\"] = policies_authorization_pathsrowData.policies_authorization_paths;\n    json[\"policies_authorization_methods\"] = policies_authorization_methodsrowData.policies_authorization_methods;\n      \n    loadGrid( json[\"policies_authorization_name\"], json[\"policies_authorization_host\"], json[\"policies_authorization_rule\"], json[\"policies_authorization_action\"], json[\"policies_authorization_obligation_oidc_acr_values\"], json[\"policies_authorization_obligation_oidc_prompt\"], json[\"policies_authorization_obligation_oidc_max_age\"], json[\"policies_authorization_obligation_redirect_url\"], json[\"policies_authorization_paths\"], json[\"policies_authorization_methods\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_authorization_paths, setpolicies_authorization_methods, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_authorization_name_id\").value = \"\";\n    document.getElementById(\"policies_authorization_host_id\").value = \"\";\n    document.getElementById(\"policies_authorization_rule_id\").value = \"\";\n    document.getElementById(\"policies_authorization_action_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_oidc_acr_values_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_oidc_prompt_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_oidc_max_age_id\").value = \"\";\n    document.getElementById(\"policies_authorization_obligation_redirect_url_id\").value = \"\";\n    policies_authorization_pathsrowData.policies_authorization_paths = []\n    setpolicies_authorization_paths(policies_authorization_pathsrowData.policies_authorization_paths);\n\n    policies_authorization_methodsrowData.policies_authorization_methods = []\n    setpolicies_authorization_methods(policies_authorization_methodsrowData.policies_authorization_methods);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicies_authorizationPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_authorization_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_authorization_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_authorization_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_authorization_pathsrowData = {policies_authorization_paths: []};\n\nconst policies_authorization_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_authorization_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_authorization_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciesauthorization_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_authorization_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst policies_authorization_methodsheaderData = [\n    {\n    header: 'Method',\n    key: 'methods',\n  },\n\n];\n\nconst policies_authorization_methodsrowData = {policies_authorization_methods: []};\n\nconst policies_authorization_methodshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_authorization_methods_methods_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_authorization_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpoliciesauthorization_methodsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_authorization_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policies_authorizationAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_authorization_paths, setpolicies_authorization_paths] = React.useState([]);\n    const [fetchedpolicies_authorization_paths, setFetchedpolicies_authorization_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_authorization_pathsloadGrid();\n    }, [fetchedpolicies_authorization_paths]);\n\n    const policies_authorization_pathsloadGrid = React.useCallback(async (policies_authorization_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_authorization_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_authorization_pathsrowData.policies_authorization_paths.length; i++) {\n              var tempId = ((policies_authorization_pathsrowData.policies_authorization_paths[i].paths)?policies_authorization_pathsrowData.policies_authorization_paths[i].paths:\"\") + \"\";\n              if((window.policies_authorization_pathsediting != true && window.policies_authorization_pathsediting != \"true\") || tempId != window.policies_authorization_pathsrowId) {\n                attrs.push(policies_authorization_pathsrowData.policies_authorization_paths[i]);\n              }\n            }\n            var newId = ((policies_authorization_paths_paths)?policies_authorization_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_authorization_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_authorization_pathsrowData.policies_authorization_paths.length; i++) {\n              if(policies_authorization_pathsrowData.policies_authorization_paths[i].paths !== policies_authorization_paths_paths ) {\n                attrs.push(policies_authorization_pathsrowData.policies_authorization_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_authorization_pathsrowData.policies_authorization_paths;\n        }\n        policies_authorization_pathsrowData.policies_authorization_paths = attrs;\n        const data = {policies_authorization_paths: attrs};\n        setpolicies_authorization_paths(data.policies_authorization_paths);\n\n        if(policies_authorization_paths_paths !== undefined && policies_authorization_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [policies_authorization_methods, setpolicies_authorization_methods] = React.useState([]);\n    const [fetchedpolicies_authorization_methods, setFetchedpolicies_authorization_methods] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_authorization_methodsloadGrid();\n    }, [fetchedpolicies_authorization_methods]);\n\n    const policies_authorization_methodsloadGrid = React.useCallback(async (policies_authorization_methods_methods, add) => {\n      try {\n        var attrs = [];\n        if(policies_authorization_methods_methods) {\n          if(add) {\n            for(var i = 0; i < policies_authorization_methodsrowData.policies_authorization_methods.length; i++) {\n              var tempId = ((policies_authorization_methodsrowData.policies_authorization_methods[i].methods)?policies_authorization_methodsrowData.policies_authorization_methods[i].methods:\"\") + \"\";\n              if((window.policies_authorization_methodsediting != true && window.policies_authorization_methodsediting != \"true\") || tempId != window.policies_authorization_methodsrowId) {\n                attrs.push(policies_authorization_methodsrowData.policies_authorization_methods[i]);\n              }\n            }\n            var newId = ((policies_authorization_methods_methods)?policies_authorization_methods_methods:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              methods: policies_authorization_methods_methods,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_authorization_methodsrowData.policies_authorization_methods.length; i++) {\n              if(policies_authorization_methodsrowData.policies_authorization_methods[i].methods !== policies_authorization_methods_methods ) {\n                attrs.push(policies_authorization_methodsrowData.policies_authorization_methods[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_authorization_methodsrowData.policies_authorization_methods;\n        }\n        policies_authorization_methodsrowData.policies_authorization_methods = attrs;\n        const data = {policies_authorization_methods: attrs};\n        setpolicies_authorization_methods(data.policies_authorization_methods);\n\n        if(policies_authorization_methods_methods !== undefined && policies_authorization_methods_methods !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_authorization_name, setpolicies_authorization_name] = useState(''),\n    updatepolicies_authorization_name = useCallback((evt) => setpolicies_authorization_name(evt.target.value), []);\n\n    const [policies_authorization_host, setpolicies_authorization_host] = useState(''),\n    updatepolicies_authorization_host = useCallback((evt) => setpolicies_authorization_host(evt.target.value), []);\n\n    const [policies_authorization_paths_paths, setpolicies_authorization_paths_paths] = useState(''),\n    updatepolicies_authorization_paths_paths = useCallback((evt) => {\n      setpolicies_authorization_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_authorization_pathsrowData.policies_authorization_paths, setpolicies_authorization_paths_paths_valid, setpolicies_authorization_paths_paths_invalid_text, \"Policies Authorization Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_authorization_paths_paths_valid, setpolicies_authorization_paths_paths_valid] = useState(true);\n    const [policies_authorization_paths_paths_invalid_text, setpolicies_authorization_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_authorization_methods_methods, setpolicies_authorization_methods_methods] = useState(''),\n    updatepolicies_authorization_methods_methods = useCallback((evt) => {\n      setpolicies_authorization_methods_methods(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_authorization_methodsrowData.policies_authorization_methods, setpolicies_authorization_methods_methods_valid, setpolicies_authorization_methods_methods_invalid_text, \"Policies Authorization Methods\", \"methods\", tempId);\n    }, []);\n\n    const [policies_authorization_methods_methods_valid, setpolicies_authorization_methods_methods_valid] = useState(true);\n    const [policies_authorization_methods_methods_invalid_text, setpolicies_authorization_methods_methods_invalid_text] = useState(\"\");\n\n\n    const [policies_authorization_rule, setpolicies_authorization_rule] = useState(''),\n    updatepolicies_authorization_rule = useCallback((evt) => setpolicies_authorization_rule(evt.target.value), []);\n\n    const [policies_authorization_action, setpolicies_authorization_action] = useState(''),\n    updatepolicies_authorization_action = useCallback((evt) => setpolicies_authorization_action(evt.target.value), []);\n\n    const [policies_authorization_obligation_oidc_acr_values, setpolicies_authorization_obligation_oidc_acr_values] = useState(''),\n    updatepolicies_authorization_obligation_oidc_acr_values = useCallback((evt) => setpolicies_authorization_obligation_oidc_acr_values(evt.target.value), []);\n\n    const [policies_authorization_obligation_oidc_prompt, setpolicies_authorization_obligation_oidc_prompt] = useState(''),\n    updatepolicies_authorization_obligation_oidc_prompt = useCallback((evt) => setpolicies_authorization_obligation_oidc_prompt(evt.target.value), []);\n\n    const [policies_authorization_obligation_oidc_max_age, setpolicies_authorization_obligation_oidc_max_age] = useState(0),\n    updatepolicies_authorization_obligation_oidc_max_age = useCallback((evt) => {}, []);\n\n    const [policies_authorization_obligation_redirect_url, setpolicies_authorization_obligation_redirect_url] = useState(''),\n    updatepolicies_authorization_obligation_redirect_url = useCallback((evt) => setpolicies_authorization_obligation_redirect_url(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_authorization_pathsrowData.policies_authorization_paths.length; i++) {\n        if(policies_authorization_pathsrowData.policies_authorization_paths[i].id === window.policies_authorization_pathsrowId) {\n        setpolicies_authorization_paths_paths((policies_authorization_pathsrowData.policies_authorization_paths[i] !== undefined && policies_authorization_pathsrowData.policies_authorization_paths[i].paths !== undefined )?policies_authorization_pathsrowData.policies_authorization_paths[i].paths:\"\");\n        }\n      }\n\n      for(var i = 0; i < policies_authorization_methodsrowData.policies_authorization_methods.length; i++) {\n        if(policies_authorization_methodsrowData.policies_authorization_methods[i].id === window.policies_authorization_methodsrowId) {\n        setpolicies_authorization_methods_methods((policies_authorization_methodsrowData.policies_authorization_methods[i] !== undefined && policies_authorization_methodsrowData.policies_authorization_methods[i].methods !== undefined )?policies_authorization_methodsrowData.policies_authorization_methods[i].methods:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicies_authorizationPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_authorization_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"methods_tab\" + idPrefix}>Methods</Tab>\n                <Tab tabFor={\"obligation_tab\" + idPrefix}>Obligation</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"obligation_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>Obligation Settings</h2><hr/>\n                  <Collapsible tabIndex=\"0\" trigger=\"If the action for this rule is obligate or reauth, this obligation can be used to indicate that authentication should take place again with specific parameters\">\n                    <p>If the action for this rule is obligate or reauth, this obligation can be used to indicate that authentication should take place again with specific parameters.<br/><br/>This parameter is required for policies with the 'obligation' action, and is optional for policies with the 'reauth' action.<br/><br/>Note that a policy can only contain one obligated action, that is, this entry must contain `oidc` or `redirect_url`.<br/><br/><h4> Redirect URL Macros</h4><br/>The following macros are available:<br/><br/><table style={{textAlign:'left', border:'1px solid black'}}><tbody><tr style={{textAlign:'left', border:'1px solid black'}}><th style={{borderRight:'1px solid black', padding: '10px'}}>Macro </th><th style={{borderRight:'1px solid black', padding: '10px'}}> Value</th></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%USERNAME% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The current logged in user, or `unauthenticated` for unauthenticated users.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%METHOD% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The HTTP method of the request which matched this policy.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%URL% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The URL the client was attempting to access when this policy was matched.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%HOSTNAME% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The hostname (HTTP Host header) of the client request which matched this policy.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%PROTOCOL% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The protocol (`http` or `https`) which was used</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%CREDATTR&#123;&lt;attribute_name&gt;}% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The value of the credential attribute named by `&lt;attribute_name&gt;`.</td></tr><tr><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}>%HTTPHDR&#123;&lt;header_name&gt;}% </td><td style={{borderRight:'1px solid black', paddingLeft: '10px'}}> The value of the HTTP header from the client request named by `&lt;header_name&gt;`.</td></tr></tbody></table></p>\n                  </Collapsible>\n\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3>Obligation</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3>OIDC</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_obligation_oidc_acr_values}  id={\"policies_authorization_obligation_oidc_acr_values_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_oidc_acr_values_tooltip_id\" + idPrefix}  labelText=\"acr Values\" onChange={props.updatepolicies_authorization_obligation_oidc_acr_values}/>\n          <ReactTooltip id={\"policies_authorization_obligation_oidc_acr_values_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A string of ACR (Authentication Context Class References) to pass to the identity provider. Refer to \"acr_values\" in section 3.1.2 of the OpenID Connect Core specification for further information.<br/>Valid ACRs are defined by the identity provider. Refer to your identity provider for further information about the ACRs which it supports.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_obligation_oidc_prompt}  id={\"policies_authorization_obligation_oidc_prompt_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_oidc_prompt_tooltip_id\" + idPrefix}  labelText=\"Prompt\" onChange={props.updatepolicies_authorization_obligation_oidc_prompt}/>\n          <ReactTooltip id={\"policies_authorization_obligation_oidc_prompt_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A string of prompt options to pass to the identity provider. Refer to \"prompt\" in section 3.1.2 of the OpenID Connect Core specification for further information.<br/>Prompt options are optional and may not be supported by all identity providers. Refer to your identity provider for further information about support prompt values.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <NumberInput value={props.policies_authorization_obligation_oidc_max_age} id={\"policies_authorization_obligation_oidc_max_age_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_oidc_max_age_tooltip_id\" + idPrefix}  label=\"Max Age\" onChange={props.updatepolicies_authorization_obligation_oidc_max_age}/>\n          <ReactTooltip id={\"policies_authorization_obligation_oidc_max_age_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum age of the authentication. Refer to  \"max_age\" in section 3.1.2 of the OpenID Connect Core  specification for further information.<br/>Setting this to '0' indicates to the provider that the user should re-authenticate immediately. This  parameter also forces the provider to include the auth_time parameter in the returned id token, which is used by IAG to determine when the user last performed a re-authentication.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_obligation_redirect_url}  id={\"policies_authorization_obligation_redirect_url_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_obligation_redirect_url_tooltip_id\" + idPrefix}  labelText=\"Redirect URL\" onChange={props.updatepolicies_authorization_obligation_redirect_url}/>\n          <ReactTooltip id={\"policies_authorization_obligation_redirect_url_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Allows clients to be redirected to a URL as a result of this policy evaluating successfully.<br/>This URL can contain embedded macros to include contextual information about the request and client which was obligated to be redirected to this URL. See the  Redirect URL Macros table above for  the available macros.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_authorization_name_valid}  invalidText={props.policies_authorization_name_invalid_text}  value={props.policies_authorization_name}  id={\"policies_authorization_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_authorization_name}/>\n          <ReactTooltip id={\"policies_authorization_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A name for this policy, which is used to refer to this policy in audit events.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_host}  id={\"policies_authorization_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_authorization_host}/>\n          <ReactTooltip id={\"policies_authorization_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this policy will be applied. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n          <TextInput  value={props.policies_authorization_rule}  id={\"policies_authorization_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_authorization_rule}/>\n          <ReactTooltip id={\"policies_authorization_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If a rule string is not defined here, the gateway will look for a named rule (with the same name as this policy) in the authorization section of the configuration YAML. Refer to the authorization section of this template for an explanation of rule syntax. The predefined rules anyuser or anyauth can also be referenced here.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                <Select\n                  value={props.policies_authorization_action}\n                   id={\"policies_authorization_action_id\" + idPrefix}\n onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_action_tooltip_id\" + idPrefix}                   labelText=\"Action\"\n                  onChange={props.updatepolicies_authorization_action}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"permit\" value=\"permit\" />\n                  <SelectItem text=\"deny\" value=\"deny\" />\n                  <SelectItem text=\"obligate\" value=\"obligate\" />\n                  <SelectItem text=\"reauth\" value=\"reauth\" />\n                </Select>\n          <ReactTooltip id={\"policies_authorization_action_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Defines the action to perform if the rule matches. If the action is obligate, the obligation property must also be set for this authorization rule.<br/></div></ReactTooltip>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_authorization_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths which this policy will be applied. Each path may contain the `*?` pattern matching characters. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_authorization_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <DataTable id={\"policies_authorization_pathsTable\" + idPrefix} isSortable\n                        headers={policies_authorization_pathsheaderData}\n                        rows={policies_authorization_pathsrowData.policies_authorization_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_authorization_pathshandleAdd(idPrefix, [setpolicies_authorization_paths_paths(''),    setpolicies_authorization_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationpathsDeleteModal row={row} loadGrid={policies_authorization_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationpathsEdit  data={policies_authorization_pathsrowData.policies_authorization_paths} setData={setDataMain} row={row} loadGrid={policies_authorization_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_authorization_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_paths_paths={updatepolicies_authorization_paths_paths} policies_authorization_paths_paths={policies_authorization_paths_paths}\n            policies_authorization_paths_paths_valid={policies_authorization_paths_paths_valid}\n            policies_authorization_paths_paths_invalid_text={policies_authorization_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"methods_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_authorization_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / Authorization : </span><br/>                  <h2>Methods Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_authorization_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_authorization_methods_tooltip_id\" + idPrefix} >Methods</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_authorization_methods_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The method(s) which this policy applies to. If this is not defined, the policy will apply to all methods.<br/></div></ReactTooltip>\n\n                <div id={\"policies_authorization_methodsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <DataTable id={\"policies_authorization_methodsTable\" + idPrefix} isSortable\n                        headers={policies_authorization_methodsheaderData}\n                        rows={policies_authorization_methodsrowData.policies_authorization_methods}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_authorization_methodshandleAdd(idPrefix, [setpolicies_authorization_methods_methods(''),    setpolicies_authorization_methods_methods_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationmethodsDeleteModal row={row} loadGrid={policies_authorization_methodsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PoliciesauthorizationmethodsEdit  data={policies_authorization_methodsrowData.policies_authorization_methods} setData={setDataMain} row={row} loadGrid={policies_authorization_methodsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_authorization_methods\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_methods_methods={updatepolicies_authorization_methods_methods} policies_authorization_methods_methods={policies_authorization_methods_methods}\n            policies_authorization_methods_methods_valid={policies_authorization_methods_methods_valid}\n            policies_authorization_methods_methods_invalid_text={policies_authorization_methods_methods_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_authorization_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_authorization_name || !props.policies_authorization_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationpathsAdd loadGrid={policies_authorization_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_authorization_paths_paths={updatepolicies_authorization_paths_paths} policies_authorization_paths_paths={policies_authorization_paths_paths}\n            policies_authorization_paths_paths_valid={policies_authorization_paths_paths_valid}\n            policies_authorization_paths_paths_invalid_text={policies_authorization_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationpathsEdit  loadGrid={policies_authorization_pathsloadGrid} dataLoad={dataLoad} name={\"policies_authorization_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_paths_paths={updatepolicies_authorization_paths_paths} policies_authorization_paths_paths={policies_authorization_paths_paths}\n            policies_authorization_paths_paths_valid={policies_authorization_paths_paths_valid}\n            policies_authorization_paths_paths_invalid_text={policies_authorization_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationmethodsAdd loadGrid={policies_authorization_methodsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_authorization_methods_methods={updatepolicies_authorization_methods_methods} policies_authorization_methods_methods={policies_authorization_methods_methods}\n            policies_authorization_methods_methods_valid={policies_authorization_methods_methods_valid}\n            policies_authorization_methods_methods_invalid_text={policies_authorization_methods_methods_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PoliciesauthorizationmethodsEdit  loadGrid={policies_authorization_methodsloadGrid} dataLoad={dataLoad} name={\"policies_authorization_methods\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_authorization_methods_methods={updatepolicies_authorization_methods_methods} policies_authorization_methods_methods={policies_authorization_methods_methods}\n            policies_authorization_methods_methods_valid={policies_authorization_methods_methods_valid}\n            policies_authorization_methods_methods_invalid_text={policies_authorization_methods_methods_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policies_authorizationAdd;\n"],"sourceRoot":""}