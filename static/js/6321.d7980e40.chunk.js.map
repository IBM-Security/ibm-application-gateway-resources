{"version":3,"file":"static/js/6321.d7980e40.chunk.js","mappings":"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","sources":["content/serverPage/serversslapplicationssupported_groupsAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_ssl_applications_supported_groups_supported_groups_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_ssl_applications_supported_groups_supported_groups\"] = document.getElementById(\"server_ssl_applications_supported_groups_supported_groups_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"server_ssl_applications_supported_groups_supported_groups\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_ssl_applications_supported_groups_supported_groups_id\").value = \"\";\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"server_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversslapplications_supported_groupsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_ssl_applications_supported_groups_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_ssl_applications_supported_groups_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\nconst Serversslapplications_supported_groupsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n\n\n    const [server_ssl_applications_supported_groups_supported_groups, setserver_ssl_applications_supported_groups_supported_groups] = useState(''),\n    updateserver_ssl_applications_supported_groups_supported_groups = useCallback((evt) => setserver_ssl_applications_supported_groups_supported_groups(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversslapplications_supported_groupsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_ssl_applications_supported_groups_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_ssl_applications_supported_groups_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / SSL / Applications / Supported Groups : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_ssl_applications_supported_groups_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_ssl_applications_supported_groups_div\" + idPrefix}>\n  <h3>Group Name</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_ssl_applications_supported_groups_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_ssl_applications_supported_groups_supported_groups_valid}  invalidText={props.server_ssl_applications_supported_groups_supported_groups_invalid_text}  value={props.server_ssl_applications_supported_groups_supported_groups}  id={\"server_ssl_applications_supported_groups_supported_groups_id\" + idPrefix}  data-tooltip-id={\"server_ssl_applications_supported_groups_supported_groups_tooltip_id\" + idPrefix}  labelText=\"Group Name *\" onChange={props.updateserver_ssl_applications_supported_groups_supported_groups}/>\n          <ReactTooltip id={\"server_ssl_applications_supported_groups_supported_groups_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name(s) of the groups which will be permitted.<br/>For a list of valid ciphers, see:<br/>  - Supported Groups<br/>  - Supported Groups for TLSv1.3<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_ssl_applications_supported_groups_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_ssl_applications_supported_groups_supported_groups || !props.server_ssl_applications_supported_groups_supported_groups_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n        </div>\n    );\n}\n\nexport default Serversslapplications_supported_groupsAdd;\n"],"names":["handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","doAdd","updateStyle","style","display","closeAdd","Serversslapplications_supported_groupsAdd","props","row","server_ssl_applications_supported_groups_supported_groups","setserver_ssl_applications_supported_groups_supported_groups","useState","updateserver_ssl_applications_supported_groups_supported_groups","useCallback","evt","target","fetcheddata","setFetcheddata","React","dataLoad","setDataMain","functionName","data","eval","_jsx","children","id","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","invalid","server_ssl_applications_supported_groups_supported_groups_valid","invalidText","server_ssl_applications_supported_groups_supported_groups_invalid_text","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","onClick","disabled"],"sourceRoot":""}