{"version":3,"file":"static/js/8442.292f585f.chunk.js","mappings":"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","sources":["content/loggingPage/loggingtracingEdit.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"logging_tracing_component_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_component\"] = document.getElementById(\"logging_tracing_component_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_compress\"] = document.getElementById(\"logging_tracing_compress_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"logging_tracing_file_name\"] = document.getElementById(\"logging_tracing_file_name_id\" + idPrefix).value;\n    }\n    json[\"logging_tracing_level\"] = document.getElementById(\"logging_tracing_level_id\" + idPrefix).value;\n    json[\"logging_tracing_max_file_size\"] = document.getElementById(\"logging_tracing_max_file_size_id\" + idPrefix).value;\n    json[\"logging_tracing_max_rollover_files\"] = document.getElementById(\"logging_tracing_max_rollover_files_id\" + idPrefix).value;\n      \n    loadGrid( json[\"logging_tracing_component\"], json[\"logging_tracing_compress\"], json[\"logging_tracing_file_name\"], json[\"logging_tracing_level\"], json[\"logging_tracing_max_file_size\"], json[\"logging_tracing_max_rollover_files\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_tracing\")) {\n        var len = \"_tracing\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editlogging_tracingPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_tracing\")) {\n        var len = \"_tracing\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editlogging_tracingPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"logging_tracing_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"logging_tracing_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].component)?data[i].component:\"\") + ((data[i].file_name)?data[i].file_name:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n        }\n      }\n    } else {\n      if(json !== undefined && json.logging !== undefined && json.logging.tracing !== undefined ) {\n      }\n    }\n  };\nconst Logging_tracingEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n\n    const [logging_tracing_component, setlogging_tracing_component] = useState(''),\n    updatelogging_tracing_component = useCallback((evt) => setlogging_tracing_component(evt.target.value), []);\n\n    const [logging_tracing_compress, setlogging_tracing_compress] = useState(true),\n    updatelogging_tracing_compress = useCallback((evt) => setlogging_tracing_compress(evt), []);\n\n    const [logging_tracing_file_name, setlogging_tracing_file_name] = useState(''),\n    updatelogging_tracing_file_name = useCallback((evt) => setlogging_tracing_file_name(evt.target.value), []);\n\n    const [logging_tracing_level, setlogging_tracing_level] = useState(0),\n    updatelogging_tracing_level = useCallback((evt) => {}, []);\n\n    const [logging_tracing_max_file_size, setlogging_tracing_max_file_size] = useState(1),\n    updatelogging_tracing_max_file_size = useCallback((evt) => {}, []);\n\n    const [logging_tracing_max_rollover_files, setlogging_tracing_max_rollover_files] = useState(1),\n    updatelogging_tracing_max_rollover_files = useCallback((evt) => {}, []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editlogging_tracingPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"logging_tracing_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading logging_tracing_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Logging / Tracing : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div logging_tracing_div\" + idPrefix}>\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  value={props.logging_tracing_component}  id={\"logging_tracing_component_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_component_tooltip_id\" + idPrefix}  labelText=\"Component *\" onChange={props.updatelogging_tracing_component}/>\n          <ReactTooltip id={\"logging_tracing_component_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the tracing component to be enabled. Refer to the troubleshooting documentation for the full list of component names.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <Checkbox checked={props.logging_tracing_compress} id={\"logging_tracing_compress_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_compress_tooltip_id\" + idPrefix}  labelText=\"Compress\" onChange={props.updatelogging_tracing_compress}/>\n          <ReactTooltip id={\"logging_tracing_compress_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean which indicates whether rolled over log files should be automatically compressed to conserve disk space.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <TextInput  value={props.logging_tracing_file_name}  id={\"logging_tracing_file_name_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_file_name_tooltip_id\" + idPrefix}  labelText=\"File Name *\" onChange={props.updatelogging_tracing_file_name}/>\n          <ReactTooltip id={\"logging_tracing_file_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the generated log file.  If the file name is supplied without any path information the file will be written to the `/var/iag/logs` directory.  If the file name contains path information the hosting directory must be created and available before the container is started.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_level} id={\"logging_tracing_level_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_level_tooltip_id\" + idPrefix}  min={0}  max={9}  label=\"Level\" onChange={props.updatelogging_tracing_level}/>\n          <ReactTooltip id={\"logging_tracing_level_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The level of detail to be gathered by the tracing component in the range 0 to 9. Level 1 specifies the least detailed output and level 9 specifies the most detailed output. Level 0 will disable tracing for the component.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_max_file_size} id={\"logging_tracing_max_file_size_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_max_file_size_tooltip_id\" + idPrefix}  min={1}  label=\"Max File Size\" onChange={props.updatelogging_tracing_max_file_size}/>\n          <ReactTooltip id={\"logging_tracing_max_file_size_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum size (in MB) that the file can reach before it is rolled over.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n          <NumberInput value={props.logging_tracing_max_rollover_files} id={\"logging_tracing_max_rollover_files_id\" + idPrefix}  data-tooltip-id={\"logging_tracing_max_rollover_files_tooltip_id\" + idPrefix}  min={1}  label=\"Max Rollover Files\" onChange={props.updatelogging_tracing_max_rollover_files}/>\n          <ReactTooltip id={\"logging_tracing_max_rollover_files_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of rollover files to be kept on disk.  When the number of rollover log files reaches the specified threshold, the oldest log file is deleted.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem logging_tracing_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.logging_tracing_component || !props.logging_tracing_component_valid) || (!props.logging_tracing_file_name || !props.logging_tracing_file_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logging_tracingEdit;\n","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"names":["handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","slice","style","display","updateStyle","closeAdd","getEditData","yamlText","iagyaml","safeLoad","component","file_name","logging","tracing","Logging_tracingEdit","props","row","name","toolbarName","id","logging_tracing_component","setlogging_tracing_component","useState","updatelogging_tracing_component","useCallback","evt","target","logging_tracing_compress","setlogging_tracing_compress","updatelogging_tracing_compress","logging_tracing_file_name","setlogging_tracing_file_name","updatelogging_tracing_file_name","logging_tracing_level","setlogging_tracing_level","updatelogging_tracing_level","logging_tracing_max_file_size","setlogging_tracing_max_file_size","updatelogging_tracing_max_file_size","logging_tracing_max_rollover_files","setlogging_tracing_max_rollover_files","updatelogging_tracing_max_rollover_files","fetcheddata","setFetcheddata","React","setDataMain","functionName","eval","editing","_jsx","Icon","editProps","editIcon","onClick","title","children","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Checkbox","NumberInput","min","max","label","Button","disabled","logging_tracing_component_valid","logging_tracing_file_name_valid","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","isPrefixed","split","_ref","svgData","iconTitle","description","fill","fillRule","icon","role","iconRef","other","_objectWithoutProperties","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","concat","viewBox","ref","svgContent","map","svgProp","circle","index","circleProps","cx","cy","r","_extends","path","d","polygon","points","propTypes","PropTypes","isRequired","defaultProps"],"sourceRoot":""}