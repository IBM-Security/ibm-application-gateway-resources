{"version":3,"file":"static/js/1211.b4f6fcca.chunk.js","mappings":"u/DA2BA,MAAMA,4CAA6CC,EAAAA,mCAAAA,MAAK,IAAM,+HACxDC,oCAAqCD,EAAAA,mCAAAA,MAAK,IAAM,sFAChDE,qCAAsCF,EAAAA,mCAAAA,MAAK,IAAM,qFACjDG,+DAAiEH,KACjEI,uDAAyDJ,KACzDK,wDAA0DL,KAC1DM,+DAAiEN,KACjEO,uDAAyDP,KACzDQ,wDAA0DR,KAGxDS,aAAeA,OAGfC,WAAaA,CAACC,EAAUC,EAAUC,UAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,CAAC,EAEZA,EAAiD,2CAAIC,SAASC,eAAe,gDAAkDL,GAAUM,OACG,IAAzIF,SAASC,eAAe,6EAA+EL,GAAUM,MAAMC,SAAS,OACjIJ,EAA8E,wEAAIC,SAASC,eAAe,6EAA+EL,GAAUM,OAErMH,EAAmF,6EAAIC,SAASC,eAAe,kFAAoFL,GAAUM,MAC7MH,EAAuD,iDAAIC,SAASC,eAAe,sDAAwDL,GAAUM,MACrJH,EAA8C,wCAAIC,SAASC,eAAe,6CAA+CL,GAAUM,MACnIH,EAA4C,sCAAIC,SAASC,eAAe,2CAA6CL,GAAUM,OAClB,IAA1GF,SAASC,eAAe,8CAAgDL,GAAUM,MAAMC,SAAS,OAClGJ,EAA+C,yCAAIC,SAASC,eAAe,8CAAgDL,GAAUM,OAEvIH,EAAwD,kDAAIC,SAASC,eAAe,uDAAyDL,GAAUM,OACnD,IAAjGF,SAASC,eAAe,qCAAuCL,GAAUM,MAAMC,SAAS,OACzFJ,EAAsC,gCAAIC,SAASC,eAAe,qCAAuCL,GAAUM,OAErHH,EAAyC,mCAAIK,0CAA0CC,mCAEvFV,EAAUI,EAAiD,2CAAGA,EAA8E,wEAAGA,EAAmF,6EAAGA,EAAuD,iDAAGA,EAA8C,wCAAGA,EAA4C,sCAAGA,EAA+C,yCAAGA,EAAwD,kDAAGA,EAAsC,gCAAGA,EAAyC,oCAAG,GAEjkBO,YAAYV,EAAUC,IAGlBU,UAAYA,CAACC,EAAuCC,EAA8DC,EAA8Dd,EAAUe,EAAOd,UACrLC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,iDAAiDC,MAAQ,GACjFF,SAASC,eAAe,8EAA8EC,MAAQ,GAC9GF,SAASC,eAAe,mFAAmFC,MAAQ,GACnHF,SAASC,eAAe,uDAAuDC,MAAQ,GACvFF,SAASC,eAAe,8CAA8CC,MAAQ,GAC9EF,SAASC,eAAe,4CAA4CC,MAAQ,GAC5EF,SAASC,eAAe,+CAA+CC,MAAQ,GAC/EF,SAASC,eAAe,wDAAwDC,MAAQ,GACxFF,SAASC,eAAe,sCAAsCC,MAAQ,GACtEE,0CAA0CC,mCAAqC,GAC/EG,EAAsCJ,0CAA0CC,oCAEhFO,iEAAiEC,0DAA4D,GAC7HJ,EAA6DG,iEAAiEC,2DAE9HC,iEAAiEC,0DAA4D,GAC7HL,EAA6DI,iEAAiEC,2DAG3HJ,GACDA,IAGFL,YAAYV,EAAWC,IAGnBS,YAAcA,CAACV,EAAUC,MAC7BmB,EAAAA,uCAAAA,IAAY,eAAiBpB,EAAU,UAAW,SAClDI,SAASC,eAAe,mCAAqCL,GAAUqB,MAAMC,QAAU,OAElFrB,GACDA,KAIAsB,SAAYvB,SACEE,IAAbF,IAAwBA,EAAW,KAEtCoB,EAAAA,uCAAAA,IAAY,iCAAmCpB,EAAU,UAAW,SACpEI,SAASC,eAAe,iCAAmCL,GAAUqB,MAAMC,QAAU,QAIrFE,6CAA+C,CACjD,CACAC,OAAQ,OACRC,IAAK,QAET,CACID,OAAQ,OACRC,IAAK,QAET,CACID,OAAQ,WACRC,IAAK,YAET,CACID,OAAQ,OACRC,IAAK,QAET,CACID,OAAQ,WACRC,IAAK,aAKHlB,0CAA4C,CAACC,mCAAoC,IAEjFkB,4CAA8CA,CAAC3B,SAAU4B,eAI3D,QAHgB1B,IAAbF,WAAwBA,SAAW,IAGnC4B,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBzB,SAASC,eAAe,6CAA+CL,UAAUM,MAAQ,GACzFF,SAASC,eAAe,6CAA+CL,UAAUM,MAAQ,GACzFF,SAASC,eAAe,iDAAmDL,UAAUM,MAAQ,GAC7FF,SAASC,eAAe,6CAA+CL,UAAUM,MAAQ,GACzFF,SAASC,eAAe,gDAAkDL,UAAUM,MAAQ,GAC5FF,SAASC,eAAe,iDAAmDL,UAAUM,MAAQ,IAE7Fc,EAAAA,uCAAAA,IAAY,iCAAmCpB,SAAU,UAAW,QAEpEI,SAASC,eAAe,0CAA4CL,UAAUqB,MAAMC,QAAU,QAE9FlB,SAASC,eAAe,iCAAmCL,UAAUqB,MAAMC,QAAU,QAGnFU,oEAAsE,CACxE,CACAP,OAAQ,qBACRC,IAAK,uBAKHV,iEAAmE,CAACC,0DAA2D,IAE/HgB,mEAAqEA,CAACjC,SAAU4B,eAIlF,QAHgB1B,IAAbF,WAAwBA,SAAW,IAGnC4B,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBzB,SAASC,eAAe,kFAAoFL,UAAUM,MAAQ,GAE9Hc,YAAY,iCAAmCpB,SAAU,UAAW,QAEpEI,SAASC,eAAe,+DAAiEL,UAAUqB,MAAMC,QAAU,QAEnHlB,SAASC,eAAe,iCAAmCL,UAAUqB,MAAMC,QAAU,QAGnFY,oEAAsE,CACxE,CACAT,OAAQ,oBACRC,IAAK,uBAKHR,iEAAmE,CAACC,0DAA2D,IAE/HgB,mEAAqEA,CAACnC,SAAU4B,eAIlF,QAHgB1B,IAAbF,WAAwBA,SAAW,IAGnC4B,YACD,IAAI,IAAIC,EAAI,EAAGA,EAAID,YAAYE,OAAQD,IACrCE,KAAKH,YAAYC,IAIrBzB,SAASC,eAAe,kFAAoFL,UAAUM,MAAQ,GAE9Hc,YAAY,iCAAmCpB,SAAU,UAAW,QAEpEI,SAASC,eAAe,+DAAiEL,UAAUqB,MAAMC,QAAU,QAEnHlB,SAASC,eAAe,iCAAmCL,UAAUqB,MAAMC,QAAU,QAInFc,6BAAgCC,QAElC,IAAIC,IAAMD,MAAMC,IAChB,MAAMvC,SAAWsC,MAAMtC,SACjBE,QAAUoC,MAAMpC,QAChBD,SAAYqC,MAAMrC,SAAUqC,MAAMrC,SAAS,IAE1CS,mCAAoCG,uCAAyC2B,mCAAAA,SAAe,KAC5FC,0CAA2CC,8CAAgDF,mCAAAA,UAAe,GAEjHA,mCAAAA,UAAgB,KACdG,8CACC,CAACF,4CAEJ,MAAME,2CAA6CH,mCAAAA,YAAkBI,MAAOC,EAAyCC,EAAyCC,EAA6CC,EAAyCC,EAA4CC,EAA6ChC,EAA0DE,EAA0D+B,KAC/b,IACE,IAAIC,EAAQ,GACZ,GAAGN,EACD,GAAGK,EAAK,CACN,IAAI,IAAIrB,EAAI,EAAGA,EAAIrB,0CAA0CC,mCAAmCqB,OAAQD,IAAK,CAC3G,IAAIuB,GAAW5C,0CAA0CC,mCAAmCoB,GAAGwB,KAAM7C,0CAA0CC,mCAAmCoB,GAAGwB,KAAK,IAAM,IACxI,GAApDC,OAAOC,2CAAyG,QAApDD,OAAOC,2CAAwDH,GAAUE,OAAOE,0CAC9IL,EAAMM,KAAKjD,0CAA0CC,mCAAmCoB,GAE5F,CACA,IAAI6B,GAAUb,GAAiF,IAAM,GACrGM,EAAMM,KAAK,CACTE,GAAID,EACJE,KAAMhB,EACpBS,KAAMR,EACNgB,SAAUf,EACVgB,KAAMf,EACFgB,IAAK,CACTC,mBAAoB/C,EACpBgD,IAAKjB,EACLkB,mBAAoB/C,GAEpBgD,SAAUlB,GAEA,MAEE,IAAQpB,EAAI,EAAGA,EAAIrB,0CAA0CC,mCAAmCqB,OAAQD,IACnGrB,0CAA0CC,mCAAmCoB,GAAGwB,OAASR,GAC1FM,EAAMM,KAAKjD,0CAA0CC,mCAAmCoB,SAK9FsB,EAAQ3C,0CAA0CC,mCAEpDD,0CAA0CC,mCAAqC0C,EAE/EvC,sCADa,CAACH,mCAAoC0C,GACP1C,yCAEIP,IAA5C2C,GAAqG,OAA5CA,GACxDhD,cAIN,CAAE,MAAOuE,GACPC,QAAQC,IAAIF,EACd,CACA,OAAO,KAGFnD,0DAA2DJ,8DAAgE0B,mCAAAA,SAAe,KAC1IgC,iEAAkEC,qEAAuEjC,mCAAAA,UAAe,GAE/JA,mCAAAA,UAAgB,KACdkC,qEACC,CAACF,mEAEJ,MAAME,kEAAoElC,mCAAAA,YAAkBI,MAAO+B,EAA8ExB,KAC/K,IACE,IAAIC,EAAQ,GACZ,GAAGuB,EACD,GAAGxB,EAAK,CACN,IAAI,IAAIrB,EAAI,EAAGA,EAAIb,iEAAiEC,0DAA0Da,OAAQD,IAAK,CACzJ,IAAIuB,GAAWpC,iEAAiEC,0DAA0DY,GAAGmC,mBAAoBhD,iEAAiEC,0DAA0DY,GAAGmC,mBAAmB,IAAM,IACzO,GAA3EV,OAAOqB,kEAAuJ,QAA3ErB,OAAOqB,kEAA+EvB,GAAUE,OAAOsB,iEAC5LzB,EAAMM,KAAKzC,iEAAiEC,0DAA0DY,GAE1I,CACA,IAAI6B,GAAUgB,GAA2J,IAAM,GAC/KvB,EAAMM,KAAK,CACTE,GAAID,EACJM,mBAAoBU,GAExB,MAEE,IAAQ7C,EAAI,EAAGA,EAAIb,iEAAiEC,0DAA0Da,OAAQD,IACjJb,iEAAiEC,0DAA0DY,GAAGmC,qBAAuBU,GACtJvB,EAAMM,KAAKzC,iEAAiEC,0DAA0DY,SAK5IsB,EAAQnC,iEAAiEC,0DAE3ED,iEAAiEC,0DAA4DkC,EAE7HtC,6DADa,CAACI,0DAA2DkC,GACPlC,gEAEkBf,IAAjFwE,GAA+K,OAAjFA,GAC7F7E,cAIN,CAAE,MAAOuE,GACPC,QAAQC,IAAIF,EACd,CACA,OAAO,KAGFjD,0DAA2DL,8DAAgEyB,mCAAAA,SAAe,KAC1IsC,iEAAkEC,qEAAuEvC,mCAAAA,UAAe,GAE/JA,mCAAAA,UAAgB,KACdwC,qEACC,CAACF,mEAEJ,MAAME,kEAAoExC,mCAAAA,YAAkBI,MAAOqC,EAA8E9B,KAC/K,IACE,IAAIC,EAAQ,GACZ,GAAG6B,EACD,GAAG9B,EAAK,CACN,IAAI,IAAIrB,EAAI,EAAGA,EAAIX,iEAAiEC,0DAA0DW,OAAQD,IAAK,CACzJ,IAAIuB,GAAWlC,iEAAiEC,0DAA0DU,GAAGqC,mBAAoBhD,iEAAiEC,0DAA0DU,GAAGqC,mBAAmB,IAAM,IACzO,GAA3EZ,OAAO2B,kEAAuJ,QAA3E3B,OAAO2B,kEAA+E7B,GAAUE,OAAO4B,iEAC5L/B,EAAMM,KAAKvC,iEAAiEC,0DAA0DU,GAE1I,CACA,IAAI6B,GAAUsB,GAA2J,IAAM,GAC/K7B,EAAMM,KAAK,CACTE,GAAID,EACJQ,mBAAoBc,GAExB,MAEE,IAAQnD,EAAI,EAAGA,EAAIX,iEAAiEC,0DAA0DW,OAAQD,IACjJX,iEAAiEC,0DAA0DU,GAAGqC,qBAAuBc,GACtJ7B,EAAMM,KAAKvC,iEAAiEC,0DAA0DU,SAK5IsB,EAAQjC,iEAAiEC,0DAE3ED,iEAAiEC,0DAA4DgC,EAE7HrC,6DADa,CAACK,0DAA2DgC,GACPhC,gEAEkBjB,IAAjF8E,GAA+K,OAAjFA,GAC7FnF,cAIN,CAAE,MAAOuE,GACPC,QAAQC,IAAIF,EACd,CACA,OAAO,KAKFe,2CAA4CC,gDAAiDC,EAAAA,mCAAAA,UAAS,GAC7GC,kDAAmDC,EAAAA,mCAAAA,aAAaC,MAAY,KAErEC,wEAAyEC,6EAA8EL,EAAAA,mCAAAA,UAAS,IACvKM,+EAAgFJ,EAAAA,mCAAAA,aAAaC,GAAQE,2EAA2EF,EAAII,OAAOtF,OAAQ,KAE5LuF,6EAA8EC,kFAAmFT,EAAAA,mCAAAA,UAAS,IACjLU,oFAAqFR,EAAAA,mCAAAA,aAAaC,MAAY,KAEvGQ,iDAAkDC,sDAAuDZ,EAAAA,mCAAAA,UAAS,IACzHa,wDAAyDX,EAAAA,mCAAAA,aAAaC,MAAY,KAE3EW,wCAAyCC,6CAA8Cf,EAAAA,mCAAAA,UAAS,IACvGgB,+CAAgDd,EAAAA,mCAAAA,aAAaC,MAAY,KAElEc,sCAAuCC,2CAA4ClB,EAAAA,mCAAAA,UAAS,IACnGmB,6CAA8CjB,EAAAA,mCAAAA,aAAaC,MAAY,KAEhEiB,yCAA0CC,8CAA+CrB,EAAAA,mCAAAA,UAAS,IACzGsB,gDAAiDpB,EAAAA,mCAAAA,aAAaC,GAAQkB,4CAA4ClB,EAAII,OAAOtF,OAAQ,KAE9HsG,kDAAmDC,uDAAwDxB,EAAAA,mCAAAA,UAAS,IAC3HyB,yDAA0DvB,EAAAA,mCAAAA,aAAaC,MAAY,KAE5EuB,gCAAiCC,qCAAsC3B,EAAAA,mCAAAA,UAAS,IACvF4B,uCAAwC1B,EAAAA,mCAAAA,aAAaC,GAAQwB,mCAAmCxB,EAAII,OAAOtF,OAAQ,KAE5GsC,wCAAyCsE,6CAA8C7B,EAAAA,mCAAAA,UAAS,IACvG8B,+CAAgD5B,EAAAA,mCAAAA,aAAaC,GAAQ0B,2CAA2C1B,EAAII,OAAOtF,OAAQ,KAE5HuC,wCAAyCuE,6CAA8C/B,EAAAA,mCAAAA,UAAS,IACvGgC,+CAAgD9B,EAAAA,mCAAAA,aAAaC,IAC3D4B,2CAA2C5B,EAAII,OAAOtF,OACtD,IAAI8C,EAASoC,EAAII,OAAOtF,OACxBgH,EAAAA,uCAAAA,IAAc9G,0CAA0CC,mCAAoC8G,iDAAkDC,wDAAyD,qCAAsC,OAAQpE,IACpP,KAEIqE,8CAA+CF,mDAAoDlC,EAAAA,mCAAAA,WAAS,IAC5GqC,qDAAsDF,0DAA2DnC,EAAAA,mCAAAA,UAAS,KAG1HvC,4CAA6C6E,iDAAkDtC,EAAAA,mCAAAA,UAAS,IAC/GuC,mDAAoDrC,EAAAA,mCAAAA,aAAaC,GAAQmC,+CAA+CnC,EAAII,OAAOtF,OAAQ,KAEpIyC,wCAAyC8E,6CAA8CxC,EAAAA,mCAAAA,UAAS,MACvGyC,+CAAgDvC,EAAAA,mCAAAA,aAAaC,MAAY,KAElExC,2CAA4C+E,gDAAiD1C,EAAAA,mCAAAA,UAAS,IAC7G2C,kDAAmDzC,EAAAA,mCAAAA,aAAaC,GAAQuC,8CAA8CvC,EAAII,OAAOtF,OAAQ,KAElI2C,4CAA6CgF,iDAAkD5C,EAAAA,mCAAAA,UAAS,IAC/G6C,mDAAoD3C,EAAAA,mCAAAA,aAAaC,GAAQyC,+CAA+CzC,EAAII,OAAOtF,OAAQ,KAGpI6H,YAAaC,gBAAkB7F,mCAAAA,UAAe,GACrDA,mCAAAA,UAAgB,KACd8F,YACC,CAACF,cACJ,MAAME,SAAWA,KAEf,IAAI,IAAIxG,EAAI,EAAGA,EAAIrB,0CAA0CC,mCAAmCqB,OAAQD,IACnGrB,0CAA0CC,mCAAmCoB,GAAG8B,KAAOL,OAAOE,0CACjG0D,gDAAgIhH,IAApFM,0CAA0CC,mCAAmCoB,SAA6G3B,IAAzFM,0CAA0CC,mCAAmCoB,GAAG+B,KAAqBpD,0CAA0CC,mCAAmCoB,GAAG+B,KAAK,IACvUwD,gDAAgIlH,IAApFM,0CAA0CC,mCAAmCoB,SAA6G3B,IAAzFM,0CAA0CC,mCAAmCoB,GAAGwB,KAAqB7C,0CAA0CC,mCAAmCoB,GAAGwB,KAAK,IACvUsE,oDAAoIzH,IAApFM,0CAA0CC,mCAAmCoB,SAAiH3B,IAA7FM,0CAA0CC,mCAAmCoB,GAAGgC,SAAyBrD,0CAA0CC,mCAAmCoB,GAAGgC,SAAS,IACnVgE,gDAAgI3H,IAApFM,0CAA0CC,mCAAmCoB,SAA6G3B,IAAzFM,0CAA0CC,mCAAmCoB,GAAGiC,KAAqBtD,0CAA0CC,mCAAmCoB,GAAGiC,KAAK,IACvUiE,mDAAmI7H,IAApFM,0CAA0CC,mCAAmCoB,SAA4G3B,IAAxFM,0CAA0CC,mCAAmCoB,GAAGkC,UAAiH7D,IAA5FM,0CAA0CC,mCAAmCoB,GAAGkC,IAAIE,IAAoBzD,0CAA0CC,mCAAmCoB,GAAGkC,IAAIE,IAAI,IACrbgE,oDAAoI/H,IAApFM,0CAA0CC,mCAAmCoB,SAAiH3B,IAA7FM,0CAA0CC,mCAAmCoB,GAAGsC,SAAyB3D,0CAA0CC,mCAAmCoB,GAAGsC,SAAS,KAKrV,OAAO,GAGHmE,YAAcA,CAACC,aAAcC,QAC9BD,cAAgBC,MACjBzG,KAAKwG,aAALxG,CAAmByG,OAIvB,OACEC,EAAAA,gDAAAA,KAAA,OAAAC,UAEEC,EAAAA,gDAAAA,MAAA,OAAKhF,GAAI,mCAAqC3D,SAAUqB,MAAO,CAACC,QAAQ,QAASsH,UAAU,wBAAuBF,SAAA,EAEhHC,EAAAA,gDAAAA,MAACE,6CAAAA,GAAI,CAAClF,GAAK,iCAAmC3D,SAAU8I,WAAY,cAAgB9I,SAAU+I,UAAQ,EAACH,UAAU,gBAAgBvH,MAAO,CAAC2H,SAAS,QAAQN,SAAA,EACtJC,EAAAA,gDAAAA,MAACM,6CAAAA,GAAO,CAAAP,SAAA,EACND,EAAAA,gDAAAA,KAACS,6CAAAA,GAAG,CAACC,OAAQ,cAAgBnJ,SAAS0I,SAAC,aACvCD,EAAAA,gDAAAA,KAACS,6CAAAA,GAAG,CAACC,OAAQ,2BAA6BnJ,SAAS0I,SAAC,0BACpDD,EAAAA,gDAAAA,KAACS,6CAAAA,GAAG,CAACC,OAAQ,cAAgBnJ,SAAS0I,SAAC,gBAEzCC,EAAAA,gDAAAA,MAACS,6CAAAA,GAAQ,CAAC/H,MAAO,CAACgI,MAAM,OAAQL,SAAS,QAASM,MAAO,cAAgBtJ,SAAS0I,SAAA,EAChFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,oBAAoBvH,MAAO,CAACkI,OAAO,OAAQP,SAAS,QAAQN,SAAA,EAC3EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+DAAiE5I,SAAS0I,SAAA,EACzFD,EAAAA,gDAAAA,KAAA,QAAMG,UAAU,iBAAgBF,SAAC,uCAAwCD,EAAAA,gDAAAA,KAAA,SAAK,sBAAkBA,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,sBAAqBD,EAAAA,gDAAAA,KAAA,SAAK,oEAGhIE,EAAAA,gDAAAA,MAAA,OAAKC,UAAW,iDAAmD5I,SAAS0I,SAAA,EAC5EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACzFD,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,iBAAgBD,EAAAA,gDAAAA,KAAA,aAENE,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,qBAAqBvH,MAAO,CAACmI,WAAW,OAAOC,aAAa,QAAQf,SAAA,EAEnFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAACiB,qDAAAA,GAAW,CAACpJ,MAAO+B,MAAM8C,2CAA4CxB,GAAI,gDAAkD3D,SAAW,kBAAiB,wDAA0DA,SAAW2J,IAAK,EAAIC,MAAM,kBAAkBC,SAAUxH,MAAMiD,oDAC9QmD,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,wDAA0D3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,iGAA6FD,EAAAA,gDAAAA,KAAA,kBAGzPE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAACiB,qDAAAA,GAAW,CAACpJ,MAAO+B,MAAM2D,iDAAkDrC,GAAI,sDAAwD3D,SAAW,kBAAiB,8DAAgEA,SAAW2J,IAAK,EAAIC,MAAM,wBAAwBC,SAAUxH,MAAM6D,0DACtSuC,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,8DAAgE3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,qFAAiFD,EAAAA,gDAAAA,KAAA,kBAGnPE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAACiB,qDAAAA,GAAW,CAACpJ,MAAO+B,MAAM8D,wCAAyCxC,GAAI,6CAA+C3D,SAAW,kBAAiB,qDAAuDA,SAAW2J,IAAK,EAAIC,MAAM,eAAeC,SAAUxH,MAAMgE,iDAClQoC,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,qDAAuD3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,sGAAkGD,EAAAA,gDAAAA,KAAA,kBAG3PE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAACiB,qDAAAA,GAAW,CAACpJ,MAAO+B,MAAMiE,sCAAuC3C,GAAI,2CAA6C3D,SAAW,kBAAiB,mDAAqDA,SAAW2J,IAAK,EAAIC,MAAM,aAAaC,SAAUxH,MAAMmE,+CAC1PiC,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,mDAAqD3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,mFAA+ED,EAAAA,gDAAAA,KAAA,kBAGtOE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAAC0B,sDAAAA,EAAS,CAAE7J,MAAO+B,MAAMoE,yCAA2C9C,GAAI,8CAAgD3D,SAAW,kBAAiB,sDAAwDA,SAAWoK,UAAU,gBAAgBP,SAAUxH,MAAMsE,kDACjQ8B,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,sDAAwD3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,oHAAgHD,EAAAA,gDAAAA,KAAA,SAAK,4FAAwFA,EAAAA,gDAAAA,KAAA,kBAGvWE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAACiB,qDAAAA,GAAW,CAACpJ,MAAO+B,MAAMuE,kDAAmDjD,GAAI,uDAAyD3D,SAAW,kBAAiB,+DAAiEA,SAAW2J,IAAK,EAAIC,MAAM,yBAAyBC,SAAUxH,MAAMyE,2DAC1S2B,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,+DAAiE3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,+DAA2DD,EAAAA,gDAAAA,KAAA,kBAG9NE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAAC0B,sDAAAA,EAAS,CAAEE,SAAUhI,MAAMiI,sCAAwCC,YAAalI,MAAMmI,6CAA+ClK,MAAO+B,MAAM0E,gCAAkCpD,GAAI,qCAAuC3D,SAAW,kBAAiB,6CAA+CA,SAAWoK,UAAU,SAASP,SAAUxH,MAAM4E,yCACzVwB,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,6CAA+C3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,qCAAiCD,EAAAA,gDAAAA,KAAA,2BAOhLE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACzED,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACC,QAASA,KAAQhK,YAAYV,SAAWC,UAAYyI,SAAC,YAC7DD,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACE,UAAYtI,MAAM0E,kCAAoC1E,MAAMiI,sCAAwCI,QAASA,KAAQ5K,WAAWC,SAAUC,SAAWC,UAAYyI,SAAC,gBAGhLC,EAAAA,gDAAAA,MAACS,6CAAAA,GAAQ,CAAC/H,MAAO,CAACgI,MAAM,OAAQL,SAAS,QAASM,MAAO,2BAA6BtJ,SAAS0I,SAAA,EAC7FC,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,oBAAoBvH,MAAO,CAACkI,OAAO,OAAQP,SAAS,QAAQN,SAAA,EAC3EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+DAAiE5I,SAAS0I,SAAA,EACzFD,EAAAA,gDAAAA,KAAA,QAAMG,UAAU,iBAAgBF,SAAC,uCAAwCD,EAAAA,gDAAAA,KAAA,SAAK,sBAAkBA,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,mCAAkCD,EAAAA,gDAAAA,KAAA,UACtIA,EAAAA,gDAAAA,KAACmC,0DAAW,CAACC,SAAS,IAAIC,QAAQ,8GAA6GpC,UAC7IC,EAAAA,gDAAAA,MAAA,KAAAD,SAAA,CAAG,gHAA4GD,EAAAA,gDAAAA,KAAA,SAAK,wGAIxHE,EAAAA,gDAAAA,MAAA,OAAKC,UAAW,iDAAmD5I,SAAS0I,SAAA,EAC5EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACzFD,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,0BAAyBD,EAAAA,gDAAAA,KAAA,aAEfE,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,qBAAqBvH,MAAO,CAACmI,WAAW,OAAOC,aAAa,QAAQf,SAAA,EAEnFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAAC0B,sDAAAA,EAAS,CAAE7J,MAAO+B,MAAMoD,wEAA0E9B,GAAI,6EAA+E3D,SAAW,kBAAiB,qFAAuFA,SAAWoK,UAAU,mCAAmCP,SAAUxH,MAAMsD,iFACjX8C,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,qFAAuF3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,0RAAgSD,EAAAA,gDAAAA,KAAA,kBAGzdE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACjFD,EAAAA,gDAAAA,KAACiB,qDAAAA,GAAW,CAACpJ,MAAO+B,MAAMwD,6EAA8ElC,GAAI,kFAAoF3D,SAAW,kBAAiB,0FAA4FA,SAAW2J,IAAK,EAAIC,MAAM,+BAA+BC,SAAUxH,MAAM0D,sFACjY0C,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,0FAA4F3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,gKAA4JD,EAAAA,gDAAAA,KAAA,2BAOxVE,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACzED,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACC,QAASA,KAAQhK,YAAYV,SAAWC,UAAYyI,SAAC,YAC7DD,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACE,UAAYtI,MAAM0E,kCAAoC1E,MAAMiI,sCAAwCI,QAASA,KAAQ5K,WAAWC,SAAUC,SAAWC,UAAYyI,SAAC,gBAGhLC,EAAAA,gDAAAA,MAACS,6CAAAA,GAAQ,CAAC/H,MAAO,CAACgI,MAAM,OAAQL,SAAS,QAASM,MAAO,cAAgBtJ,SAAS0I,SAAA,EAChFC,EAAAA,gDAAAA,MAAA,OAAKC,UAAU,oBAAoBvH,MAAO,CAACkI,OAAO,OAAQP,SAAS,QAAQN,SAAA,EAC3EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+DAAiE5I,SAAS0I,SAAA,EACzFD,EAAAA,gDAAAA,KAAA,QAAMG,UAAU,iBAAgBF,SAAC,uCAAwCD,EAAAA,gDAAAA,KAAA,SAAK,sBAAkBA,EAAAA,gDAAAA,KAAA,MAAAC,SAAI,sBAAqBD,EAAAA,gDAAAA,KAAA,aAE3HE,EAAAA,gDAAAA,MAAA,OAAKC,UAAW,iDAAmD5I,SAAS0I,SAAA,EAC5EC,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACzFD,EAAAA,gDAAAA,KAAA,MAAIoC,SAAS,IAAK,kBAAiB,gDAAkD7K,SAAS0I,SAAE,aAAYD,EAAAA,gDAAAA,KAAA,aAEpGA,EAAAA,gDAAAA,KAACqB,4CAAAA,GAAY,CAACnG,GAAI,gDAAkD3D,SAAU+J,WAAW,EAAMC,MAAM,MAAMC,OAAO,QAAOvB,UAAEC,EAAAA,gDAAAA,MAAA,OAAKtH,MAAO,CAAE6I,SAAU,KAAMxB,SAAA,CAAC,4FAAwFD,EAAAA,gDAAAA,KAAA,eAE5OA,EAAAA,gDAAAA,KAAA,OAAK9E,GAAI,6CAA+C3D,SAAUqB,MAAO,CAACmI,WAAW,OAAOC,aAAa,QAAQf,UAC/GD,EAAAA,gDAAAA,KAAA,OAAKG,UAAW,+CAAiD5I,SAAS0I,UACxED,EAAAA,gDAAAA,KAACsC,sDAAAA,GAAS,CAACpH,GAAI,0CAA4C3D,SAAUgL,YAAU,EAC3EC,QAASzJ,6CACT0J,KAAM1K,0CAA0CC,mCAChD0K,OAAQC,IAAA,IAAC,KACPF,EAAI,QACJD,EAAO,eACPI,EAAc,YACdC,EAAW,cACXC,EAAa,gBACbC,EAAe,cACfC,EAAa,uBACbC,GACLN,EAAA,OACCzC,EAAAA,gDAAAA,MAACgD,qDAAAA,EAAc,CAAAjD,SAAA,EACbD,EAAAA,gDAAAA,KAACmD,sDAAAA,EAAY,CAAC,aAAW,qBAAoBlD,UAC3CD,EAAAA,gDAAAA,KAACoD,sDAAAA,EAAmB,CAAAnD,UAClBD,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACC,QAASA,KAAO/I,4CAA4C3B,SAAU,CAACkH,2CAA2C,IAAQE,2CAA2C,IAAQG,kDAAiD,GAAUI,+CAA+C,IAAQE,2CAA2C,MAAUE,8CAA8C,IAAQE,+CAA+C,OAASS,SAAC,aAG/cC,EAAAA,gDAAAA,MAACmD,qDAAAA,GAAKC,EAAAA,2IAAAA,IAAAA,EAAAA,2IAAAA,GAAA,CAACC,KAAK,UAAaT,KAAe,IAAA7C,SAAA,EACtCD,EAAAA,gDAAAA,KAACwD,qDAAAA,EAAS,CAAAvD,UACRC,EAAAA,gDAAAA,MAACuD,sDAAAA,EAAQ,CAAAxD,SAAA,CACNuC,EAAQkB,IAAI1K,IACXgH,EAAAA,gDAAAA,KAAC2D,qDAAAA,GAAWL,EAAAA,2IAAAA,IAAAA,EAAAA,2IAAAA,GAAA,GAAKV,EAAe,CAAE5J,YAAS,IAAAiH,SACxCjH,EAAOA,YAGZgH,EAAAA,gDAAAA,KAAC2D,qDAAAA,EAAW,CAAA1D,SAAC,kBAKjBD,EAAAA,gDAAAA,KAAC4D,qDAAAA,EAAS,CAAA3D,SACPwC,EAAKiB,IAAI7J,IACRqG,EAAAA,gDAAAA,MAACuD,sDAAAA,EAAQ,CAAAxD,SAAA,CACNpG,EAAIgK,MAAMH,IAAII,IACb9D,EAAAA,gDAAAA,KAAC+D,qDAAAA,EAAS,CAAA9D,SAAgB6D,EAAKjM,OAAfiM,EAAK5I,MAEvBgF,EAAAA,gDAAAA,MAAC6D,qDAAAA,EAAS,CAAA9D,SAAA,EACRD,EAAAA,gDAAAA,KAACgE,mCAAAA,SAAQ,CAACC,UAAUjE,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACtJ,2CAA0C,CAACmD,IAAKA,EAAKvC,SAAU2C,gDAElE+F,EAAAA,gDAAAA,KAACgE,mCAAAA,SAAQ,CAACC,UAAUjE,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACnJ,oCAAmC,CAAEkJ,KAAMhI,0CAA0CC,mCAAoCkM,QAASrE,YAAahG,IAAKA,EAAKvC,SAAU2C,2CAA4C2F,SAAUA,SAAUuE,SAAS,EAAMvJ,KAAM,qCAAsCrD,SAAUA,SAAW,OAAQ6M,eAAgB7M,SACpWmH,8CAA+CA,8CAA+CvE,wCAAyCA,wCACvIyE,8CAA+CA,8CAA+CxE,wCAAyCA,wCACvI4E,8CAA+CA,8CAC/CC,qDAAsDA,qDACtDE,kDAAmDA,kDAAmD9E,4CAA6CA,4CACnJgF,8CAA+CA,8CAA+C/E,wCAAyCA,wCACvIiF,iDAAkDA,iDAAkDhF,2CAA4CA,2CAChJkF,kDAAmDA,kDAAmDjF,4CAA6CA,qDAjBlHX,EAAIqB,4BAgC/BgF,EAAAA,gDAAAA,MAAA,OAAKC,UAAY,+CAAiD5I,SAAS0I,SAAA,EACzED,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACC,QAASA,KAAQhK,YAAYV,SAAWC,UAAYyI,SAAC,YAC7DD,EAAAA,gDAAAA,KAACgC,qDAAAA,EAAM,CAACE,UAAYtI,MAAM0E,kCAAoC1E,MAAMiI,sCAAwCI,QAASA,KAAQ5K,WAAWC,SAAUC,SAAWC,UAAYyI,SAAC,mBAI5KD,EAAAA,gDAAAA,KAACgE,mCAAAA,SAAQ,CAACC,UAAUjE,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACpJ,mCAAkC,CAACU,SAAU2C,2CAA4CzC,QAASA,KAAOsB,SAASvB,WAAaA,SAAUA,SAClJmH,8CAA+CA,8CAA+CvE,wCAAyCA,wCACvIyE,8CAA+CA,8CAA+CxE,wCAAyCA,wCACvI4E,8CAA+CA,8CAC/CC,qDAAsDA,qDACtDE,kDAAmDA,kDAAmD9E,4CAA6CA,4CACnJgF,8CAA+CA,8CAA+C/E,wCAAyCA,wCACvIiF,iDAAkDA,iDAAkDhF,2CAA4CA,2CAChJkF,kDAAmDA,kDAAmDjF,4CAA6CA,iDAG7IwF,EAAAA,gDAAAA,KAACgE,mCAAAA,SAAQ,CAACC,UAAUjE,EAAAA,gDAAAA,KAAA,UAAYC,UAC9BD,EAAAA,gDAAAA,KAACnJ,oCAAmC,CAAES,SAAU2C,2CAA4C2F,SAAUA,SAAUhF,KAAM,qCAAsCrD,SAAUA,SAAW,OAAQ6M,eAAgB7M,SACjNmH,8CAA+CA,8CAA+CvE,wCAAyCA,wCACvIyE,8CAA+CA,8CAA+CxE,wCAAyCA,wCACvI4E,8CAA+CA,8CAC/CC,qDAAsDA,qDACtDE,kDAAmDA,kDAAmD9E,4CAA6CA,4CACnJgF,8CAA+CA,8CAA+C/E,wCAAyCA,wCACvIiF,iDAAkDA,iDAAkDhF,2CAA4CA,2CAChJkF,kDAAmDA,kDAAmDjF,4CAA6CA,sDAQ/J,uD","sources":["content/servicesPage/servicesrediscollectionsAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServicesrediscollectionsserversDeleteModal = lazy(() => import('./servicesrediscollectionsserversDeleteModal'));\nconst ServicesrediscollectionsserversAdd = lazy(() => import('./servicesrediscollectionsserversAdd'));\nconst ServicesrediscollectionsserversEdit = lazy(() => import('./servicesrediscollectionsserversEdit'));\nconst ServicesrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServicesrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateAdd'));\nconst ServicesrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./servicesrediscollectionsserverssslclient_certificateEdit'));\nconst ServicesrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServicesrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesAdd'));\nconst ServicesrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./servicesrediscollectionsserversssltrust_certificatesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    json[\"services_redis_collections_connect_timeout\"] = document.getElementById(\"services_redis_collections_connect_timeout_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_cross_domain_support_master_authn_server_url_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_cross_domain_support_master_authn_server_url\"] = document.getElementById(\"services_redis_collections_cross_domain_support_master_authn_server_url_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_cross_domain_support_master_session_code_lifetime\"] = document.getElementById(\"services_redis_collections_cross_domain_support_master_session_code_lifetime_id\" + idPrefix).value;\n    json[\"services_redis_collections_health_check_interval\"] = document.getElementById(\"services_redis_collections_health_check_interval_id\" + idPrefix).value;\n    json[\"services_redis_collections_idle_timeout\"] = document.getElementById(\"services_redis_collections_idle_timeout_id\" + idPrefix).value;\n    json[\"services_redis_collections_io_timeout\"] = document.getElementById(\"services_redis_collections_io_timeout_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_matching_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_matching_host\"] = document.getElementById(\"services_redis_collections_matching_host_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_max_pooled_connections\"] = document.getElementById(\"services_redis_collections_max_pooled_connections_id\" + idPrefix).value;\n    if(document.getElementById(\"services_redis_collections_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_redis_collections_name\"] = document.getElementById(\"services_redis_collections_name_id\" + idPrefix).value;\n    }\n    json[\"services_redis_collections_servers\"] = services_redis_collections_serversrowData.services_redis_collections_servers;\n      \n    loadGrid( json[\"services_redis_collections_connect_timeout\"], json[\"services_redis_collections_cross_domain_support_master_authn_server_url\"], json[\"services_redis_collections_cross_domain_support_master_session_code_lifetime\"], json[\"services_redis_collections_health_check_interval\"], json[\"services_redis_collections_idle_timeout\"], json[\"services_redis_collections_io_timeout\"], json[\"services_redis_collections_matching_host\"], json[\"services_redis_collections_max_pooled_connections\"], json[\"services_redis_collections_name\"], json[\"services_redis_collections_servers\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setservices_redis_collections_servers, setservices_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_trust_certificates, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"services_redis_collections_connect_timeout_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_cross_domain_support_master_authn_server_url_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_cross_domain_support_master_session_code_lifetime_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_health_check_interval_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_idle_timeout_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_io_timeout_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_matching_host_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_max_pooled_connections_id\").value = \"\";\n    document.getElementById(\"services_redis_collections_name_id\").value = \"\";\n    services_redis_collections_serversrowData.services_redis_collections_servers = []\n    setservices_redis_collections_servers(services_redis_collections_serversrowData.services_redis_collections_servers);\n\n    services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = []\n    setservices_redis_collections_servers_ssl_client_certificate(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate);\n\n    services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = []\n    setservices_redis_collections_servers_ssl_trust_certificates(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"services_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addservicesredis_collectionsPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst services_redis_collections_serversheaderData = [\n    {\n    header: 'Host',\n    key: 'host',\n  },\n{\n    header: 'Name',\n    key: 'name',\n  },\n{\n    header: 'Password',\n    key: 'password',\n  },\n{\n    header: 'Port',\n    key: 'port',\n  },\n{\n    header: 'Username',\n    key: 'username',\n  },\n\n];\n\nconst services_redis_collections_serversrowData = {services_redis_collections_servers: []};\n\nconst services_redis_collections_servershandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_host_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_name_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_password_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_port_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_ssl_sni_id\" + idPrefix).value = \"\";\n    document.getElementById(\"services_redis_collections_servers_username_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollections_serversPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_client_certificaterowData = {services_redis_collections_servers_ssl_client_certificate: []};\n\nconst services_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst services_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst services_redis_collections_servers_ssl_trust_certificatesrowData = {services_redis_collections_servers_ssl_trust_certificates: []};\n\nconst services_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"services_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"services_redis_collections_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addservicesrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"services_redis_collections_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Servicesredis_collectionsAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [services_redis_collections_servers, setservices_redis_collections_servers] = React.useState([]);\n    const [fetchedservices_redis_collections_servers, setFetchedservices_redis_collections_servers] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_serversloadGrid();\n    }, [fetchedservices_redis_collections_servers]);\n\n    const services_redis_collections_serversloadGrid = React.useCallback(async (services_redis_collections_servers_host, services_redis_collections_servers_name, services_redis_collections_servers_password, services_redis_collections_servers_port, services_redis_collections_servers_ssl_sni, services_redis_collections_servers_username, services_redis_collections_servers_ssl_client_certificate,services_redis_collections_servers_ssl_trust_certificates,add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_name) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_serversrowData.services_redis_collections_servers.length; i++) {\n              var tempId = ((services_redis_collections_serversrowData.services_redis_collections_servers[i].name)?services_redis_collections_serversrowData.services_redis_collections_servers[i].name:\"\") + \"\";\n              if((window.services_redis_collections_serversediting != true && window.services_redis_collections_serversediting != \"true\") || tempId != window.services_redis_collections_serversrowId) {\n                attrs.push(services_redis_collections_serversrowData.services_redis_collections_servers[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_name)?services_redis_collections_servers_name:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              host: services_redis_collections_servers_host,\nname: services_redis_collections_servers_name,\npassword: services_redis_collections_servers_password,\nport: services_redis_collections_servers_port,\n    ssl: {\nclient_certificate: services_redis_collections_servers_ssl_client_certificate,\nsni: services_redis_collections_servers_ssl_sni,\ntrust_certificates: services_redis_collections_servers_ssl_trust_certificates,\n    },\nusername: services_redis_collections_servers_username,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_serversrowData.services_redis_collections_servers.length; i++) {\n              if(services_redis_collections_serversrowData.services_redis_collections_servers[i].name !== services_redis_collections_servers_name ) {\n                attrs.push(services_redis_collections_serversrowData.services_redis_collections_servers[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_serversrowData.services_redis_collections_servers;\n        }\n        services_redis_collections_serversrowData.services_redis_collections_servers = attrs;\n        const data = {services_redis_collections_servers: attrs};\n        setservices_redis_collections_servers(data.services_redis_collections_servers);\n\n        if(services_redis_collections_servers_name !== undefined && services_redis_collections_servers_name !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_client_certificate, setservices_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_client_certificate, setFetchedservices_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_client_certificate]);\n\n    const services_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate)?services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_client_certificateediting != true && window.services_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_client_certificate_client_certificate)?services_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: services_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i].client_certificate !== services_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate;\n        }\n        services_redis_collections_servers_ssl_client_certificaterowData.services_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {services_redis_collections_servers_ssl_client_certificate: attrs};\n        setservices_redis_collections_servers_ssl_client_certificate(data.services_redis_collections_servers_ssl_client_certificate);\n\n        if(services_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && services_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [services_redis_collections_servers_ssl_trust_certificates, setservices_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedservices_redis_collections_servers_ssl_trust_certificates, setFetchedservices_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      services_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedservices_redis_collections_servers_ssl_trust_certificates]);\n\n    const services_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (services_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.services_redis_collections_servers_ssl_trust_certificatesediting != true && window.services_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.services_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((services_redis_collections_servers_ssl_trust_certificates_trust_certificates)?services_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: services_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== services_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates;\n        }\n        services_redis_collections_servers_ssl_trust_certificatesrowData.services_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {services_redis_collections_servers_ssl_trust_certificates: attrs};\n        setservices_redis_collections_servers_ssl_trust_certificates(data.services_redis_collections_servers_ssl_trust_certificates);\n\n        if(services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && services_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [services_redis_collections_connect_timeout, setservices_redis_collections_connect_timeout] = useState(2),\n    updateservices_redis_collections_connect_timeout = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_cross_domain_support_master_authn_server_url, setservices_redis_collections_cross_domain_support_master_authn_server_url] = useState(''),\n    updateservices_redis_collections_cross_domain_support_master_authn_server_url = useCallback((evt) => setservices_redis_collections_cross_domain_support_master_authn_server_url(evt.target.value), []);\n\n    const [services_redis_collections_cross_domain_support_master_session_code_lifetime, setservices_redis_collections_cross_domain_support_master_session_code_lifetime] = useState(30),\n    updateservices_redis_collections_cross_domain_support_master_session_code_lifetime = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_health_check_interval, setservices_redis_collections_health_check_interval] = useState(10),\n    updateservices_redis_collections_health_check_interval = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_idle_timeout, setservices_redis_collections_idle_timeout] = useState(10),\n    updateservices_redis_collections_idle_timeout = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_io_timeout, setservices_redis_collections_io_timeout] = useState(30),\n    updateservices_redis_collections_io_timeout = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_matching_host, setservices_redis_collections_matching_host] = useState(''),\n    updateservices_redis_collections_matching_host = useCallback((evt) => setservices_redis_collections_matching_host(evt.target.value), []);\n\n    const [services_redis_collections_max_pooled_connections, setservices_redis_collections_max_pooled_connections] = useState(50),\n    updateservices_redis_collections_max_pooled_connections = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_name, setservices_redis_collections_name] = useState(''),\n    updateservices_redis_collections_name = useCallback((evt) => setservices_redis_collections_name(evt.target.value), []);\n\n    const [services_redis_collections_servers_host, setservices_redis_collections_servers_host] = useState(''),\n    updateservices_redis_collections_servers_host = useCallback((evt) => setservices_redis_collections_servers_host(evt.target.value), []);\n\n    const [services_redis_collections_servers_name, setservices_redis_collections_servers_name] = useState(''),\n    updateservices_redis_collections_servers_name = useCallback((evt) => {\n      setservices_redis_collections_servers_name(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(services_redis_collections_serversrowData.services_redis_collections_servers, setservices_redis_collections_servers_name_valid, setservices_redis_collections_servers_name_invalid_text, \"Services Redis Collections Servers\", \"name\", tempId);\n    }, []);\n\n    const [services_redis_collections_servers_name_valid, setservices_redis_collections_servers_name_valid] = useState(true);\n    const [services_redis_collections_servers_name_invalid_text, setservices_redis_collections_servers_name_invalid_text] = useState(\"\");\n\n\n    const [services_redis_collections_servers_password, setservices_redis_collections_servers_password] = useState(''),\n    updateservices_redis_collections_servers_password = useCallback((evt) => setservices_redis_collections_servers_password(evt.target.value), []);\n\n    const [services_redis_collections_servers_port, setservices_redis_collections_servers_port] = useState(6379),\n    updateservices_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [services_redis_collections_servers_ssl_sni, setservices_redis_collections_servers_ssl_sni] = useState(''),\n    updateservices_redis_collections_servers_ssl_sni = useCallback((evt) => setservices_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n    const [services_redis_collections_servers_username, setservices_redis_collections_servers_username] = useState(''),\n    updateservices_redis_collections_servers_username = useCallback((evt) => setservices_redis_collections_servers_username(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < services_redis_collections_serversrowData.services_redis_collections_servers.length; i++) {\n        if(services_redis_collections_serversrowData.services_redis_collections_servers[i].id === window.services_redis_collections_serversrowId) {\n        setservices_redis_collections_servers_host((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].host !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].host:\"\");\n        setservices_redis_collections_servers_name((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].name !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].name:\"\");\n        setservices_redis_collections_servers_password((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].password !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].password:\"\");\n        setservices_redis_collections_servers_port((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].port !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].port:\"\");\n        setservices_redis_collections_servers_ssl_sni((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].ssl !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].ssl.sni !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].ssl.sni:\"\");\n        setservices_redis_collections_servers_username((services_redis_collections_serversrowData.services_redis_collections_servers[i] !== undefined && services_redis_collections_serversrowData.services_redis_collections_servers[i].username !== undefined )?services_redis_collections_serversrowData.services_redis_collections_servers[i].username:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addservicesredis_collectionsPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"services_redis_collections_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"cross_domain_support_tab\" + idPrefix}>Cross Domain Support</Tab>\n                <Tab tabFor={\"servers_tab\" + idPrefix}>Servers</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n  <h3>Collections</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_connect_timeout} id={\"services_redis_collections_connect_timeout_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_connect_timeout_tooltip_id\" + idPrefix}  min={0}  label=\"Connect Timeout\" onChange={props.updateservices_redis_collections_connect_timeout}/>\n          <ReactTooltip id={\"services_redis_collections_connect_timeout_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds to wait for a connection to be established with a Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_health_check_interval} id={\"services_redis_collections_health_check_interval_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_health_check_interval_tooltip_id\" + idPrefix}  min={1}  label=\"Health Check Interval\" onChange={props.updateservices_redis_collections_health_check_interval}/>\n          <ReactTooltip id={\"services_redis_collections_health_check_interval_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The interval (in seconds) between health check requests sent to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_idle_timeout} id={\"services_redis_collections_idle_timeout_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_idle_timeout_tooltip_id\" + idPrefix}  min={0}  label=\"Idle Timeout\" onChange={props.updateservices_redis_collections_idle_timeout}/>\n          <ReactTooltip id={\"services_redis_collections_idle_timeout_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds a pooled connection can remain idle before the connection is closed.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_io_timeout} id={\"services_redis_collections_io_timeout_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_io_timeout_tooltip_id\" + idPrefix}  min={0}  label=\"IO Timeout\" onChange={props.updateservices_redis_collections_io_timeout}/>\n          <ReactTooltip id={\"services_redis_collections_io_timeout_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds to wait for a valid response from a Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_matching_host}  id={\"services_redis_collections_matching_host_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_matching_host_tooltip_id\" + idPrefix}  labelText=\"Matching Host\" onChange={props.updateservices_redis_collections_matching_host}/>\n          <ReactTooltip id={\"services_redis_collections_matching_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Any specific hosts (obtained from the Host header of the HTTP request) for which this collection should be used.<br/>This entry is only applicable to Redis collections being used  for storing session data.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_max_pooled_connections} id={\"services_redis_collections_max_pooled_connections_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_max_pooled_connections_tooltip_id\" + idPrefix}  min={0}  label=\"Max Pooled Connections\" onChange={props.updateservices_redis_collections_max_pooled_connections}/>\n          <ReactTooltip id={\"services_redis_collections_max_pooled_connections_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of pooled connections to a Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <TextInput  invalid={!props.services_redis_collections_name_valid}  invalidText={props.services_redis_collections_name_invalid_text}  value={props.services_redis_collections_name}  id={\"services_redis_collections_name_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_redis_collections_name}/>\n          <ReactTooltip id={\"services_redis_collections_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the redis collection.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_name || !props.services_redis_collections_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"cross_domain_support_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections : </span><br/>                  <h2>Cross Domain Support Settings</h2><hr/>\n                  <Collapsible tabIndex=\"0\" trigger=\"Specifies the configuration information associated with the sharing of sessions across multiple DNS domains\">\n                    <p>Specifies the configuration information associated with the sharing of sessions across multiple DNS domains.<br/>These entries are only applicable to Redis collections being used  for storing session data.</p>\n                  </Collapsible>\n\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n  <h3>Cross Domain Support</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <TextInput  value={props.services_redis_collections_cross_domain_support_master_authn_server_url}  id={\"services_redis_collections_cross_domain_support_master_authn_server_url_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_cross_domain_support_master_authn_server_url_tooltip_id\" + idPrefix}  labelText=\"Master Authentication Server URL\" onChange={props.updateservices_redis_collections_cross_domain_support_master_authn_server_url}/>\n          <ReactTooltip id={\"services_redis_collections_cross_domain_support_master_authn_server_url_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The base URL of the master authentication server for this collection of Redis servers.  The master authentication server, if specified, will be responsible for the generation of all new sessions for this collection.  The entry should be of the format: `http&#123;s}://server&#123;:port}`.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n          <NumberInput value={props.services_redis_collections_cross_domain_support_master_session_code_lifetime} id={\"services_redis_collections_cross_domain_support_master_session_code_lifetime_id\" + idPrefix}  data-tooltip-id={\"services_redis_collections_cross_domain_support_master_session_code_lifetime_tooltip_id\" + idPrefix}  min={1}  label=\"Master Session Code Lifetime\" onChange={props.updateservices_redis_collections_cross_domain_support_master_session_code_lifetime}/>\n          <ReactTooltip id={\"services_redis_collections_cross_domain_support_master_session_code_lifetime_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The maximum number of seconds that a session code, used when communicating the session information from the master authentication server, will remain valid.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_name || !props.services_redis_collections_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"servers_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_redis_collections_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Redis / Collections : </span><br/>                  <h2>Servers Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div services_redis_collections_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"services_redis_collections_servers_tooltip_id\" + idPrefix} >Servers</h3><hr/>\n</div>\n          <ReactTooltip id={\"services_redis_collections_servers_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Used to define the configuration for the individual Redis servers within the collection.<br/></div></ReactTooltip>\n\n                <div id={\"services_redis_collections_serversTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <DataTable id={\"services_redis_collections_serversTable\" + idPrefix} isSortable\n                        headers={services_redis_collections_serversheaderData}\n                        rows={services_redis_collections_serversrowData.services_redis_collections_servers}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {services_redis_collections_servershandleAdd(idPrefix, [setservices_redis_collections_servers_host(''),    setservices_redis_collections_servers_name(''),    setservices_redis_collections_servers_name_valid(true),    setservices_redis_collections_servers_password(''),    setservices_redis_collections_servers_port(6379),    setservices_redis_collections_servers_ssl_sni(''),    setservices_redis_collections_servers_username(''),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversDeleteModal row={row} loadGrid={services_redis_collections_serversloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServicesrediscollectionsserversEdit  data={services_redis_collections_serversrowData.services_redis_collections_servers} setData={setDataMain} row={row} loadGrid={services_redis_collections_serversloadGrid} dataLoad={dataLoad} editing={true} name={\"services_redis_collections_servers\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_host={updateservices_redis_collections_servers_host} services_redis_collections_servers_host={services_redis_collections_servers_host}\n            updateservices_redis_collections_servers_name={updateservices_redis_collections_servers_name} services_redis_collections_servers_name={services_redis_collections_servers_name}\n            services_redis_collections_servers_name_valid={services_redis_collections_servers_name_valid}\n            services_redis_collections_servers_name_invalid_text={services_redis_collections_servers_name_invalid_text}\n            updateservices_redis_collections_servers_password={updateservices_redis_collections_servers_password} services_redis_collections_servers_password={services_redis_collections_servers_password}\n            updateservices_redis_collections_servers_port={updateservices_redis_collections_servers_port} services_redis_collections_servers_port={services_redis_collections_servers_port}\n            updateservices_redis_collections_servers_ssl_sni={updateservices_redis_collections_servers_ssl_sni} services_redis_collections_servers_ssl_sni={services_redis_collections_servers_ssl_sni}\n            updateservices_redis_collections_servers_username={updateservices_redis_collections_servers_username} services_redis_collections_servers_username={services_redis_collections_servers_username}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_redis_collections_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_redis_collections_name || !props.services_redis_collections_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversAdd loadGrid={services_redis_collections_serversloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateservices_redis_collections_servers_host={updateservices_redis_collections_servers_host} services_redis_collections_servers_host={services_redis_collections_servers_host}\n            updateservices_redis_collections_servers_name={updateservices_redis_collections_servers_name} services_redis_collections_servers_name={services_redis_collections_servers_name}\n            services_redis_collections_servers_name_valid={services_redis_collections_servers_name_valid}\n            services_redis_collections_servers_name_invalid_text={services_redis_collections_servers_name_invalid_text}\n            updateservices_redis_collections_servers_password={updateservices_redis_collections_servers_password} services_redis_collections_servers_password={services_redis_collections_servers_password}\n            updateservices_redis_collections_servers_port={updateservices_redis_collections_servers_port} services_redis_collections_servers_port={services_redis_collections_servers_port}\n            updateservices_redis_collections_servers_ssl_sni={updateservices_redis_collections_servers_ssl_sni} services_redis_collections_servers_ssl_sni={services_redis_collections_servers_ssl_sni}\n            updateservices_redis_collections_servers_username={updateservices_redis_collections_servers_username} services_redis_collections_servers_username={services_redis_collections_servers_username}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServicesrediscollectionsserversEdit  loadGrid={services_redis_collections_serversloadGrid} dataLoad={dataLoad} name={\"services_redis_collections_servers\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateservices_redis_collections_servers_host={updateservices_redis_collections_servers_host} services_redis_collections_servers_host={services_redis_collections_servers_host}\n            updateservices_redis_collections_servers_name={updateservices_redis_collections_servers_name} services_redis_collections_servers_name={services_redis_collections_servers_name}\n            services_redis_collections_servers_name_valid={services_redis_collections_servers_name_valid}\n            services_redis_collections_servers_name_invalid_text={services_redis_collections_servers_name_invalid_text}\n            updateservices_redis_collections_servers_password={updateservices_redis_collections_servers_password} services_redis_collections_servers_password={services_redis_collections_servers_password}\n            updateservices_redis_collections_servers_port={updateservices_redis_collections_servers_port} services_redis_collections_servers_port={services_redis_collections_servers_port}\n            updateservices_redis_collections_servers_ssl_sni={updateservices_redis_collections_servers_ssl_sni} services_redis_collections_servers_ssl_sni={services_redis_collections_servers_ssl_sni}\n            updateservices_redis_collections_servers_username={updateservices_redis_collections_servers_username} services_redis_collections_servers_username={services_redis_collections_servers_username}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Servicesredis_collectionsAdd;\n"],"names":["ServicesrediscollectionsserversDeleteModal","lazy","ServicesrediscollectionsserversAdd","ServicesrediscollectionsserversEdit","ServicesrediscollectionsserverssslclientCertificateDeleteModal","ServicesrediscollectionsserverssslclientCertificateAdd","ServicesrediscollectionsserverssslclientCertificateEdit","ServicesrediscollectionsserversssltrustCertificatesDeleteModal","ServicesrediscollectionsserversssltrustCertificatesAdd","ServicesrediscollectionsserversssltrustCertificatesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","services_redis_collections_serversrowData","services_redis_collections_servers","handleClose","handleAdd","setservices_redis_collections_servers","setservices_redis_collections_servers_ssl_client_certificate","setservices_redis_collections_servers_ssl_trust_certificates","doAdd","services_redis_collections_servers_ssl_client_certificaterowData","services_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_trust_certificatesrowData","services_redis_collections_servers_ssl_trust_certificates","updateStyle","style","display","closeAdd","services_redis_collections_serversheaderData","header","key","services_redis_collections_servershandleAdd","clearFields","i","length","eval","services_redis_collections_servers_ssl_client_certificateheaderData","services_redis_collections_servers_ssl_client_certificatehandleAdd","services_redis_collections_servers_ssl_trust_certificatesheaderData","services_redis_collections_servers_ssl_trust_certificateshandleAdd","Servicesredis_collectionsAdd","props","row","React","fetchedservices_redis_collections_servers","setFetchedservices_redis_collections_servers","services_redis_collections_serversloadGrid","async","services_redis_collections_servers_host","services_redis_collections_servers_name","services_redis_collections_servers_password","services_redis_collections_servers_port","services_redis_collections_servers_ssl_sni","services_redis_collections_servers_username","add","attrs","tempId","name","window","services_redis_collections_serversediting","services_redis_collections_serversrowId","push","newId","id","host","password","port","ssl","client_certificate","sni","trust_certificates","username","e","console","log","fetchedservices_redis_collections_servers_ssl_client_certificate","setFetchedservices_redis_collections_servers_ssl_client_certificate","services_redis_collections_servers_ssl_client_certificateloadGrid","services_redis_collections_servers_ssl_client_certificate_client_certificate","services_redis_collections_servers_ssl_client_certificateediting","services_redis_collections_servers_ssl_client_certificaterowId","fetchedservices_redis_collections_servers_ssl_trust_certificates","setFetchedservices_redis_collections_servers_ssl_trust_certificates","services_redis_collections_servers_ssl_trust_certificatesloadGrid","services_redis_collections_servers_ssl_trust_certificates_trust_certificates","services_redis_collections_servers_ssl_trust_certificatesediting","services_redis_collections_servers_ssl_trust_certificatesrowId","services_redis_collections_connect_timeout","setservices_redis_collections_connect_timeout","useState","updateservices_redis_collections_connect_timeout","useCallback","evt","services_redis_collections_cross_domain_support_master_authn_server_url","setservices_redis_collections_cross_domain_support_master_authn_server_url","updateservices_redis_collections_cross_domain_support_master_authn_server_url","target","services_redis_collections_cross_domain_support_master_session_code_lifetime","setservices_redis_collections_cross_domain_support_master_session_code_lifetime","updateservices_redis_collections_cross_domain_support_master_session_code_lifetime","services_redis_collections_health_check_interval","setservices_redis_collections_health_check_interval","updateservices_redis_collections_health_check_interval","services_redis_collections_idle_timeout","setservices_redis_collections_idle_timeout","updateservices_redis_collections_idle_timeout","services_redis_collections_io_timeout","setservices_redis_collections_io_timeout","updateservices_redis_collections_io_timeout","services_redis_collections_matching_host","setservices_redis_collections_matching_host","updateservices_redis_collections_matching_host","services_redis_collections_max_pooled_connections","setservices_redis_collections_max_pooled_connections","updateservices_redis_collections_max_pooled_connections","services_redis_collections_name","setservices_redis_collections_name","updateservices_redis_collections_name","setservices_redis_collections_servers_host","updateservices_redis_collections_servers_host","setservices_redis_collections_servers_name","updateservices_redis_collections_servers_name","validateField","setservices_redis_collections_servers_name_valid","setservices_redis_collections_servers_name_invalid_text","services_redis_collections_servers_name_valid","services_redis_collections_servers_name_invalid_text","setservices_redis_collections_servers_password","updateservices_redis_collections_servers_password","setservices_redis_collections_servers_port","updateservices_redis_collections_servers_port","setservices_redis_collections_servers_ssl_sni","updateservices_redis_collections_servers_ssl_sni","setservices_redis_collections_servers_username","updateservices_redis_collections_servers_username","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","NumberInput","min","label","onChange","ReactTooltip","clickable","place","effect","maxWidth","TextInput","labelText","invalid","services_redis_collections_name_valid","invalidText","services_redis_collections_name_invalid_text","Button","onClick","disabled","Collapsible","tabIndex","trigger","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"sourceRoot":""}