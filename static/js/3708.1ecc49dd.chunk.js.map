{"version":3,"file":"static/js/3708.1ecc49dd.chunk.js","mappings":"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","sources":["content/policiesPage/policieshttp_transformationspreaznAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationspreaznpathsDeleteModal = lazy(() => import('./policieshttp_transformationspreaznpathsDeleteModal'));\nconst PolicieshttpTransformationspreaznpathsAdd = lazy(() => import('./policieshttp_transformationspreaznpathsAdd'));\nconst PolicieshttpTransformationspreaznpathsEdit = lazy(() => import('./policieshttp_transformationspreaznpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_preazn_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_host\"] = document.getElementById(\"policies_http_transformations_preazn_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_preazn_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_method\"] = document.getElementById(\"policies_http_transformations_preazn_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_preazn_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_name\"] = document.getElementById(\"policies_http_transformations_preazn_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_preazn_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_rule\"] = document.getElementById(\"policies_http_transformations_preazn_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_preazn_paths\"] = policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths;\n      \n    loadGrid( json[\"policies_http_transformations_preazn_host\"], json[\"policies_http_transformations_preazn_method\"], json[\"policies_http_transformations_preazn_name\"], json[\"policies_http_transformations_preazn_rule\"], json[\"policies_http_transformations_preazn_paths\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_preazn_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_preazn_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_preazn_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_preazn_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_preazn_rule_id\").value = \"\";\n    policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths = []\n    setpolicies_http_transformations_preazn_paths(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_preaznPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_preazn_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_preazn_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_preazn_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_preazn_pathsrowData = {policies_http_transformations_preazn_paths: []};\n\nconst policies_http_transformations_preazn_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_preazn_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_preazn_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationspreazn_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_preazn_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_preaznAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_preazn_paths, setpolicies_http_transformations_preazn_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_preazn_paths, setFetchedpolicies_http_transformations_preazn_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_preazn_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_preazn_paths]);\n\n    const policies_http_transformations_preazn_pathsloadGrid = React.useCallback(async (policies_http_transformations_preazn_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_preazn_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths.length; i++) {\n              var tempId = ((policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths)?policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_preazn_pathsediting != true && window.policies_http_transformations_preazn_pathsediting != \"true\") || tempId != window.policies_http_transformations_preazn_pathsrowId) {\n                attrs.push(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_preazn_paths_paths)?policies_http_transformations_preazn_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_preazn_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths.length; i++) {\n              if(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths !== policies_http_transformations_preazn_paths_paths ) {\n                attrs.push(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths;\n        }\n        policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths = attrs;\n        const data = {policies_http_transformations_preazn_paths: attrs};\n        setpolicies_http_transformations_preazn_paths(data.policies_http_transformations_preazn_paths);\n\n        if(policies_http_transformations_preazn_paths_paths !== undefined && policies_http_transformations_preazn_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_preazn_host, setpolicies_http_transformations_preazn_host] = useState(''),\n    updatepolicies_http_transformations_preazn_host = useCallback((evt) => setpolicies_http_transformations_preazn_host(evt.target.value), []);\n\n    const [policies_http_transformations_preazn_method, setpolicies_http_transformations_preazn_method] = useState(''),\n    updatepolicies_http_transformations_preazn_method = useCallback((evt) => setpolicies_http_transformations_preazn_method(evt.target.value), []);\n\n    const [policies_http_transformations_preazn_name, setpolicies_http_transformations_preazn_name] = useState(''),\n    updatepolicies_http_transformations_preazn_name = useCallback((evt) => setpolicies_http_transformations_preazn_name(evt.target.value), []);\n\n    const [policies_http_transformations_preazn_paths_paths, setpolicies_http_transformations_preazn_paths_paths] = useState(''),\n    updatepolicies_http_transformations_preazn_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_preazn_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths, setpolicies_http_transformations_preazn_paths_paths_valid, setpolicies_http_transformations_preazn_paths_paths_invalid_text, \"Policies Http Transformations Preazn Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_preazn_paths_paths_valid, setpolicies_http_transformations_preazn_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_preazn_paths_paths_invalid_text, setpolicies_http_transformations_preazn_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_preazn_rule, setpolicies_http_transformations_preazn_rule] = useState(''),\n    updatepolicies_http_transformations_preazn_rule = useCallback((evt) => setpolicies_http_transformations_preazn_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths.length; i++) {\n        if(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].id === window.policies_http_transformations_preazn_pathsrowId) {\n        setpolicies_http_transformations_preazn_paths_paths((policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i] !== undefined && policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths !== undefined )?policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_preaznPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_preazn_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_preazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Preazn : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_preazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n  <h3>Preazn</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_preazn_host}  id={\"policies_http_transformations_preazn_host_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_preazn_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_preazn_host}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_preazn_method}  id={\"policies_http_transformations_preazn_method_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_preazn_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_preazn_method}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_method_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_preazn_name_valid}  invalidText={props.policies_http_transformations_preazn_name_invalid_text}  value={props.policies_http_transformations_preazn_name}  id={\"policies_http_transformations_preazn_name_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_preazn_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_preazn_name}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_preazn_rule}  id={\"policies_http_transformations_preazn_rule_id\" + idPrefix}  data-tooltip-id={\"policies_http_transformations_preazn_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_preazn_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_rule_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_preazn_name || !props.policies_http_transformations_preazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_preazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Preazn : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_preazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"policies_http_transformations_preazn_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_preazn_paths_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_preazn_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_preazn_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_preazn_pathsheaderData}\n                        rows={policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_preazn_pathshandleAdd(idPrefix, [setpolicies_http_transformations_preazn_paths_paths(''),    setpolicies_http_transformations_preazn_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspreaznpathsDeleteModal row={row} loadGrid={policies_http_transformations_preazn_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspreaznpathsEdit  data={policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_preazn_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_preazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_preazn_paths_paths={updatepolicies_http_transformations_preazn_paths_paths} policies_http_transformations_preazn_paths_paths={policies_http_transformations_preazn_paths_paths}\n            policies_http_transformations_preazn_paths_paths_valid={policies_http_transformations_preazn_paths_paths_valid}\n            policies_http_transformations_preazn_paths_paths_invalid_text={policies_http_transformations_preazn_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_preazn_name || !props.policies_http_transformations_preazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspreaznpathsAdd loadGrid={policies_http_transformations_preazn_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_preazn_paths_paths={updatepolicies_http_transformations_preazn_paths_paths} policies_http_transformations_preazn_paths_paths={policies_http_transformations_preazn_paths_paths}\n            policies_http_transformations_preazn_paths_paths_valid={policies_http_transformations_preazn_paths_paths_valid}\n            policies_http_transformations_preazn_paths_paths_invalid_text={policies_http_transformations_preazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspreaznpathsEdit  loadGrid={policies_http_transformations_preazn_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_preazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_preazn_paths_paths={updatepolicies_http_transformations_preazn_paths_paths} policies_http_transformations_preazn_paths_paths={policies_http_transformations_preazn_paths_paths}\n            policies_http_transformations_preazn_paths_paths_valid={policies_http_transformations_preazn_paths_paths_valid}\n            policies_http_transformations_preazn_paths_paths_invalid_text={policies_http_transformations_preazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_preaznAdd;\n"],"names":["PolicieshttpTransformationspreaznpathsDeleteModal","lazy","PolicieshttpTransformationspreaznpathsAdd","PolicieshttpTransformationspreaznpathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","policies_http_transformations_preazn_pathsrowData","policies_http_transformations_preazn_paths","handleClose","handleAdd","setpolicies_http_transformations_preazn_paths","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_preazn_pathsheaderData","header","key","policies_http_transformations_preazn_pathshandleAdd","clearFields","i","length","eval","Policieshttp_transformations_preaznAdd","props","row","React","fetchedpolicies_http_transformations_preazn_paths","setFetchedpolicies_http_transformations_preazn_paths","policies_http_transformations_preazn_pathsloadGrid","async","policies_http_transformations_preazn_paths_paths","add","attrs","tempId","paths","window","policies_http_transformations_preazn_pathsediting","policies_http_transformations_preazn_pathsrowId","push","newId","id","e","console","log","policies_http_transformations_preazn_host","setpolicies_http_transformations_preazn_host","useState","updatepolicies_http_transformations_preazn_host","useCallback","evt","target","policies_http_transformations_preazn_method","setpolicies_http_transformations_preazn_method","updatepolicies_http_transformations_preazn_method","policies_http_transformations_preazn_name","setpolicies_http_transformations_preazn_name","updatepolicies_http_transformations_preazn_name","setpolicies_http_transformations_preazn_paths_paths","updatepolicies_http_transformations_preazn_paths_paths","validateField","setpolicies_http_transformations_preazn_paths_paths_valid","setpolicies_http_transformations_preazn_paths_paths_invalid_text","policies_http_transformations_preazn_paths_paths_valid","policies_http_transformations_preazn_paths_paths_invalid_text","policies_http_transformations_preazn_rule","setpolicies_http_transformations_preazn_rule","updatepolicies_http_transformations_preazn_rule","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","invalid","policies_http_transformations_preazn_name_valid","invalidText","policies_http_transformations_preazn_name_invalid_text","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","name","parentIdPrefix"],"sourceRoot":""}