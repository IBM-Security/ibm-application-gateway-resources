{"version":3,"sources":["content/policiesPage/policieshttp_transformationspreaznAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","PolicieshttpTransformationspreaznpathsDeleteModal","lazy","all","__webpack_require__","bind","PolicieshttpTransformationspreaznpathsAdd","PolicieshttpTransformationspreaznpathsEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","policies_http_transformations_preazn_pathsrowData","policies_http_transformations_preazn_paths","handleClose","handleAdd","setpolicies_http_transformations_preazn_paths","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_preazn_pathsheaderData","header","key","policies_http_transformations_preazn_pathshandleAdd","clearFields","eval","Policieshttp_transformations_preaznAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedpolicies_http_transformations_preazn_paths","setFetchedpolicies_http_transformations_preazn_paths","useEffect","policies_http_transformations_preazn_pathsloadGrid","useCallback","_ref","_asyncToGenerator","_callee","policies_http_transformations_preazn_paths_paths","add","attrs","tempId","newId","_context","paths","window","policies_http_transformations_preazn_pathsediting","policies_http_transformations_preazn_pathsrowId","id","console","log","_x","_x2","apply","arguments","_useState","_useState2","policies_http_transformations_preazn_host","setpolicies_http_transformations_preazn_host","updatepolicies_http_transformations_preazn_host","evt","target","_useState3","_useState4","policies_http_transformations_preazn_method","setpolicies_http_transformations_preazn_method","updatepolicies_http_transformations_preazn_method","_useState5","_useState6","policies_http_transformations_preazn_name","setpolicies_http_transformations_preazn_name","updatepolicies_http_transformations_preazn_name","_useState7","_useState8","setpolicies_http_transformations_preazn_paths_paths","updatepolicies_http_transformations_preazn_paths_paths","validateField","setpolicies_http_transformations_preazn_paths_paths_valid","setpolicies_http_transformations_preazn_paths_paths_invalid_text","_useState9","_useState10","policies_http_transformations_preazn_paths_paths_valid","_useState11","_useState12","policies_http_transformations_preazn_paths_paths_invalid_text","_useState13","_useState14","policies_http_transformations_preazn_rule","setpolicies_http_transformations_preazn_rule","updatepolicies_http_transformations_preazn_rule","_React$useState5","_React$useState6","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","invalid","policies_http_transformations_preazn_name_valid","invalidText","policies_http_transformations_preazn_name_invalid_text","Button","onClick","disabled","tabIndex","DataTable","isSortable","headers","rows","render","_ref2","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix"],"mappings":"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","file":"static/js/312.bf76d548.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationspreaznpathsDeleteModal = lazy(() => import('./policieshttp_transformationspreaznpathsDeleteModal'));\nconst PolicieshttpTransformationspreaznpathsAdd = lazy(() => import('./policieshttp_transformationspreaznpathsAdd'));\nconst PolicieshttpTransformationspreaznpathsEdit = lazy(() => import('./policieshttp_transformationspreaznpathsEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_preazn_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_host\"] = document.getElementById(\"policies_http_transformations_preazn_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_preazn_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_method\"] = document.getElementById(\"policies_http_transformations_preazn_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_preazn_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_name\"] = document.getElementById(\"policies_http_transformations_preazn_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_preazn_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_preazn_rule\"] = document.getElementById(\"policies_http_transformations_preazn_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_preazn_paths\"] = policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths;\n      \n    loadGrid( json[\"policies_http_transformations_preazn_host\"], json[\"policies_http_transformations_preazn_method\"], json[\"policies_http_transformations_preazn_name\"], json[\"policies_http_transformations_preazn_rule\"], json[\"policies_http_transformations_preazn_paths\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_preazn_paths, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_preazn_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_preazn_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_preazn_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_preazn_rule_id\").value = \"\";\n    policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths = []\n    setpolicies_http_transformations_preazn_paths(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_preaznPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_preazn_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_preazn_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_preazn_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_preazn_pathsrowData = {policies_http_transformations_preazn_paths: []};\n\nconst policies_http_transformations_preazn_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_preazn_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_preazn_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationspreazn_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_preazn_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_preaznAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_preazn_paths, setpolicies_http_transformations_preazn_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_preazn_paths, setFetchedpolicies_http_transformations_preazn_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_preazn_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_preazn_paths]);\n\n    const policies_http_transformations_preazn_pathsloadGrid = React.useCallback(async (policies_http_transformations_preazn_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_preazn_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths.length; i++) {\n              var tempId = ((policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths)?policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_preazn_pathsediting != true && window.policies_http_transformations_preazn_pathsediting != \"true\") || tempId != window.policies_http_transformations_preazn_pathsrowId) {\n                attrs.push(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_preazn_paths_paths)?policies_http_transformations_preazn_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_preazn_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths.length; i++) {\n              if(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths !== policies_http_transformations_preazn_paths_paths ) {\n                attrs.push(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths;\n        }\n        policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths = attrs;\n        const data = {policies_http_transformations_preazn_paths: attrs};\n        setpolicies_http_transformations_preazn_paths(data.policies_http_transformations_preazn_paths);\n\n        if(policies_http_transformations_preazn_paths_paths !== undefined && policies_http_transformations_preazn_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_preazn_host, setpolicies_http_transformations_preazn_host] = useState(''),\n    updatepolicies_http_transformations_preazn_host = useCallback((evt) => setpolicies_http_transformations_preazn_host(evt.target.value), []);\n\n    const [policies_http_transformations_preazn_method, setpolicies_http_transformations_preazn_method] = useState(''),\n    updatepolicies_http_transformations_preazn_method = useCallback((evt) => setpolicies_http_transformations_preazn_method(evt.target.value), []);\n\n    const [policies_http_transformations_preazn_name, setpolicies_http_transformations_preazn_name] = useState(''),\n    updatepolicies_http_transformations_preazn_name = useCallback((evt) => setpolicies_http_transformations_preazn_name(evt.target.value), []);\n\n    const [policies_http_transformations_preazn_paths_paths, setpolicies_http_transformations_preazn_paths_paths] = useState(''),\n    updatepolicies_http_transformations_preazn_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_preazn_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths, setpolicies_http_transformations_preazn_paths_paths_valid, setpolicies_http_transformations_preazn_paths_paths_invalid_text, \"Policies Http Transformations Preazn Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_preazn_paths_paths_valid, setpolicies_http_transformations_preazn_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_preazn_paths_paths_invalid_text, setpolicies_http_transformations_preazn_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_preazn_rule, setpolicies_http_transformations_preazn_rule] = useState(''),\n    updatepolicies_http_transformations_preazn_rule = useCallback((evt) => setpolicies_http_transformations_preazn_rule(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths.length; i++) {\n        if(policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].id === window.policies_http_transformations_preazn_pathsrowId) {\n        setpolicies_http_transformations_preazn_paths_paths((policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i] !== undefined && policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths !== undefined )?policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths[i].paths:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_preaznPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_preazn_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_preazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Preazn : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_preazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n  <h3>Preazn</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_preazn_host}  id={\"policies_http_transformations_preazn_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_preazn_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_preazn_host}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_preazn_method}  id={\"policies_http_transformations_preazn_method_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_preazn_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_preazn_method}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_method_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_preazn_name_valid}  invalidText={props.policies_http_transformations_preazn_name_invalid_text}  value={props.policies_http_transformations_preazn_name}  id={\"policies_http_transformations_preazn_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_preazn_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_preazn_name}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_preazn_rule}  id={\"policies_http_transformations_preazn_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_preazn_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_preazn_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_preazn_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_preazn_name || !props.policies_http_transformations_preazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_preazn_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Preazn : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_preazn_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_preazn_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_preazn_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched. This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_preazn_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_preazn_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_preazn_pathsheaderData}\n                        rows={policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_preazn_pathshandleAdd(idPrefix, [setpolicies_http_transformations_preazn_paths_paths(''),    setpolicies_http_transformations_preazn_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspreaznpathsDeleteModal row={row} loadGrid={policies_http_transformations_preazn_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationspreaznpathsEdit  data={policies_http_transformations_preazn_pathsrowData.policies_http_transformations_preazn_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_preazn_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_preazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_preazn_paths_paths={updatepolicies_http_transformations_preazn_paths_paths} policies_http_transformations_preazn_paths_paths={policies_http_transformations_preazn_paths_paths}\n            policies_http_transformations_preazn_paths_paths_valid={policies_http_transformations_preazn_paths_paths_valid}\n            policies_http_transformations_preazn_paths_paths_invalid_text={policies_http_transformations_preazn_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_preazn_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_preazn_name || !props.policies_http_transformations_preazn_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspreaznpathsAdd loadGrid={policies_http_transformations_preazn_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_preazn_paths_paths={updatepolicies_http_transformations_preazn_paths_paths} policies_http_transformations_preazn_paths_paths={policies_http_transformations_preazn_paths_paths}\n            policies_http_transformations_preazn_paths_paths_valid={policies_http_transformations_preazn_paths_paths_valid}\n            policies_http_transformations_preazn_paths_paths_invalid_text={policies_http_transformations_preazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationspreaznpathsEdit  loadGrid={policies_http_transformations_preazn_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_preazn_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_preazn_paths_paths={updatepolicies_http_transformations_preazn_paths_paths} policies_http_transformations_preazn_paths_paths={policies_http_transformations_preazn_paths_paths}\n            policies_http_transformations_preazn_paths_paths_valid={policies_http_transformations_preazn_paths_paths_valid}\n            policies_http_transformations_preazn_paths_paths_invalid_text={policies_http_transformations_preazn_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_preaznAdd;\n"],"sourceRoot":""}