{"version":3,"sources":["content/policiesPage/policieshttp_transformationsresponseAdd.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","PolicieshttpTransformationsresponsepathsDeleteModal","lazy","all","__webpack_require__","bind","PolicieshttpTransformationsresponsepathsAdd","PolicieshttpTransformationsresponsepathsEdit","PolicieshttpTransformationsresponseattributesDeleteModal","PolicieshttpTransformationsresponseattributesAdd","PolicieshttpTransformationsresponseattributesEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","endsWith","policies_http_transformations_response_pathsrowData","policies_http_transformations_response_paths","policies_http_transformations_response_attributesrowData","policies_http_transformations_response_attributes","handleClose","handleAdd","setpolicies_http_transformations_response_paths","setpolicies_http_transformations_response_attributes","doAdd","updateStyle","style","display","closeAdd","policies_http_transformations_response_pathsheaderData","header","key","policies_http_transformations_response_pathshandleAdd","clearFields","eval","policies_http_transformations_response_attributesheaderData","policies_http_transformations_response_attributeshandleAdd","Policieshttp_transformations_responseAdd","props","row","_React$useState","React","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","fetchedpolicies_http_transformations_response_paths","setFetchedpolicies_http_transformations_response_paths","useEffect","policies_http_transformations_response_pathsloadGrid","useCallback","_ref","_asyncToGenerator","_callee","policies_http_transformations_response_paths_paths","add","attrs","tempId","newId","_context","paths","window","policies_http_transformations_response_pathsediting","policies_http_transformations_response_pathsrowId","id","console","log","_x","_x2","apply","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedpolicies_http_transformations_response_attributes","setFetchedpolicies_http_transformations_response_attributes","policies_http_transformations_response_attributesloadGrid","_ref2","_callee2","policies_http_transformations_response_attributes_attributes","_context2","attributes","policies_http_transformations_response_attributesediting","policies_http_transformations_response_attributesrowId","_x3","_x4","_useState","_useState2","policies_http_transformations_response_name","setpolicies_http_transformations_response_name","updatepolicies_http_transformations_response_name","evt","target","_useState3","_useState4","policies_http_transformations_response_host","setpolicies_http_transformations_response_host","updatepolicies_http_transformations_response_host","_useState5","_useState6","setpolicies_http_transformations_response_paths_paths","updatepolicies_http_transformations_response_paths_paths","validateField","setpolicies_http_transformations_response_paths_paths_valid","setpolicies_http_transformations_response_paths_paths_invalid_text","_useState7","_useState8","policies_http_transformations_response_paths_paths_valid","_useState9","_useState10","policies_http_transformations_response_paths_paths_invalid_text","_useState11","_useState12","policies_http_transformations_response_method","setpolicies_http_transformations_response_method","updatepolicies_http_transformations_response_method","_useState13","_useState14","policies_http_transformations_response_rule","setpolicies_http_transformations_response_rule","updatepolicies_http_transformations_response_rule","_useState15","_useState16","setpolicies_http_transformations_response_attributes_attributes","updatepolicies_http_transformations_response_attributes_attributes","setpolicies_http_transformations_response_attributes_attributes_valid","setpolicies_http_transformations_response_attributes_attributes_invalid_text","_useState17","_useState18","policies_http_transformations_response_attributes_attributes_valid","_useState19","_useState20","policies_http_transformations_response_attributes_attributes_invalid_text","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","createElement","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","tabIndex","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","place","effect","maxWidth","marginLeft","marginBottom","DataTable","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","aria-label","TableToolbarContent","Button","onClick","Table","assign","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","disabled","policies_http_transformations_response_name_valid","TextInput","invalid","invalidText","policies_http_transformations_response_name_invalid_text","labelText","onChange","_ref4"],"mappings":"2hEACAA,oBAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,GAAA,IAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,GAAA,SAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,KAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,EAAA,SAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,IAAA,MAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,IAAAD,EAAAsB,OAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,KAAA,SAAAa,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,EAAA,kBAAA2B,OAAA,IAAAC,EAAArC,OAAAsC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAxC,GAAAG,EAAAyB,KAAAY,EAAA9B,KAAA0B,EAAAI,GAAA,IAAAE,EAAAP,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAO,EAAA5C,GAAA,0BAAA6C,QAAA,SAAA9C,GAAAkB,EAAAjB,EAAAD,EAAA,SAAAC,GAAA,OAAAsC,KAAAQ,QAAA/C,EAAAC,OAAA,SAAA+C,EAAA/C,EAAAD,GAAA,SAAAiD,EAAA/C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,iBAAAA,GAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,KAAA,SAAAnD,GAAAgD,EAAA,OAAAhD,EAAAS,EAAAE,IAAA,SAAAX,GAAAgD,EAAA,QAAAhD,EAAAS,EAAAE,KAAAZ,EAAAkD,QAAAnB,GAAAqB,KAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,IAAA,SAAAf,GAAA,OAAAgD,EAAA,QAAAhD,EAAAS,EAAAE,OAAAE,EAAAe,KAAA,IAAA3B,EAAAK,EAAAgC,KAAA,WAAA9B,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,EAAA,SAAAA,EAAAE,GAAA+C,EAAAhD,EAAAI,EAAAL,EAAAE,KAAA,OAAAA,MAAAkD,KAAAC,YAAA,SAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,GAAA,YAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,SAAA,WAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,MAAA,UAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,OAAA,SAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAAkD,SAAA7D,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAmC,UAAA,oCAAA3D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,IAAA2C,MAAArD,EAAAF,EAAAiE,YAAArD,EAAAH,MAAAP,EAAAgE,KAAAlE,EAAAmE,QAAA,WAAAjE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAmC,UAAA,oCAAA9D,EAAAuD,SAAA,KAAAtB,GAAA,SAAAiC,EAAAnE,GAAA,IAAAD,EAAA,CAAAqE,OAAApE,EAAA,SAAAA,IAAAD,EAAAsE,SAAArE,EAAA,SAAAA,IAAAD,EAAAuE,WAAAtE,EAAA,GAAAD,EAAAwE,SAAAvE,EAAA,IAAAsC,KAAAkC,WAAAC,KAAA1E,GAAA,SAAA2E,EAAA1E,GAAA,IAAAD,EAAAC,EAAA2E,YAAA,GAAA5E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA2E,WAAA5E,EAAA,SAAAyB,EAAAxB,GAAAsC,KAAAkC,WAAA,EAAAJ,OAAA,SAAApE,EAAA6C,QAAAsB,EAAA7B,WAAAsC,OAAA,YAAAlC,EAAA3C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAkE,KAAA,OAAAlE,EAAA,IAAA8E,MAAA9E,EAAA+E,QAAA,KAAAxE,GAAA,EAAAG,EAAA,SAAAwD,IAAA,OAAA3D,EAAAP,EAAA+E,QAAA,GAAA1E,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA2D,EAAAzD,MAAAT,EAAAO,GAAA2D,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAzD,MAAAR,EAAAiE,EAAAX,MAAA,EAAAW,GAAA,OAAAxD,EAAAwD,KAAAxD,GAAA,UAAAsD,iBAAAhE,EAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAqC,EAAA,eAAAnC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA4C,YAAA9D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAiF,oBAAA,SAAAhF,GAAA,IAAAD,EAAA,mBAAAC,KAAAiF,YAAA,QAAAlF,QAAAoC,GAAA,uBAAApC,EAAAgF,aAAAhF,EAAAmF,QAAAnF,EAAAoF,KAAA,SAAAnF,GAAA,OAAAE,OAAAkF,eAAAlF,OAAAkF,eAAApF,EAAAoC,IAAApC,EAAAqF,UAAAjD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAoB,GAAA3C,GAAAD,EAAAuF,MAAA,SAAAtF,GAAA,OAAAkD,QAAAlD,IAAA4C,EAAAG,EAAA5C,WAAAc,EAAA8B,EAAA5C,UAAAU,EAAA,kBAAAyB,OAAAvC,EAAAgD,gBAAAhD,EAAAwF,MAAA,SAAAvF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,MAAA+E,SAAA,IAAA7E,EAAA,IAAAoC,EAAA1B,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAiF,oBAAA/E,GAAAU,IAAAsD,OAAAd,KAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAsD,UAAArB,EAAAD,GAAA1B,EAAA0B,EAAA5B,EAAA,aAAAE,EAAA0B,EAAAhC,EAAA,kBAAA2B,OAAArB,EAAA0B,EAAA,mDAAA5C,EAAA0F,KAAA,SAAAzF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAwE,KAAArE,GAAA,OAAAH,EAAAyF,UAAA,SAAAzB,IAAA,KAAAhE,EAAA6E,QAAA,KAAA9E,EAAAC,EAAA0F,MAAA,GAAA3F,KAAAD,EAAA,OAAAkE,EAAAzD,MAAAR,EAAAiE,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAAlE,EAAA2C,SAAAlB,EAAArB,UAAA,CAAA8E,YAAAzD,EAAAoD,MAAA,SAAA7E,GAAA,GAAAuC,KAAAsD,KAAA,EAAAtD,KAAA2B,KAAA,EAAA3B,KAAAoB,KAAApB,KAAAqB,MAAA3D,EAAAsC,KAAAgB,MAAA,EAAAhB,KAAAkB,SAAA,KAAAlB,KAAAiB,OAAA,OAAAjB,KAAAV,IAAA5B,EAAAsC,KAAAkC,WAAA3B,QAAA6B,IAAA3E,EAAA,QAAAE,KAAAqC,KAAA,MAAArC,EAAA4F,OAAA,IAAAzF,EAAAyB,KAAAS,KAAArC,KAAA4E,OAAA5E,EAAA6F,MAAA,MAAAxD,KAAArC,GAAAD,IAAA+F,KAAA,WAAAzD,KAAAgB,MAAA,MAAAtD,EAAAsC,KAAAkC,WAAA,GAAAG,WAAA,aAAA3E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,OAAAU,KAAA0D,MAAApC,kBAAA,SAAA7D,GAAA,GAAAuC,KAAAgB,KAAA,MAAAvD,EAAA,IAAAE,EAAAqC,KAAA,SAAA2D,EAAA7F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAAgE,KAAA7D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,EAAA,QAAAA,EAAAgC,KAAAkC,WAAAM,OAAA,EAAAxE,GAAA,IAAAA,EAAA,KAAAG,EAAA6B,KAAAkC,WAAAlE,GAAAK,EAAAF,EAAAkE,WAAA,YAAAlE,EAAA2D,OAAA,OAAA6B,EAAA,UAAAxF,EAAA2D,QAAA9B,KAAAsD,KAAA,KAAA/E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,IAAAuB,KAAAsD,KAAAnF,EAAA4D,SAAA,OAAA4B,EAAAxF,EAAA4D,UAAA,MAAA/B,KAAAsD,KAAAnF,EAAA6D,WAAA,OAAA2B,EAAAxF,EAAA6D,iBAAA,GAAAzD,GAAA,GAAAyB,KAAAsD,KAAAnF,EAAA4D,SAAA,OAAA4B,EAAAxF,EAAA4D,UAAA,YAAAtD,EAAA,UAAAsC,MAAA,6CAAAf,KAAAsD,KAAAnF,EAAA6D,WAAA,OAAA2B,EAAAxF,EAAA6D,gBAAAT,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAAqC,KAAAkC,WAAAM,OAAA,EAAA7E,GAAA,IAAAA,EAAA,KAAAK,EAAAgC,KAAAkC,WAAAvE,GAAA,GAAAK,EAAA8D,QAAA9B,KAAAsD,MAAAxF,EAAAyB,KAAAvB,EAAA,eAAAgC,KAAAsD,KAAAtF,EAAAgE,WAAA,KAAA7D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA2D,QAAArE,MAAAU,EAAA6D,aAAA7D,EAAA,UAAAE,EAAAF,IAAAkE,WAAA,UAAAhE,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA6B,KAAAiB,OAAA,OAAAjB,KAAA2B,KAAAxD,EAAA6D,WAAApC,GAAAI,KAAA4D,SAAAvF,IAAAuF,SAAA,SAAAlG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAAW,KAAA2B,KAAAjE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAAW,KAAA0D,KAAA1D,KAAAV,IAAA5B,EAAA4B,IAAAU,KAAAiB,OAAA,SAAAjB,KAAA2B,KAAA,kBAAAjE,EAAA2B,MAAA5B,IAAAuC,KAAA2B,KAAAlE,GAAAmC,GAAAiE,OAAA,SAAAnG,GAAA,QAAAD,EAAAuC,KAAAkC,WAAAM,OAAA,EAAA/E,GAAA,IAAAA,EAAA,KAAAE,EAAAqC,KAAAkC,WAAAzE,GAAA,GAAAE,EAAAqE,aAAAtE,EAAA,OAAAsC,KAAA4D,SAAAjG,EAAA0E,WAAA1E,EAAAsE,UAAAG,EAAAzE,GAAAiC,IAAAkE,MAAA,SAAApG,GAAA,QAAAD,EAAAuC,KAAAkC,WAAAM,OAAA,EAAA/E,GAAA,IAAAA,EAAA,KAAAE,EAAAqC,KAAAkC,WAAAzE,GAAA,GAAAE,EAAAmE,SAAApE,EAAA,KAAAI,EAAAH,EAAA0E,WAAA,aAAAvE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA8C,EAAAzE,GAAA,OAAAK,GAAA,UAAA+C,MAAA,0BAAAgD,cAAA,SAAAtG,EAAAE,EAAAG,GAAA,OAAAkC,KAAAkB,SAAA,CAAA5C,SAAA8B,EAAA3C,GAAAiE,WAAA/D,EAAAiE,QAAA9D,GAAA,SAAAkC,KAAAiB,SAAAjB,KAAAV,IAAA5B,GAAAkC,IAAAnC,EA0BA,IAAMuG,oDAAsDC,gDAAK,kBAAMf,QAAAgB,IAAA,CAAAC,oBAAA1G,EAAA,IAAA0G,oBAAA1G,EAAA,OAAAoD,KAAAsD,oBAAAC,KAAA,aACjEC,4CAA8CJ,gDAAK,kBAAME,oBAAA1G,EAAA,IAAAoD,KAAAsD,oBAAAC,KAAA,aACzDE,6CAA+CL,gDAAK,kBAAME,oBAAA1G,EAAA,IAAAoD,KAAAsD,oBAAAC,KAAA,aAC1DG,yDAA2DN,gDAAK,kBAAMf,QAAAgB,IAAA,CAAAC,oBAAA1G,EAAA,IAAA0G,oBAAA1G,EAAA,OAAAoD,KAAAsD,oBAAAC,KAAA,aACtEI,iDAAmDP,gDAAK,kBAAME,oBAAA1G,EAAA,IAAAoD,KAAAsD,oBAAAC,KAAA,aAC9DK,kDAAoDR,gDAAK,kBAAME,oBAAA1G,EAAA,IAAAoD,KAAAsD,oBAAAC,KAAA,aAG7DM,aAAe,aAGfC,WAAa,SAACC,EAAUC,EAAUC,QAEtBC,IAAbF,IAAwBA,EAAW,IAEtC,IAAIG,EAAO,IAEqG,IAA7GC,SAASC,eAAe,iDAAmDL,GAAU3G,MAAMiH,SAAS,OACrGH,EAAkD,4CAAIC,SAASC,eAAe,iDAAmDL,GAAU3G,QAE7B,IAA7G+G,SAASC,eAAe,iDAAmDL,GAAU3G,MAAMiH,SAAS,OACrGH,EAAkD,4CAAIC,SAASC,eAAe,iDAAmDL,GAAU3G,QAE3B,IAA/G+G,SAASC,eAAe,mDAAqDL,GAAU3G,MAAMiH,SAAS,OACvGH,EAAoD,8CAAIC,SAASC,eAAe,mDAAqDL,GAAU3G,QAEjC,IAA7G+G,SAASC,eAAe,iDAAmDL,GAAU3G,MAAMiH,SAAS,OACrGH,EAAkD,4CAAIC,SAASC,eAAe,iDAAmDL,GAAU3G,OAE7I8G,EAAmD,6CAAII,oDAAoDC,6CAC3GL,EAAwD,kDAAIM,yDAAyDC,kDAErHX,EAAUI,EAAkD,4CAAGA,EAAkD,4CAAGA,EAAoD,8CAAGA,EAAkD,4CAAGA,EAAmD,6CAAGA,EAAwD,mDAAG,GAEjVQ,YAAYX,EAAUC,IAGlBW,UAAY,SAACC,EAAiDC,EAAsDd,EAAUe,EAAOd,QACzHC,IAAbF,IAAwBA,EAAW,IAGtCI,SAASC,eAAe,kDAAkDhH,MAAQ,GAClF+G,SAASC,eAAe,kDAAkDhH,MAAQ,GAClF+G,SAASC,eAAe,oDAAoDhH,MAAQ,GACpF+G,SAASC,eAAe,kDAAkDhH,MAAQ,GAClFkH,oDAAoDC,6CAA+C,GACnGK,EAAgDN,oDAAoDC,8CAEpGC,yDAAyDC,kDAAoD,GAC7GI,EAAqDL,yDAAyDC,mDAG3GK,GACDA,IAGFJ,YAAYX,EAAWC,IAGnBU,YAAc,SAACX,EAAUC,GAC7Be,iDAAY,eAAiBhB,EAAU,UAAW,SAClDI,SAASC,eAAe,+CAAiDL,GAAUiB,MAAMC,QAAU,OAE9FjB,GACDA,KAIAkB,SAAW,SAACnB,QACEE,IAAbF,IAAwBA,EAAW,IAEtCgB,iDAAY,6CAA+ChB,EAAU,UAAW,SAChFI,SAASC,eAAe,6CAA+CL,GAAUiB,MAAMC,QAAU,QAIjGE,uDAAyD,CAC3D,CACAC,OAAQ,OACRC,IAAK,UAKHf,oDAAsD,CAACC,6CAA8C,IAErGe,sDAAwD,SAAxDA,sDAAyDvB,SAAUwB,aAIrE,QAHgBtB,IAAbF,WAAwBA,SAAW,IAGnCwB,YACD,IAAI,IAAIlI,EAAI,EAAGA,EAAIkI,YAAY7D,OAAQrE,IACrCmI,KAAKD,YAAYlI,IAIrB8G,SAASC,eAAe,wDAA0DL,UAAU3G,MAAQ,GAEpG2H,iDAAY,6CAA+ChB,SAAU,UAAW,QAEhFI,SAASC,eAAe,oDAAsDL,UAAUiB,MAAMC,QAAU,QAExGd,SAASC,eAAe,6CAA+CL,UAAUiB,MAAMC,QAAU,QAG/FQ,4DAA8D,CAChE,CACAL,OAAQ,YACRC,IAAK,eAKHb,yDAA2D,CAACC,kDAAmD,IAE/GiB,2DAA6D,SAA7DA,2DAA8D3B,SAAUwB,aAI1E,QAHgBtB,IAAbF,WAAwBA,SAAW,IAGnCwB,YACD,IAAI,IAAIlI,EAAI,EAAGA,EAAIkI,YAAY7D,OAAQrE,IACrCmI,KAAKD,YAAYlI,IAIrB8G,SAASC,eAAe,kEAAoEL,UAAU3G,MAAQ,GAE9G2H,iDAAY,6CAA+ChB,SAAU,UAAW,QAEhFI,SAASC,eAAe,yDAA2DL,UAAUiB,MAAMC,QAAU,QAE7Gd,SAASC,eAAe,6CAA+CL,UAAUiB,MAAMC,QAAU,QAI/FU,yCAA2C,SAA3CA,yCAA4CC,OAE9C,IAAIC,IAAMD,MAAMC,IACV/B,SAAW8B,MAAM9B,SACjBE,QAAU4B,MAAM5B,QAChBD,SAAY6B,MAAM7B,SAAU6B,MAAM7B,SAAS,GAAG+B,gBAEoDC,6CAAMC,SAAS,IAAGC,iBAAAC,8KAAAJ,gBAAA,GAAnHvB,6CAA4C0B,iBAAA,GAAErB,gDAA+CqB,iBAAA,GAAAE,iBACkBJ,6CAAMC,UAAS,GAAMI,iBAAAF,8KAAAC,iBAAA,GAApIE,oDAAmDD,iBAAA,GAAEE,uDAAsDF,iBAAA,GAElHL,6CAAMQ,UAAU,WACdC,wDACC,CAACH,sDAEJ,IAAMG,qDAAuDT,6CAAMU,YAAW,eAAAC,EAAAC,iLAAAjK,sBAAAqF,KAAC,SAAA6E,EAAOC,EAAoDC,GAAG,IAAAC,EAAA1J,EAAA2J,EAAAC,EAAA,OAAAvK,sBAAAuB,KAAA,SAAAiJ,GAAA,cAAAA,EAAA1E,KAAA0E,EAAArG,MAAA,OAC3I,IAEE,GADIkG,EAAQ,GACTF,EACD,GAAGC,EAAK,CACN,IAAQzJ,EAAI,EAAGA,EAAIiH,oDAAoDC,6CAA6C7C,OAAQrE,IACtH2J,GAAW1C,oDAAoDC,6CAA6ClH,GAAG8J,MAAO7C,oDAAoDC,6CAA6ClH,GAAG8J,MAAM,IAAM,IACxK,GAA9DC,OAAOC,qDAA6H,QAA9DD,OAAOC,qDAAkEL,GAAUI,OAAOE,oDAClKP,EAAM1F,KAAKiD,oDAAoDC,6CAA6ClH,IAG5G4J,GAAUJ,GAAuG,IAAM,GAC3HE,EAAM1F,KAAK,CACTkG,GAAIN,EACJE,MAAON,SAIT,IAAQxJ,EAAI,EAAGA,EAAIiH,oDAAoDC,6CAA6C7C,OAAQrE,IACvHiH,oDAAoDC,6CAA6ClH,GAAG8J,QAAUN,GAC/GE,EAAM1F,KAAKiD,oDAAoDC,6CAA6ClH,SAKlH0J,EAAQzC,oDAAoDC,6CAE9DD,oDAAoDC,6CAA+CwC,EAEnGnC,gDADa,CAACL,6CAA8CwC,GACPxC,mDAEKN,IAAvD4C,GAA2H,OAAvDA,GACnEjD,eAIJ,MAAOjH,GACP6K,QAAQC,IAAI9K,GACb,OAAAuK,EAAAzG,OAAA,UACM,GAAI,wBAAAyG,EAAAvE,SAAAiE,MACZ,gBAAAc,EAAAC,GAAA,OAAAjB,EAAAkB,MAAA1I,KAAA2I,YAxC6E,IAwC3EC,iBAE+G/B,6CAAMC,SAAS,IAAG+B,iBAAA7B,8KAAA4B,iBAAA,GAA7HrD,kDAAiDsD,iBAAA,GAAElD,qDAAoDkD,iBAAA,GAAAC,iBACkBjC,6CAAMC,UAAS,GAAMiC,iBAAA/B,8KAAA8B,iBAAA,GAA9IE,yDAAwDD,iBAAA,GAAEE,4DAA2DF,iBAAA,GAE5HlC,6CAAMQ,UAAU,WACd6B,6DACC,CAACF,2DAEJ,IAAME,0DAA4DrC,6CAAMU,YAAW,eAAA4B,EAAA1B,iLAAAjK,sBAAAqF,KAAC,SAAAuG,EAAOC,EAA8DzB,GAAG,IAAAC,EAAA1J,EAAA2J,EAAAC,EAAA,OAAAvK,sBAAAuB,KAAA,SAAAuK,GAAA,cAAAA,EAAAhG,KAAAgG,EAAA3H,MAAA,OAC1J,IAEE,GADIkG,EAAQ,GACTwB,EACD,GAAGzB,EAAK,CACN,IAAQzJ,EAAI,EAAGA,EAAImH,yDAAyDC,kDAAkD/C,OAAQrE,IAChI2J,GAAWxC,yDAAyDC,kDAAkDpH,GAAGoL,WAAYjE,yDAAyDC,kDAAkDpH,GAAGoL,WAAW,IAAM,IACjM,GAAnErB,OAAOsB,0DAAuI,QAAnEtB,OAAOsB,0DAAuE1B,GAAUI,OAAOuB,yDAC5K5B,EAAM1F,KAAKmD,yDAAyDC,kDAAkDpH,IAGtH4J,GAAUsB,GAA2H,IAAM,GAC/IxB,EAAM1F,KAAK,CACTkG,GAAIN,EACJwB,WAAYF,SAId,IAAQlL,EAAI,EAAGA,EAAImH,yDAAyDC,kDAAkD/C,OAAQrE,IACjImH,yDAAyDC,kDAAkDpH,GAAGoL,aAAeF,GAC9HxB,EAAM1F,KAAKmD,yDAAyDC,kDAAkDpH,SAK5H0J,EAAQvC,yDAAyDC,kDAEnED,yDAAyDC,kDAAoDsC,EAE7GlC,qDADa,CAACJ,kDAAmDsC,GACPtC,wDAEUR,IAAjEsE,GAA+I,OAAjEA,GAC7E3E,eAIJ,MAAOjH,GACP6K,QAAQC,IAAI9K,GACb,OAAA6L,EAAA/H,OAAA,UACM,GAAI,wBAAA+H,EAAA7F,SAAA2F,MACZ,gBAAAM,EAAAC,GAAA,OAAAR,EAAAT,MAAA1I,KAAA2I,YAxCkF,IAwChFiB,UAImG9C,oDAAS,IAAG+C,WAAA7C,8KAAA4C,UAAA,GAA3GE,4CAA2CD,WAAA,GAAEE,+CAA8CF,WAAA,GAClGG,kDAAoDzC,uDAAY,SAAC0C,GAAG,OAAKF,+CAA+CE,EAAIC,OAAOhM,QAAQ,IAAGiM,WAExCrD,oDAAS,IAAGsD,WAAApD,8KAAAmD,WAAA,GAA3GE,4CAA2CD,WAAA,GAAEE,+CAA8CF,WAAA,GAClGG,kDAAoDhD,uDAAY,SAAC0C,GAAG,OAAKK,+CAA+CL,EAAIC,OAAOhM,QAAQ,IAAGsM,WAE1B1D,oDAAS,IAAG2D,WAAAzD,8KAAAwD,WAAA,GAAzH7C,mDAAkD8C,WAAA,GAAEC,sDAAqDD,WAAA,GAChHE,yDAA2DpD,uDAAY,SAAC0C,GACtES,sDAAsDT,EAAIC,OAAOhM,OACjE,IAAI4J,EAASmC,EAAIC,OAAOhM,MACxB0M,iDAAcxF,oDAAoDC,6CAA8CwF,4DAA6DC,mEAAoE,+CAAgD,QAAShD,IACzS,IAAGiD,WAE0HjE,qDAAS,GAAKkE,WAAAhE,8KAAA+D,WAAA,GAAvIE,yDAAwDD,WAAA,GAAEH,4DAA2DG,WAAA,GAAAE,WACkBpE,oDAAS,IAAGqE,YAAAnE,8KAAAkE,WAAA,GAAnJE,gEAA+DD,YAAA,GAAEL,mEAAkEK,YAAA,GAAAE,YAGhCvE,oDAAS,IAAGwE,YAAAtE,8KAAAqE,YAAA,GAA/GE,8CAA6CD,YAAA,GAAEE,iDAAgDF,YAAA,GACtGG,oDAAsDlE,uDAAY,SAAC0C,GAAG,OAAKuB,iDAAiDvB,EAAIC,OAAOhM,QAAQ,IAAGwN,YAE5C5E,oDAAS,IAAG6E,YAAA3E,8KAAA0E,YAAA,GAA3GE,4CAA2CD,YAAA,GAAEE,+CAA8CF,YAAA,GAClGG,kDAAoDvE,uDAAY,SAAC0C,GAAG,OAAK4B,+CAA+C5B,EAAIC,OAAOhM,QAAQ,IAAG6N,YAENjF,oDAAS,IAAGkF,YAAAhF,8KAAA+E,YAAA,GAA7I1C,6DAA4D2C,YAAA,GAAEC,gEAA+DD,YAAA,GACpIE,mEAAqE3E,uDAAY,SAAC0C,GAChFgC,gEAAgEhC,EAAIC,OAAOhM,OAC3E,IAAI4J,EAASmC,EAAIC,OAAOhM,MACxB0M,iDAActF,yDAAyDC,kDAAmD4G,sEAAuEC,6EAA8E,oDAAqD,aAActE,IACjV,IAAGuE,YAE8IvF,qDAAS,GAAKwF,YAAAtF,8KAAAqF,YAAA,GAA3JE,mEAAkED,YAAA,GAAEH,sEAAqEG,YAAA,GAAAE,YACkB1F,oDAAS,IAAG2F,YAAAzF,8KAAAwF,YAAA,GAAvKE,0EAAyED,YAAA,GAAEL,6EAA4EK,YAAA,GAAAE,iBAIxH9F,6CAAMC,UAAS,GAAM8F,kBAAA5F,8KAAA2F,iBAAA,GAApDE,YAAWD,kBAAA,GAAEE,eAAcF,kBAAA,GAClC/F,6CAAMQ,UAAU,WACd0F,YACC,CAACF,cACJ,IAAME,SAAW,WAEf,IAAI,IAAI5O,EAAI,EAAGA,EAAIiH,oDAAoDC,6CAA6C7C,OAAQrE,IACvHiH,oDAAoDC,6CAA6ClH,GAAGkK,KAAOH,OAAOE,mDACrHsC,2DAA+J3F,IAAxGK,oDAAoDC,6CAA6ClH,SAAkI4G,IAA9GK,oDAAoDC,6CAA6ClH,GAAG8J,MAAsB7C,oDAAoDC,6CAA6ClH,GAAG8J,MAAM,IAIlZ,IAAQ9J,EAAI,EAAGA,EAAImH,yDAAyDC,kDAAkD/C,OAAQrE,IACjImH,yDAAyDC,kDAAkDpH,GAAGkK,KAAOH,OAAOuB,wDAC/HwC,qEAAmLlH,IAAlHO,yDAAyDC,kDAAkDpH,SAAiJ4G,IAA7HO,yDAAyDC,kDAAkDpH,GAAGoL,WAA2BjE,yDAAyDC,kDAAkDpH,GAAGoL,WAAW,IAKpc,OAAO,GAGHyD,YAAc,SAAdA,YAAeC,aAAcC,MAC9BD,cAAgBC,MACjB5G,KAAK2G,aAAL3G,CAAmB4G,OAIvB,OACErG,6CAAAsG,cAAA,WAEEtG,6CAAAsG,cAAA,OAAK9E,GAAI,+CAAiDxD,SAAUiB,MAAO,CAACC,QAAQ,QAASqH,UAAU,yBAErGvG,6CAAAsG,cAACE,+CAAI,CAAChF,GAAK,6CAA+CxD,SAAUyI,WAAY,cAAgBzI,SAAU0I,UAAQ,EAACH,UAAU,gBAAgBtH,MAAO,CAAC0H,SAAS,SAC1J3G,6CAAAsG,cAACM,+CAAO,KACN5G,6CAAAsG,cAACO,+CAAG,CAACC,OAAQ,cAAgB9I,UAAU,WACvCgC,6CAAAsG,cAACO,+CAAG,CAACC,OAAQ,iBAAmB9I,UAAU,cAC1CgC,6CAAAsG,cAACO,+CAAG,CAACC,OAAQ,YAAc9I,UAAU,UAEvCgC,6CAAAsG,cAACS,+CAAQ,CAAC9H,MAAO,CAAC+H,MAAM,OAAQL,SAAS,QAASM,MAAO,iBAAmBjJ,UAC1EgC,6CAAAsG,cAAA,OAAKC,UAAU,oBAAoBtH,MAAO,CAACiI,OAAO,OAAQP,SAAS,SACnE3G,6CAAAsG,cAAA,OAAKC,UAAY,2EAA6EvI,UAC5FgC,6CAAAsG,cAAA,QAAMC,UAAU,kBAAiB,iDAAoDvG,6CAAAsG,cAAA,WAAK,qBAAkBtG,6CAAAsG,cAAA,UAAI,uBAAwBtG,6CAAAsG,cAAA,YAE1ItG,6CAAAsG,cAAA,OAAKC,UAAW,6DAA+DvI,UAC/EgC,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UAC5FgC,6CAAAsG,cAAA,MAAIa,SAAS,IAAKC,QAAS,SAACxQ,GAAC,OAAKyQ,8CAAaC,KAAK1Q,EAAEyM,SAASkE,OAAQ,SAAC3Q,GAAC,OAAKyQ,8CAAaG,KAAK5Q,EAAEyM,SAASoE,YAAA,EAASC,WAAU,+DAAiE1J,UAAW,cAAegC,6CAAAsG,cAAA,YAEjNtG,6CAAAsG,cAACe,8CAAY,CAAC7F,GAAI,+DAAiExD,SAAU2J,MAAM,MAAMC,OAAO,SAAS5H,6CAAAsG,cAAA,OAAKrH,MAAO,CAAE4I,SAAU,MAAO,8SAA2S7H,6CAAAsG,cAAA,WAAK,wFAAqFtG,6CAAAsG,cAAA,aAEvhBtG,6CAAAsG,cAAA,OAAK9E,GAAI,4DAA8DxD,SAAUiB,MAAO,CAAC6I,WAAW,OAAOC,aAAa,SACtH/H,6CAAAsG,cAAA,OAAKC,UAAW,2DAA6DvI,UAC3EgC,6CAAAsG,cAAC0B,uDAAS,CAACxG,GAAI,yDAA2DxD,SAAUiK,YAAU,EAC1FC,QAASxI,4DACTyI,KAAM1J,yDAAyDC,kDAC/D0J,OAAQ,SAAAC,GAAA,IACNF,EAAIE,EAAJF,KACAD,EAAOG,EAAPH,QACAI,EAAcD,EAAdC,eAEAC,GADWF,EAAXG,YACaH,EAAbE,eACeF,EAAfI,gBACaJ,EAAbK,cACsBL,EAAtBM,uBAAsB,OAE1B3I,6CAAAsG,cAACsC,uDAAc,KACb5I,6CAAAsG,cAACuC,uDAAY,CAACC,aAAW,sBACvB9I,6CAAAsG,cAACyC,uDAAmB,KAClB/I,6CAAAsG,cAAC0C,uDAAM,CAACC,QAAS,WAAOtJ,2DAA2D3B,SAAU,CAACoH,gEAAgE,IAAQE,uEAAsE,OAAY,SAG5PtF,6CAAAsG,cAAC4C,uDAAKnS,OAAAoS,OAAA,CAACC,KAAK,UAAab,KACvBvI,6CAAAsG,cAAC+C,uDAAS,KACRrJ,6CAAAsG,cAACgD,wDAAQ,KACNpB,EAAQqB,IAAI,SAAAlK,GAAM,OACjBW,6CAAAsG,cAACkD,wDAAgBlB,EAAe,CAAEjJ,WAC/BA,EAAOA,UAGZW,6CAAAsG,cAACkD,wDAAW,KAAC,aAKjBxJ,6CAAAsG,cAACmD,wDAAS,KACPtB,EAAKoB,IAAI,SAAAzJ,GAAG,OACXE,6CAAAsG,cAACgD,wDAAQ,CAAChK,IAAKQ,EAAI0B,IAChB1B,EAAI4J,MAAMH,IAAI,SAAAI,GAAI,OACjB3J,6CAAAsG,cAACsD,wDAAS,CAACtK,IAAKqK,EAAKnI,IAAKmI,EAAKtS,SAEjC2I,6CAAAsG,cAACsD,wDAAS,KACR5J,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC5I,yDAAwD,CAACoC,IAAKA,EAAK/B,SAAUsE,6DAEhFrC,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC1I,kDAAiD,CAAEyI,KAAM5H,yDAAyDC,kDAAmDqL,QAAS5D,YAAarG,IAAKA,EAAK/B,SAAUsE,0DAA2D6D,SAAUA,SAAU8D,SAAS,EAAMjO,KAAM,oDAAqDiC,SAAUA,SAAW,OAAQiM,eAAgBjM,SAC9aqH,mEAAoEA,mEAAoE7C,6DAA8DA,6DACtMkD,mEAAoEA,mEACpEG,0EAA2EA,2FAerE7F,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UAC5EgC,6CAAAsG,cAAC0C,uDAAM,CAACC,QAAS,WAAQtK,YAAYX,SAAWC,WAAa,UAC7D+B,6CAAAsG,cAAC0C,uDAAM,CAACkB,UAAYrK,MAAMoD,8CAAgDpD,MAAMsK,kDAAoDlB,QAAS,WAAQnL,WAAWC,SAAUC,SAAWC,WAAa,UAGxM+B,6CAAAsG,cAACS,+CAAQ,CAAC9H,MAAO,CAAC+H,MAAM,OAAQL,SAAS,QAASM,MAAO,cAAgBjJ,UACvEgC,6CAAAsG,cAAA,OAAKC,UAAU,oBAAoBtH,MAAO,CAACiI,OAAO,OAAQP,SAAS,SACnE3G,6CAAAsG,cAAA,OAAKC,UAAY,2EAA6EvI,UAC5FgC,6CAAAsG,cAAA,QAAMC,UAAU,kBAAiB,iDAAoDvG,6CAAAsG,cAAA,WAAK,qBAAkBtG,6CAAAsG,cAAA,UAAI,oBAAqBtG,6CAAAsG,cAAA,WAAK,iEAG5ItG,6CAAAsG,cAAA,OAAKC,UAAW,6DAA+DvI,UAC/EgC,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UAC5FgC,6CAAAsG,cAAA,UAAI,YAAatG,6CAAAsG,cAAA,YAEHtG,6CAAAsG,cAAA,OAAKC,UAAU,qBAAqBtH,MAAO,CAAC6I,WAAW,OAAOC,aAAa,SAE3E/H,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UACpFgC,6CAAAsG,cAAC8D,wDAAS,CAAEC,SAAUxK,MAAMsK,kDAAoDG,YAAazK,MAAM0K,yDAA2DlT,MAAOwI,MAAMoD,4CAA8CzB,GAAI,iDAAmDxD,SAAWoJ,QAAS,SAACxQ,GAAC,OAAKyQ,8CAAaC,KAAK1Q,EAAEyM,SAASkE,OAAQ,SAAC3Q,GAAC,OAAKyQ,8CAAaG,KAAK5Q,EAAEyM,SAASoE,YAAA,EAASC,WAAU,yDAA2D1J,SAAWwM,UAAU,SAASC,SAAU5K,MAAMsD,oDAChfnD,6CAAAsG,cAACe,8CAAY,CAAC7F,GAAI,yDAA2DxD,SAAU2J,MAAM,MAAMC,OAAO,SAAS5H,6CAAAsG,cAAA,OAAKrH,MAAO,CAAE4I,SAAU,MAAO,yDAAsD7H,6CAAAsG,cAAA,cAGlMtG,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UACpFgC,6CAAAsG,cAAC8D,wDAAS,CAAE/S,MAAOwI,MAAM2D,4CAA8ChC,GAAI,iDAAmDxD,SAAWoJ,QAAS,SAACxQ,GAAC,OAAKyQ,8CAAaC,KAAK1Q,EAAEyM,SAASkE,OAAQ,SAAC3Q,GAAC,OAAKyQ,8CAAaG,KAAK5Q,EAAEyM,SAASoE,YAAA,EAASC,WAAU,yDAA2D1J,SAAWwM,UAAU,OAAOC,SAAU5K,MAAM6D,oDAC5V1D,6CAAAsG,cAACe,8CAAY,CAAC7F,GAAI,yDAA2DxD,SAAU2J,MAAM,MAAMC,OAAO,SAAS5H,6CAAAsG,cAAA,OAAKrH,MAAO,CAAE4I,SAAU,MAAO,mKAAgK7H,6CAAAsG,cAAA,cAG5StG,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UACpFgC,6CAAAsG,cAAC8D,wDAAS,CAAE/S,MAAOwI,MAAM6E,8CAAgDlD,GAAI,mDAAqDxD,SAAWoJ,QAAS,SAACxQ,GAAC,OAAKyQ,8CAAaC,KAAK1Q,EAAEyM,SAASkE,OAAQ,SAAC3Q,GAAC,OAAKyQ,8CAAaG,KAAK5Q,EAAEyM,SAASoE,YAAA,EAASC,WAAU,2DAA6D1J,SAAWwM,UAAU,SAASC,SAAU5K,MAAM+E,sDACpW5E,6CAAAsG,cAACe,8CAAY,CAAC7F,GAAI,2DAA6DxD,SAAU2J,MAAM,MAAMC,OAAO,SAAS5H,6CAAAsG,cAAA,OAAKrH,MAAO,CAAE4I,SAAU,MAAO,+HAA4H7H,6CAAAsG,cAAA,cAG1QtG,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UACpFgC,6CAAAsG,cAAC8D,wDAAS,CAAE/S,MAAOwI,MAAMkF,4CAA8CvD,GAAI,iDAAmDxD,SAAWoJ,QAAS,SAACxQ,GAAC,OAAKyQ,8CAAaC,KAAK1Q,EAAEyM,SAASkE,OAAQ,SAAC3Q,GAAC,OAAKyQ,8CAAaG,KAAK5Q,EAAEyM,SAASoE,YAAA,EAASC,WAAU,yDAA2D1J,SAAWwM,UAAU,OAAOC,SAAU5K,MAAMoF,oDAC5VjF,6CAAAsG,cAACe,8CAAY,CAAC7F,GAAI,yDAA2DxD,SAAU2J,MAAM,MAAMC,OAAO,SAAS5H,6CAAAsG,cAAA,OAAKrH,MAAO,CAAE4I,SAAU,MAAO,gCAA6B7H,6CAAAsG,cAAA,iBAOvKtG,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UAC5EgC,6CAAAsG,cAAC0C,uDAAM,CAACC,QAAS,WAAQtK,YAAYX,SAAWC,WAAa,UAC7D+B,6CAAAsG,cAAC0C,uDAAM,CAACkB,UAAYrK,MAAMoD,8CAAgDpD,MAAMsK,kDAAoDlB,QAAS,WAAQnL,WAAWC,SAAUC,SAAWC,WAAa,UAGxM+B,6CAAAsG,cAACS,+CAAQ,CAAC9H,MAAO,CAAC+H,MAAM,OAAQL,SAAS,QAASM,MAAO,YAAcjJ,UACrEgC,6CAAAsG,cAAA,OAAKC,UAAU,oBAAoBtH,MAAO,CAACiI,OAAO,OAAQP,SAAS,SACnE3G,6CAAAsG,cAAA,OAAKC,UAAY,2EAA6EvI,UAC5FgC,6CAAAsG,cAAA,QAAMC,UAAU,kBAAiB,iDAAoDvG,6CAAAsG,cAAA,WAAK,qBAAkBtG,6CAAAsG,cAAA,UAAI,kBAAmBtG,6CAAAsG,cAAA,YAErItG,6CAAAsG,cAAA,OAAKC,UAAW,6DAA+DvI,UAC/EgC,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UAC5FgC,6CAAAsG,cAAA,MAAIa,SAAS,IAAKC,QAAS,SAACxQ,GAAC,OAAKyQ,8CAAaC,KAAK1Q,EAAEyM,SAASkE,OAAQ,SAAC3Q,GAAC,OAAKyQ,8CAAaG,KAAK5Q,EAAEyM,SAASoE,YAAA,EAASC,WAAU,0DAA4D1J,UAAW,SAAUgC,6CAAAsG,cAAA,YAEvMtG,6CAAAsG,cAACe,8CAAY,CAAC7F,GAAI,0DAA4DxD,SAAU2J,MAAM,MAAMC,OAAO,SAAS5H,6CAAAsG,cAAA,OAAKrH,MAAO,CAAE4I,SAAU,MAAO,0LAAuL7H,6CAAAsG,cAAA,aAEpUtG,6CAAAsG,cAAA,OAAK9E,GAAI,uDAAyDxD,SAAUiB,MAAO,CAAC6I,WAAW,OAAOC,aAAa,SACjH/H,6CAAAsG,cAAA,OAAKC,UAAW,2DAA6DvI,UAC3EgC,6CAAAsG,cAAC0B,uDAAS,CAACxG,GAAI,oDAAsDxD,SAAUiK,YAAU,EACrFC,QAAS9I,uDACT+I,KAAM5J,oDAAoDC,6CAC1D4J,OAAQ,SAAAsC,GAAA,IACNvC,EAAIuC,EAAJvC,KACAD,EAAOwC,EAAPxC,QACAI,EAAcoC,EAAdpC,eAEAC,GADWmC,EAAXlC,YACakC,EAAbnC,eACemC,EAAfjC,gBACaiC,EAAbhC,cACsBgC,EAAtB/B,uBAAsB,OAE1B3I,6CAAAsG,cAACsC,uDAAc,KACb5I,6CAAAsG,cAACuC,uDAAY,CAACC,aAAW,sBACvB9I,6CAAAsG,cAACyC,uDAAmB,KAClB/I,6CAAAsG,cAAC0C,uDAAM,CAACC,QAAS,WAAO1J,sDAAsDvB,SAAU,CAAC6F,sDAAsD,IAAQG,6DAA4D,OAAY,SAGnOhE,6CAAAsG,cAAC4C,uDAAKnS,OAAAoS,OAAA,CAACC,KAAK,UAAab,KACvBvI,6CAAAsG,cAAC+C,uDAAS,KACRrJ,6CAAAsG,cAACgD,wDAAQ,KACNpB,EAAQqB,IAAI,SAAAlK,GAAM,OACjBW,6CAAAsG,cAACkD,wDAAgBlB,EAAe,CAAEjJ,WAC/BA,EAAOA,UAGZW,6CAAAsG,cAACkD,wDAAW,KAAC,aAKjBxJ,6CAAAsG,cAACmD,wDAAS,KACPtB,EAAKoB,IAAI,SAAAzJ,GAAG,OACXE,6CAAAsG,cAACgD,wDAAQ,CAAChK,IAAKQ,EAAI0B,IAChB1B,EAAI4J,MAAMH,IAAI,SAAAI,GAAI,OACjB3J,6CAAAsG,cAACsD,wDAAS,CAACtK,IAAKqK,EAAKnI,IAAKmI,EAAKtS,SAEjC2I,6CAAAsG,cAACsD,wDAAS,KACR5J,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAACnJ,oDAAmD,CAAC2C,IAAKA,EAAK/B,SAAU0C,wDAE3ET,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC7I,6CAA4C,CAAE4I,KAAM9H,oDAAoDC,6CAA8CuL,QAAS5D,YAAarG,IAAKA,EAAK/B,SAAU0C,qDAAsDyF,SAAUA,SAAU8D,SAAS,EAAMjO,KAAM,+CAAgDiC,SAAUA,SAAW,OAAQiM,eAAgBjM,SACrZ8F,yDAA0DA,yDAA0DhD,mDAAoDA,mDACxKsD,yDAA0DA,yDAC1DG,gEAAiEA,iFAe3DvE,6CAAAsG,cAAA,OAAKC,UAAY,2DAA6DvI,UAC5EgC,6CAAAsG,cAAC0C,uDAAM,CAACC,QAAS,WAAQtK,YAAYX,SAAWC,WAAa,UAC7D+B,6CAAAsG,cAAC0C,uDAAM,CAACkB,UAAYrK,MAAMoD,8CAAgDpD,MAAMsK,kDAAoDlB,QAAS,WAAQnL,WAAWC,SAAUC,SAAWC,WAAa,WAIpM+B,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC9I,4CAA2C,CAACO,SAAU0C,qDAAsDxC,QAAS,WAAOkB,SAASnB,WAAaA,SAAUA,SACrK8F,yDAA0DA,yDAA0DhD,mDAAoDA,mDACxKsD,yDAA0DA,yDAC1DG,gEAAiEA,mEAG3DvE,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC7I,6CAA4C,CAAEM,SAAU0C,qDAAsDyF,SAAUA,SAAUnK,KAAM,+CAAgDiC,SAAUA,SAAW,OAAQiM,eAAgBjM,SAC9O8F,yDAA0DA,yDAA0DhD,mDAAoDA,mDACxKsD,yDAA0DA,yDAC1DG,gEAAiEA,mEAG3DvE,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC3I,iDAAgD,CAACI,SAAUsE,0DAA2DpE,QAAS,WAAOkB,SAASnB,WAAaA,SAAUA,SAC/KqH,mEAAoEA,mEAAoE7C,6DAA8DA,6DACtMkD,mEAAoEA,mEACpEG,0EAA2EA,6EAGrE7F,6CAAAsG,cAACuD,4CAAQ,CAACC,SAAU9J,6CAAAsG,cAAA,aAClBtG,6CAAAsG,cAAC1I,kDAAiD,CAAEG,SAAUsE,0DAA2D6D,SAAUA,SAAUnK,KAAM,oDAAqDiC,SAAUA,SAAW,OAAQiM,eAAgBjM,SAC7PqH,mEAAoEA,mEAAoE7C,6DAA8DA,6DACtMkD,mEAAoEA,mEACpEG,0EAA2EA,gFAQxEjG","file":"static/js/295.42f1b9c3.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst PolicieshttpTransformationsresponsepathsDeleteModal = lazy(() => import('./policieshttp_transformationsresponsepathsDeleteModal'));\nconst PolicieshttpTransformationsresponsepathsAdd = lazy(() => import('./policieshttp_transformationsresponsepathsAdd'));\nconst PolicieshttpTransformationsresponsepathsEdit = lazy(() => import('./policieshttp_transformationsresponsepathsEdit'));\nconst PolicieshttpTransformationsresponseattributesDeleteModal = lazy(() => import('./policieshttp_transformationsresponseattributesDeleteModal'));\nconst PolicieshttpTransformationsresponseattributesAdd = lazy(() => import('./policieshttp_transformationsresponseattributesAdd'));\nconst PolicieshttpTransformationsresponseattributesEdit = lazy(() => import('./policieshttp_transformationsresponseattributesEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_name\"] = document.getElementById(\"policies_http_transformations_response_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_host\"] = document.getElementById(\"policies_http_transformations_response_host_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_method\"] = document.getElementById(\"policies_http_transformations_response_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"policies_http_transformations_response_rule\"] = document.getElementById(\"policies_http_transformations_response_rule_id\" + idPrefix).value;\n    }\n    json[\"policies_http_transformations_response_paths\"] = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n    json[\"policies_http_transformations_response_attributes\"] = policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes;\n      \n    loadGrid( json[\"policies_http_transformations_response_name\"], json[\"policies_http_transformations_response_host\"], json[\"policies_http_transformations_response_method\"], json[\"policies_http_transformations_response_rule\"], json[\"policies_http_transformations_response_paths\"], json[\"policies_http_transformations_response_attributes\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setpolicies_http_transformations_response_paths, setpolicies_http_transformations_response_attributes, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"policies_http_transformations_response_name_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_host_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_method_id\").value = \"\";\n    document.getElementById(\"policies_http_transformations_response_rule_id\").value = \"\";\n    policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = []\n    setpolicies_http_transformations_response_paths(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths);\n\n    policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes = []\n    setpolicies_http_transformations_response_attributes(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"policies_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addpolicieshttp_transformations_responsePage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst policies_http_transformations_response_pathsheaderData = [\n    {\n    header: 'Path',\n    key: 'paths',\n  },\n\n];\n\nconst policies_http_transformations_response_pathsrowData = {policies_http_transformations_response_paths: []};\n\nconst policies_http_transformations_response_pathshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_paths_paths_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_pathsPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst policies_http_transformations_response_attributesheaderData = [\n    {\n    header: 'Attribute',\n    key: 'attributes',\n  },\n\n];\n\nconst policies_http_transformations_response_attributesrowData = {policies_http_transformations_response_attributes: []};\n\nconst policies_http_transformations_response_attributeshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"policies_http_transformations_response_attributes_attributes_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"policies_http_transformations_response_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addpolicieshttp_transformationsresponse_attributesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"policies_http_transformations_response_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Policieshttp_transformations_responseAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_paths, setFetchedpolicies_http_transformations_response_paths] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_pathsloadGrid();\n    }, [fetchedpolicies_http_transformations_response_paths]);\n\n    const policies_http_transformations_response_pathsloadGrid = React.useCallback(async (policies_http_transformations_response_paths_paths, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_paths_paths) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              var tempId = ((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths)?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\") + \"\";\n              if((window.policies_http_transformations_response_pathsediting != true && window.policies_http_transformations_response_pathsediting != \"true\") || tempId != window.policies_http_transformations_response_pathsrowId) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_paths_paths)?policies_http_transformations_response_paths_paths:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              paths: policies_http_transformations_response_paths_paths,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n              if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== policies_http_transformations_response_paths_paths ) {\n                attrs.push(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths;\n        }\n        policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths = attrs;\n        const data = {policies_http_transformations_response_paths: attrs};\n        setpolicies_http_transformations_response_paths(data.policies_http_transformations_response_paths);\n\n        if(policies_http_transformations_response_paths_paths !== undefined && policies_http_transformations_response_paths_paths !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [policies_http_transformations_response_attributes, setpolicies_http_transformations_response_attributes] = React.useState([]);\n    const [fetchedpolicies_http_transformations_response_attributes, setFetchedpolicies_http_transformations_response_attributes] = React.useState(false);\n\n    React.useEffect(() => {\n      policies_http_transformations_response_attributesloadGrid();\n    }, [fetchedpolicies_http_transformations_response_attributes]);\n\n    const policies_http_transformations_response_attributesloadGrid = React.useCallback(async (policies_http_transformations_response_attributes_attributes, add) => {\n      try {\n        var attrs = [];\n        if(policies_http_transformations_response_attributes_attributes) {\n          if(add) {\n            for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n              var tempId = ((policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes)?policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes:\"\") + \"\";\n              if((window.policies_http_transformations_response_attributesediting != true && window.policies_http_transformations_response_attributesediting != \"true\") || tempId != window.policies_http_transformations_response_attributesrowId) {\n                attrs.push(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i]);\n              }\n            }\n            var newId = ((policies_http_transformations_response_attributes_attributes)?policies_http_transformations_response_attributes_attributes:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              attributes: policies_http_transformations_response_attributes_attributes,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n              if(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes !== policies_http_transformations_response_attributes_attributes ) {\n                attrs.push(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i]);\n              }\n            }\n          }\n        } else {\n          attrs = policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes;\n        }\n        policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes = attrs;\n        const data = {policies_http_transformations_response_attributes: attrs};\n        setpolicies_http_transformations_response_attributes(data.policies_http_transformations_response_attributes);\n\n        if(policies_http_transformations_response_attributes_attributes !== undefined && policies_http_transformations_response_attributes_attributes !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [policies_http_transformations_response_name, setpolicies_http_transformations_response_name] = useState(''),\n    updatepolicies_http_transformations_response_name = useCallback((evt) => setpolicies_http_transformations_response_name(evt.target.value), []);\n\n    const [policies_http_transformations_response_host, setpolicies_http_transformations_response_host] = useState(''),\n    updatepolicies_http_transformations_response_host = useCallback((evt) => setpolicies_http_transformations_response_host(evt.target.value), []);\n\n    const [policies_http_transformations_response_paths_paths, setpolicies_http_transformations_response_paths_paths] = useState(''),\n    updatepolicies_http_transformations_response_paths_paths = useCallback((evt) => {\n      setpolicies_http_transformations_response_paths_paths(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths, setpolicies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_invalid_text, \"Policies Http Transformations Response Paths\", \"paths\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_paths_paths_valid, setpolicies_http_transformations_response_paths_paths_valid] = useState(true);\n    const [policies_http_transformations_response_paths_paths_invalid_text, setpolicies_http_transformations_response_paths_paths_invalid_text] = useState(\"\");\n\n\n    const [policies_http_transformations_response_method, setpolicies_http_transformations_response_method] = useState(''),\n    updatepolicies_http_transformations_response_method = useCallback((evt) => setpolicies_http_transformations_response_method(evt.target.value), []);\n\n    const [policies_http_transformations_response_rule, setpolicies_http_transformations_response_rule] = useState(''),\n    updatepolicies_http_transformations_response_rule = useCallback((evt) => setpolicies_http_transformations_response_rule(evt.target.value), []);\n\n    const [policies_http_transformations_response_attributes_attributes, setpolicies_http_transformations_response_attributes_attributes] = useState(''),\n    updatepolicies_http_transformations_response_attributes_attributes = useCallback((evt) => {\n      setpolicies_http_transformations_response_attributes_attributes(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes, setpolicies_http_transformations_response_attributes_attributes_valid, setpolicies_http_transformations_response_attributes_attributes_invalid_text, \"Policies Http Transformations Response Attributes\", \"attributes\", tempId);\n    }, []);\n\n    const [policies_http_transformations_response_attributes_attributes_valid, setpolicies_http_transformations_response_attributes_attributes_valid] = useState(true);\n    const [policies_http_transformations_response_attributes_attributes_invalid_text, setpolicies_http_transformations_response_attributes_attributes_invalid_text] = useState(\"\");\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths.length; i++) {\n        if(policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].id === window.policies_http_transformations_response_pathsrowId) {\n        setpolicies_http_transformations_response_paths_paths((policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i] !== undefined && policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths !== undefined )?policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths[i].paths:\"\");\n        }\n      }\n\n      for(var i = 0; i < policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes.length; i++) {\n        if(policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].id === window.policies_http_transformations_response_attributesrowId) {\n        setpolicies_http_transformations_response_attributes_attributes((policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i] !== undefined && policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes !== undefined )?policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes[i].attributes:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addpolicieshttp_transformations_responsePage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"policies_http_transformations_response_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"attributes_tab\" + idPrefix}>Attributes</Tab>\n                <Tab tabFor={\"paths_tab\" + idPrefix}>Paths</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"attributes_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Attributes Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_attributes_tooltip_id\" + idPrefix} >Attributes</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_attributes_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the rule is a legacy XSLT based rule, this entry specifies the credential  attributes which will be included in the XML input document, used when  evaluating the HTTP transformation rule.  The attributes will be stored in the HTTPResponse/credential/attributes/attribute path of the XML document.<br/>This is entry is not required and has no effect when using a Lua transformation rule.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_attributesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_attributesTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_attributesheaderData}\n                        rows={policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_attributeshandleAdd(idPrefix, [setpolicies_http_transformations_response_attributes_attributes(''),    setpolicies_http_transformations_response_attributes_attributes_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponseattributesDeleteModal row={row} loadGrid={policies_http_transformations_response_attributesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponseattributesEdit  data={policies_http_transformations_response_attributesrowData.policies_http_transformations_response_attributes} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_attributesloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3>Response</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  invalid={!props.policies_http_transformations_response_name_valid}  invalidText={props.policies_http_transformations_response_name_invalid_text}  value={props.policies_http_transformations_response_name}  id={\"policies_http_transformations_response_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updatepolicies_http_transformations_response_name}/>\n          <ReactTooltip id={\"policies_http_transformations_response_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is associated with this transformation.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_host}  id={\"policies_http_transformations_response_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updatepolicies_http_transformations_response_host}/>\n          <ReactTooltip id={\"policies_http_transformations_response_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The host (obtained from the host header in the request) for which this transformation will take place. If no host header is specified all hosts will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_method}  id={\"policies_http_transformations_response_method_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix}  labelText=\"Method\" onChange={props.updatepolicies_http_transformations_response_method}/>\n          <ReactTooltip id={\"policies_http_transformations_response_method_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP method for which this transformation will take place. If the wildcard \"*\" is specified all methods will be matched.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n          <TextInput  value={props.policies_http_transformations_response_rule}  id={\"policies_http_transformations_response_rule_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix}  labelText=\"Rule\" onChange={props.updatepolicies_http_transformations_response_rule}/>\n          <ReactTooltip id={\"policies_http_transformations_response_rule_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The HTTP transformation rule.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"paths_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading policies_http_transformations_response_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Policies / HTTP Transformations / Response : </span><br/>                  <h2>Paths Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div policies_http_transformations_response_div\" + idPrefix}>\n                <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} >Paths</h3><hr/>\n</div>\n          <ReactTooltip id={\"policies_http_transformations_response_paths_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The paths for which this transformation will take place. If the wildcard \"*\" is specified all paths will be matched.  This entry is an array and can be used to specify multiple paths.<br/></div></ReactTooltip>\n\n                <div id={\"policies_http_transformations_response_pathsTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <DataTable id={\"policies_http_transformations_response_pathsTable\" + idPrefix} isSortable\n                        headers={policies_http_transformations_response_pathsheaderData}\n                        rows={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {policies_http_transformations_response_pathshandleAdd(idPrefix, [setpolicies_http_transformations_response_paths_paths(''),    setpolicies_http_transformations_response_paths_paths_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsDeleteModal row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <PolicieshttpTransformationsresponsepathsEdit  data={policies_http_transformations_response_pathsrowData.policies_http_transformations_response_paths} setData={setDataMain} row={row} loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} editing={true} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem policies_http_transformations_response_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.policies_http_transformations_response_name || !props.policies_http_transformations_response_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsAdd loadGrid={policies_http_transformations_response_pathsloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponsepathsEdit  loadGrid={policies_http_transformations_response_pathsloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_paths\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_paths_paths={updatepolicies_http_transformations_response_paths_paths} policies_http_transformations_response_paths_paths={policies_http_transformations_response_paths_paths}\n            policies_http_transformations_response_paths_paths_valid={policies_http_transformations_response_paths_paths_valid}\n            policies_http_transformations_response_paths_paths_invalid_text={policies_http_transformations_response_paths_paths_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponseattributesAdd loadGrid={policies_http_transformations_response_attributesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <PolicieshttpTransformationsresponseattributesEdit  loadGrid={policies_http_transformations_response_attributesloadGrid} dataLoad={dataLoad} name={\"policies_http_transformations_response_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updatepolicies_http_transformations_response_attributes_attributes={updatepolicies_http_transformations_response_attributes_attributes} policies_http_transformations_response_attributes_attributes={policies_http_transformations_response_attributes_attributes}\n            policies_http_transformations_response_attributes_attributes_valid={policies_http_transformations_response_attributes_attributes_valid}\n            policies_http_transformations_response_attributes_attributes_invalid_text={policies_http_transformations_response_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Policieshttp_transformations_responseAdd;\n"],"sourceRoot":""}