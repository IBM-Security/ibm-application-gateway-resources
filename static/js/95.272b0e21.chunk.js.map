{"version":3,"file":"static/js/95.272b0e21.chunk.js","mappings":"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","sources":["content/serverPage/serverenabled_languagesEdit.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_enabled_languages_enabled_languages_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_enabled_languages_enabled_languages\"] = document.getElementById(\"server_enabled_languages_enabled_languages_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"server_enabled_languages_enabled_languages\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_enabled_languages\")) {\n        var len = \"_enabled_languages\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserver_enabled_languagesPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_enabled_languages\")) {\n        var len = \"_enabled_languages\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserver_enabled_languagesPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_enabled_languages_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_enabled_languages_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n  };\nconst Server_enabled_languagesEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n\n    const [server_enabled_languages_enabled_languages, setserver_enabled_languages_enabled_languages] = useState(''),\n    updateserver_enabled_languages_enabled_languages = useCallback((evt) => setserver_enabled_languages_enabled_languages(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserver_enabled_languagesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"server_enabled_languages_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_enabled_languages_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / Enabled Languages : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_enabled_languages_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_enabled_languages_div\" + idPrefix}>\n                <Select\n                  value={props.server_enabled_languages_enabled_languages}\n                   id={\"server_enabled_languages_enabled_languages_id\" + idPrefix}\n data-tooltip-id={\"server_enabled_languages_enabled_languages_tooltip_id\" + idPrefix}                   labelText=\"Language *\"\n                  onChange={props.updateserver_enabled_languages_enabled_languages}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"C\" value=\"C\" />\n                  <SelectItem text=\"cs\" value=\"cs\" />\n                  <SelectItem text=\"de\" value=\"de\" />\n                  <SelectItem text=\"es\" value=\"es\" />\n                  <SelectItem text=\"fr\" value=\"fr\" />\n                  <SelectItem text=\"hu\" value=\"hu\" />\n                  <SelectItem text=\"it\" value=\"it\" />\n                  <SelectItem text=\"ja\" value=\"ja\" />\n                  <SelectItem text=\"ko\" value=\"ko\" />\n                  <SelectItem text=\"pl\" value=\"pl\" />\n                  <SelectItem text=\"pt_BR\" value=\"pt_BR\" />\n                  <SelectItem text=\"ru\" value=\"ru\" />\n                  <SelectItem text=\"zh_CN\" value=\"zh_CN\" />\n                  <SelectItem text=\"zh_TW\" value=\"zh_TW\" />\n                </Select>\n          <ReactTooltip id={\"server_enabled_languages_enabled_languages_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The language(s) which will be permitted when the application gateway generates error and management response pages.<br/></div></ReactTooltip>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_enabled_languages_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Server_enabled_languagesEdit;\n","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"names":["handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","slice","style","display","updateStyle","closeAdd","getEditData","yamlText","iagyaml","safeLoad","Server_enabled_languagesEdit","props","row","name","toolbarName","id","server_enabled_languages_enabled_languages","setserver_enabled_languages_enabled_languages","useState","updateserver_enabled_languages_enabled_languages","useCallback","evt","target","fetcheddata","setFetcheddata","React","setDataMain","functionName","eval","editing","_jsx","Icon","editProps","editIcon","onClick","title","children","className","_jsxs","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","Select","labelText","onChange","SelectItem","text","ReactTooltip","clickable","place","effect","maxWidth","Button","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","isPrefixed","split","_ref","svgData","iconTitle","description","fill","fillRule","icon","role","iconRef","other","_objectWithoutProperties","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","concat","viewBox","ref","svgContent","map","svgProp","circle","index","circleProps","cx","cy","r","_extends","path","d","polygon","points","propTypes","PropTypes","isRequired","defaultProps"],"sourceRoot":""}