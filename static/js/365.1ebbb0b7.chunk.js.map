{"version":3,"sources":["content/servicesPage/serviceskerberosrealmspropertiesEdit.js"],"names":["handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","len","slice","style","display","updateStyle","closeAdd","getEditData","yamlText","iagyaml","safeLoad","name","services","kerberos","realms","Serviceskerberosrealms_propertiesEdit","props","row","toolbarName","id","_useState","useState","_useState2","_slicedToArray","services_kerberos_realms_properties_name","setservices_kerberos_realms_properties_name","updateservices_kerberos_realms_properties_name","useCallback","evt","target","_useState3","_useState4","services_kerberos_realms_properties_value","setservices_kerberos_realms_properties_value","updateservices_kerberos_realms_properties_value","_React$useState","React","_React$useState2","fetcheddata","setFetcheddata","useEffect","setDataMain","functionName","eval","editing","createElement","Icon","Object","assign","editProps","editIcon","onClick","title","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","TextInput","onFocus","e","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","place","effect","maxWidth","Button","disabled","services_kerberos_realms_properties_name_valid"],"mappings":"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","file":"static/js/365.1ebbb0b7.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_properties_name\"] = document.getElementById(\"services_kerberos_realms_properties_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"services_kerberos_realms_properties_value\"] = document.getElementById(\"services_kerberos_realms_properties_value_id\" + idPrefix).value;\n    }\n      \n    loadGrid( json[\"services_kerberos_realms_properties_name\"], json[\"services_kerberos_realms_properties_value\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_properties\")) {\n        var len = \"_properties\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserviceskerberosrealms_propertiesPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_properties\")) {\n        var len = \"_properties\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserviceskerberosrealms_propertiesPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"services_kerberos_realms_properties_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"services_kerberos_realms_properties_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].name)?data[i].name:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n        }\n      }\n    } else {\n      if(json !== undefined && json.services !== undefined && json.services.kerberos !== undefined && json.services.kerberos.realms !== undefined ) {\n      }\n    }\n  };\nconst Serviceskerberosrealms_propertiesEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n\n    const [services_kerberos_realms_properties_name, setservices_kerberos_realms_properties_name] = useState(''),\n    updateservices_kerberos_realms_properties_name = useCallback((evt) => setservices_kerberos_realms_properties_name(evt.target.value), []);\n\n    const [services_kerberos_realms_properties_value, setservices_kerberos_realms_properties_value] = useState(''),\n    updateservices_kerberos_realms_properties_value = useCallback((evt) => setservices_kerberos_realms_properties_value(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserviceskerberosrealms_propertiesPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"services_kerberos_realms_properties_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading services_kerberos_realms_properties_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Services / Kerberos / Realms / Properties : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div services_kerberos_realms_properties_div\" + idPrefix}>\n                <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n  <h3>Properties</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"40px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_properties_name}  id={\"services_kerberos_realms_properties_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateservices_kerberos_realms_properties_name}/>\n          <ReactTooltip id={\"services_kerberos_realms_properties_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Name of the entry to be written into the realms section of the Kerberos configuration.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n          <TextInput  value={props.services_kerberos_realms_properties_value}  id={\"services_kerberos_realms_properties_value_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"services_kerberos_realms_properties_value_tooltip_id\" + idPrefix}  labelText=\"Value\" onChange={props.updateservices_kerberos_realms_properties_value}/>\n          <ReactTooltip id={\"services_kerberos_realms_properties_value_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Value of the entry to be written into the realms section of the Kerberos configuration.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem services_kerberos_realms_properties_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.services_kerberos_realms_properties_name || !props.services_kerberos_realms_properties_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Serviceskerberosrealms_propertiesEdit;\n"],"sourceRoot":""}