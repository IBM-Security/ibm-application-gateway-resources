{"version":3,"sources":["content/serverPage/serversessionrediscollectionsserversAdd.js"],"names":["ServersessionrediscollectionsserversssltrustCertificatesDeleteModal","lazy","Promise","all","__webpack_require__","e","then","bind","ServersessionrediscollectionsserversssltrustCertificatesAdd","ServersessionrediscollectionsserversssltrustCertificatesEdit","ServersessionrediscollectionsserverssslclientCertificateDeleteModal","ServersessionrediscollectionsserverssslclientCertificateAdd","ServersessionrediscollectionsserverssslclientCertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","server_session_redis_collections_servers_ssl_client_certificaterowData","server_session_redis_collections_servers_ssl_client_certificate","server_session_redis_collections_servers_ssl_trust_certificatesrowData","server_session_redis_collections_servers_ssl_trust_certificates","handleClose","handleAdd","setserver_session_redis_collections_servers_ssl_trust_certificates","setserver_session_redis_collections_servers_ssl_client_certificate","doAdd","updateStyle","style","display","closeAdd","server_session_redis_collections_servers_ssl_trust_certificatesheaderData","header","key","server_session_redis_collections_servers_ssl_trust_certificateshandleAdd","clearFields","i","length","eval","server_session_redis_collections_servers_ssl_client_certificateheaderData","server_session_redis_collections_servers_ssl_client_certificatehandleAdd","Serversessionrediscollections_serversAdd","props","row","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_React$useState3","_React$useState4","fetchedserver_session_redis_collections_servers_ssl_trust_certificates","setFetchedserver_session_redis_collections_servers_ssl_trust_certificates","useEffect","server_session_redis_collections_servers_ssl_trust_certificatesloadGrid","useCallback","_ref","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_IAG_yaml_gui_generator_out_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates","add","attrs","tempId","newId","wrap","_context","prev","next","trust_certificates","window","server_session_redis_collections_servers_ssl_trust_certificatesediting","server_session_redis_collections_servers_ssl_trust_certificatesrowId","push","id","console","log","abrupt","stop","_x","_x2","apply","this","arguments","_React$useState5","_React$useState6","_React$useState7","_React$useState8","fetchedserver_session_redis_collections_servers_ssl_client_certificate","setFetchedserver_session_redis_collections_servers_ssl_client_certificate","server_session_redis_collections_servers_ssl_client_certificateloadGrid","_ref2","_callee2","server_session_redis_collections_servers_ssl_client_certificate_client_certificate","_context2","client_certificate","server_session_redis_collections_servers_ssl_client_certificateediting","server_session_redis_collections_servers_ssl_client_certificaterowId","_x3","_x4","_useState","_useState2","server_session_redis_collections_servers_name","setserver_session_redis_collections_servers_name","updateserver_session_redis_collections_servers_name","evt","target","_useState3","_useState4","server_session_redis_collections_servers_host","setserver_session_redis_collections_servers_host","updateserver_session_redis_collections_servers_host","_useState5","_useState6","server_session_redis_collections_servers_port","setserver_session_redis_collections_servers_port","updateserver_session_redis_collections_servers_port","_useState7","_useState8","server_session_redis_collections_servers_username","setserver_session_redis_collections_servers_username","updateserver_session_redis_collections_servers_username","_useState9","_useState10","server_session_redis_collections_servers_password","setserver_session_redis_collections_servers_password","updateserver_session_redis_collections_servers_password","_useState11","_useState12","setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates","updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates","validateField","setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState13","_useState14","server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid","_useState15","_useState16","server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text","_useState17","_useState18","setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate","updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate","setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid","setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState19","_useState20","server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid","_useState21","_useState22","server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text","_useState23","_useState24","server_session_redis_collections_servers_ssl_sni","setserver_session_redis_collections_servers_ssl_sni","updateserver_session_redis_collections_servers_ssl_sni","_React$useState9","_React$useState10","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_web_tabs__WEBPACK_IMPORTED_MODULE_18__","defaultTab","vertical","overflow","tabFor","width","tabId","height","marginLeft","marginBottom","carbon_components_react__WEBPACK_IMPORTED_MODULE_4__","invalid","server_session_redis_collections_servers_name_valid","invalidText","server_session_redis_collections_servers_name_invalid_text","onFocus","ReactTooltip","show","onBlur","hide","data-tip","data-for","labelText","onChange","react_tooltip__WEBPACK_IMPORTED_MODULE_19__","place","effect","maxWidth","carbon_components_react__WEBPACK_IMPORTED_MODULE_5__","min","label","carbon_components_react__WEBPACK_IMPORTED_MODULE_6__","onClick","disabled","tabIndex","carbon_components_react__WEBPACK_IMPORTED_MODULE_7__","isSortable","headers","rows","render","_ref3","getHeaderProps","getTableProps","getRowProps","getToolbarProps","onInputChange","getTableContainerProps","carbon_components_react__WEBPACK_IMPORTED_MODULE_8__","carbon_components_react__WEBPACK_IMPORTED_MODULE_9__","aria-label","carbon_components_react__WEBPACK_IMPORTED_MODULE_10__","carbon_components_react__WEBPACK_IMPORTED_MODULE_11__","assign","size","carbon_components_react__WEBPACK_IMPORTED_MODULE_12__","carbon_components_react__WEBPACK_IMPORTED_MODULE_13__","map","carbon_components_react__WEBPACK_IMPORTED_MODULE_14__","carbon_components_react__WEBPACK_IMPORTED_MODULE_15__","cells","cell","carbon_components_react__WEBPACK_IMPORTED_MODULE_16__","react__WEBPACK_IMPORTED_MODULE_3__","fallback","setData","editing","name","parentIdPrefix","_ref4"],"mappings":"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","file":"static/js/58.bbf5adaf.chunk.js","sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServersessionrediscollectionsserversssltrustCertificatesDeleteModal = lazy(() => import('./serversessionrediscollectionsserversssltrust_certificatesDeleteModal'));\nconst ServersessionrediscollectionsserversssltrustCertificatesAdd = lazy(() => import('./serversessionrediscollectionsserversssltrust_certificatesAdd'));\nconst ServersessionrediscollectionsserversssltrustCertificatesEdit = lazy(() => import('./serversessionrediscollectionsserversssltrust_certificatesEdit'));\nconst ServersessionrediscollectionsserverssslclientCertificateDeleteModal = lazy(() => import('./serversessionrediscollectionsserverssslclient_certificateDeleteModal'));\nconst ServersessionrediscollectionsserverssslclientCertificateAdd = lazy(() => import('./serversessionrediscollectionsserverssslclient_certificateAdd'));\nconst ServersessionrediscollectionsserverssslclientCertificateEdit = lazy(() => import('./serversessionrediscollectionsserverssslclient_certificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"server_session_redis_collections_servers_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_session_redis_collections_servers_name\"] = document.getElementById(\"server_session_redis_collections_servers_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"server_session_redis_collections_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_session_redis_collections_servers_host\"] = document.getElementById(\"server_session_redis_collections_servers_host_id\" + idPrefix).value;\n    }\n    json[\"server_session_redis_collections_servers_port\"] = document.getElementById(\"server_session_redis_collections_servers_port_id\" + idPrefix).value;\n    if(document.getElementById(\"server_session_redis_collections_servers_username_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_session_redis_collections_servers_username\"] = document.getElementById(\"server_session_redis_collections_servers_username_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"server_session_redis_collections_servers_password_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_session_redis_collections_servers_password\"] = document.getElementById(\"server_session_redis_collections_servers_password_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"server_session_redis_collections_servers_ssl_sni_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"server_session_redis_collections_servers_ssl_sni\"] = document.getElementById(\"server_session_redis_collections_servers_ssl_sni_id\" + idPrefix).value;\n    }\n    json[\"server_session_redis_collections_servers_ssl_client_certificate\"] = server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate;\n    json[\"server_session_redis_collections_servers_ssl_trust_certificates\"] = server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates;\n      \n    loadGrid( json[\"server_session_redis_collections_servers_name\"], json[\"server_session_redis_collections_servers_host\"], json[\"server_session_redis_collections_servers_port\"], json[\"server_session_redis_collections_servers_username\"], json[\"server_session_redis_collections_servers_password\"], json[\"server_session_redis_collections_servers_ssl_sni\"], json[\"server_session_redis_collections_servers_ssl_client_certificate\"], json[\"server_session_redis_collections_servers_ssl_trust_certificates\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setserver_session_redis_collections_servers_ssl_trust_certificates, setserver_session_redis_collections_servers_ssl_client_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"server_session_redis_collections_servers_name_id\").value = \"\";\n    document.getElementById(\"server_session_redis_collections_servers_host_id\").value = \"\";\n    document.getElementById(\"server_session_redis_collections_servers_port_id\").value = \"\";\n    document.getElementById(\"server_session_redis_collections_servers_username_id\").value = \"\";\n    document.getElementById(\"server_session_redis_collections_servers_password_id\").value = \"\";\n    document.getElementById(\"server_session_redis_collections_servers_ssl_sni_id\").value = \"\";\n    server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates = []\n    setserver_session_redis_collections_servers_ssl_trust_certificates(server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates);\n\n    server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate = []\n    setserver_session_redis_collections_servers_ssl_client_certificate(server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"servers_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addserversessionrediscollections_serversPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"server_session_redis_collections_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"server_session_redis_collections_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst server_session_redis_collections_servers_ssl_trust_certificatesheaderData = [\n    {\n    header: 'Trust Certificate',\n    key: 'trust_certificates',\n  },\n\n];\n\nconst server_session_redis_collections_servers_ssl_trust_certificatesrowData = {server_session_redis_collections_servers_ssl_trust_certificates: []};\n\nconst server_session_redis_collections_servers_ssl_trust_certificateshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"server_session_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversessionrediscollectionsserversssl_trust_certificatesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"server_session_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst server_session_redis_collections_servers_ssl_client_certificateheaderData = [\n    {\n    header: 'Client Certificate',\n    key: 'client_certificate',\n  },\n\n];\n\nconst server_session_redis_collections_servers_ssl_client_certificaterowData = {server_session_redis_collections_servers_ssl_client_certificate: []};\n\nconst server_session_redis_collections_servers_ssl_client_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"server_session_redis_collections_servers_ssl_client_certificate_client_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"server_session_redis_collections_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversessionrediscollectionsserversssl_client_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"server_session_redis_collections_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Serversessionrediscollections_serversAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [server_session_redis_collections_servers_ssl_trust_certificates, setserver_session_redis_collections_servers_ssl_trust_certificates] = React.useState([]);\n    const [fetchedserver_session_redis_collections_servers_ssl_trust_certificates, setFetchedserver_session_redis_collections_servers_ssl_trust_certificates] = React.useState(false);\n\n    React.useEffect(() => {\n      server_session_redis_collections_servers_ssl_trust_certificatesloadGrid();\n    }, [fetchedserver_session_redis_collections_servers_ssl_trust_certificates]);\n\n    const server_session_redis_collections_servers_ssl_trust_certificatesloadGrid = React.useCallback(async (server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates, add) => {\n      try {\n        var attrs = [];\n        if(server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates) {\n          if(add) {\n            for(var i = 0; i < server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              var tempId = ((server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i].trust_certificates)?server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\") + \"\";\n              if((window.server_session_redis_collections_servers_ssl_trust_certificatesediting != true && window.server_session_redis_collections_servers_ssl_trust_certificatesediting != \"true\") || tempId != window.server_session_redis_collections_servers_ssl_trust_certificatesrowId) {\n                attrs.push(server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n            var newId = ((server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates)?server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              trust_certificates: server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates.length; i++) {\n              if(server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates ) {\n                attrs.push(server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i]);\n              }\n            }\n          }\n        } else {\n          attrs = server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates;\n        }\n        server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates = attrs;\n        const data = {server_session_redis_collections_servers_ssl_trust_certificates: attrs};\n        setserver_session_redis_collections_servers_ssl_trust_certificates(data.server_session_redis_collections_servers_ssl_trust_certificates);\n\n        if(server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates !== undefined && server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [server_session_redis_collections_servers_ssl_client_certificate, setserver_session_redis_collections_servers_ssl_client_certificate] = React.useState([]);\n    const [fetchedserver_session_redis_collections_servers_ssl_client_certificate, setFetchedserver_session_redis_collections_servers_ssl_client_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      server_session_redis_collections_servers_ssl_client_certificateloadGrid();\n    }, [fetchedserver_session_redis_collections_servers_ssl_client_certificate]);\n\n    const server_session_redis_collections_servers_ssl_client_certificateloadGrid = React.useCallback(async (server_session_redis_collections_servers_ssl_client_certificate_client_certificate, add) => {\n      try {\n        var attrs = [];\n        if(server_session_redis_collections_servers_ssl_client_certificate_client_certificate) {\n          if(add) {\n            for(var i = 0; i < server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate.length; i++) {\n              var tempId = ((server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i].client_certificate)?server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\") + \"\";\n              if((window.server_session_redis_collections_servers_ssl_client_certificateediting != true && window.server_session_redis_collections_servers_ssl_client_certificateediting != \"true\") || tempId != window.server_session_redis_collections_servers_ssl_client_certificaterowId) {\n                attrs.push(server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n            var newId = ((server_session_redis_collections_servers_ssl_client_certificate_client_certificate)?server_session_redis_collections_servers_ssl_client_certificate_client_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              client_certificate: server_session_redis_collections_servers_ssl_client_certificate_client_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate.length; i++) {\n              if(server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i].client_certificate !== server_session_redis_collections_servers_ssl_client_certificate_client_certificate ) {\n                attrs.push(server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate;\n        }\n        server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate = attrs;\n        const data = {server_session_redis_collections_servers_ssl_client_certificate: attrs};\n        setserver_session_redis_collections_servers_ssl_client_certificate(data.server_session_redis_collections_servers_ssl_client_certificate);\n\n        if(server_session_redis_collections_servers_ssl_client_certificate_client_certificate !== undefined && server_session_redis_collections_servers_ssl_client_certificate_client_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [server_session_redis_collections_servers_name, setserver_session_redis_collections_servers_name] = useState(''),\n    updateserver_session_redis_collections_servers_name = useCallback((evt) => setserver_session_redis_collections_servers_name(evt.target.value), []);\n\n    const [server_session_redis_collections_servers_host, setserver_session_redis_collections_servers_host] = useState(''),\n    updateserver_session_redis_collections_servers_host = useCallback((evt) => setserver_session_redis_collections_servers_host(evt.target.value), []);\n\n    const [server_session_redis_collections_servers_port, setserver_session_redis_collections_servers_port] = useState(6379),\n    updateserver_session_redis_collections_servers_port = useCallback((evt) => {}, []);\n\n    const [server_session_redis_collections_servers_username, setserver_session_redis_collections_servers_username] = useState(''),\n    updateserver_session_redis_collections_servers_username = useCallback((evt) => setserver_session_redis_collections_servers_username(evt.target.value), []);\n\n    const [server_session_redis_collections_servers_password, setserver_session_redis_collections_servers_password] = useState(''),\n    updateserver_session_redis_collections_servers_password = useCallback((evt) => setserver_session_redis_collections_servers_password(evt.target.value), []);\n\n    const [server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates, setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates] = useState(''),\n    updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates = useCallback((evt) => {\n      setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates, setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, \"Server Session Redis Collections Servers Ssl Trust Certificates\", \"trust_certificates\", tempId);\n    }, []);\n\n    const [server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid, setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid] = useState(true);\n    const [server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text, setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text] = useState(\"\");\n\n\n    const [server_session_redis_collections_servers_ssl_client_certificate_client_certificate, setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate] = useState(''),\n    updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate = useCallback((evt) => {\n      setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate, setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, \"Server Session Redis Collections Servers Ssl Client Certificate\", \"client_certificate\", tempId);\n    }, []);\n\n    const [server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid, setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid] = useState(true);\n    const [server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text, setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text] = useState(\"\");\n\n\n    const [server_session_redis_collections_servers_ssl_sni, setserver_session_redis_collections_servers_ssl_sni] = useState(''),\n    updateserver_session_redis_collections_servers_ssl_sni = useCallback((evt) => setserver_session_redis_collections_servers_ssl_sni(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates.length; i++) {\n        if(server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i].id === window.server_session_redis_collections_servers_ssl_trust_certificatesrowId) {\n        setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates((server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i] !== undefined && server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i].trust_certificates !== undefined )?server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates[i].trust_certificates:\"\");\n        }\n      }\n\n      for(var i = 0; i < server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate.length; i++) {\n        if(server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i].id === window.server_session_redis_collections_servers_ssl_client_certificaterowId) {\n        setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate((server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i] !== undefined && server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i].client_certificate !== undefined )?server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate[i].client_certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addserversessionrediscollections_serversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"server_session_redis_collections_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_session_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / Session / Redis / Collections / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div server_session_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n  <h3>Servers</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"60px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  invalid={!props.server_session_redis_collections_servers_name_valid}  invalidText={props.server_session_redis_collections_servers_name_invalid_text}  value={props.server_session_redis_collections_servers_name}  id={\"server_session_redis_collections_servers_name_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateserver_session_redis_collections_servers_name}/>\n          <ReactTooltip id={\"server_session_redis_collections_servers_name_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A label, or name, which is used to identify this server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.server_session_redis_collections_servers_host}  id={\"server_session_redis_collections_servers_host_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host\" onChange={props.updateserver_session_redis_collections_servers_host}/>\n          <ReactTooltip id={\"server_session_redis_collections_servers_host_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The server name or IP address of the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n          <NumberInput value={props.server_session_redis_collections_servers_port} id={\"server_session_redis_collections_servers_port_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_port_tooltip_id\" + idPrefix}  min={1}  label=\"Port\" onChange={props.updateserver_session_redis_collections_servers_port}/>\n          <ReactTooltip id={\"server_session_redis_collections_servers_port_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the Redis server is listening for requests.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.server_session_redis_collections_servers_username}  id={\"server_session_redis_collections_servers_username_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_username_tooltip_id\" + idPrefix}  labelText=\"Username\" onChange={props.updateserver_session_redis_collections_servers_username}/>\n          <ReactTooltip id={\"server_session_redis_collections_servers_username_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the user which is used when authenticating to the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.server_session_redis_collections_servers_password}  id={\"server_session_redis_collections_servers_password_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_password_tooltip_id\" + idPrefix}  labelText=\"Password\" onChange={props.updateserver_session_redis_collections_servers_password}/>\n          <ReactTooltip id={\"server_session_redis_collections_servers_password_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The password which is used to access the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_session_redis_collections_servers_name || !props.server_session_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading server_session_redis_collections_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Server / Session / Redis / Collections / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  Specifies the secure configuration for the gateway server.\n                </div>\n                <div className={\"iag--simple-div server_session_redis_collections_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"80px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} >Trust Certificates</h3><hr/>\n</div>\n          <ReactTooltip id={\"server_session_redis_collections_servers_ssl_trust_certificates_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based certificates which are to be trusted when communicating with the Redis server.  The trusted certificates should include the CA certificate for the Redis server certificate, as well as any intermediate certificates used to sign the client certificate (if mutual authentication is in use).  SSL/TLS will not be used when communicating with the Redis server if no trust certificates are specified.<br/></div></ReactTooltip>\n\n                <div id={\"server_session_redis_collections_servers_ssl_trust_certificatesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"server_session_redis_collections_servers_ssl_trust_certificatesTable\" + idPrefix} isSortable\n                        headers={server_session_redis_collections_servers_ssl_trust_certificatesheaderData}\n                        rows={server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {server_session_redis_collections_servers_ssl_trust_certificateshandleAdd(idPrefix, [setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates(''),    setserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersessionrediscollectionsserversssltrustCertificatesDeleteModal row={row} loadGrid={server_session_redis_collections_servers_ssl_trust_certificatesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersessionrediscollectionsserversssltrustCertificatesEdit  data={server_session_redis_collections_servers_ssl_trust_certificatesrowData.server_session_redis_collections_servers_ssl_trust_certificates} setData={setDataMain} row={row} loadGrid={server_session_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} editing={true} name={\"server_session_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates} server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} >Client Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"server_session_redis_collections_servers_ssl_client_certificate_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The PEM based personal certificate files which will be used when performing mutual authentication with the resource server.  These certificate files should include the private key, a certificate signed with the private key, and the signer certificate or signer certificate chain (if required).<br/></div></ReactTooltip>\n\n                <div id={\"server_session_redis_collections_servers_ssl_client_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n                    <DataTable id={\"server_session_redis_collections_servers_ssl_client_certificateTable\" + idPrefix} isSortable\n                        headers={server_session_redis_collections_servers_ssl_client_certificateheaderData}\n                        rows={server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {server_session_redis_collections_servers_ssl_client_certificatehandleAdd(idPrefix, [setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate(''),    setserver_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersessionrediscollectionsserverssslclientCertificateDeleteModal row={row} loadGrid={server_session_redis_collections_servers_ssl_client_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServersessionrediscollectionsserverssslclientCertificateEdit  data={server_session_redis_collections_servers_ssl_client_certificaterowData.server_session_redis_collections_servers_ssl_client_certificate} setData={setDataMain} row={row} loadGrid={server_session_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"server_session_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate={updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate} server_session_redis_collections_servers_ssl_client_certificate_client_certificate={server_session_redis_collections_servers_ssl_client_certificate_client_certificate}\n            server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid={server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n          <TextInput  value={props.server_session_redis_collections_servers_ssl_sni}  id={\"server_session_redis_collections_servers_ssl_sni_id\" + idPrefix}  onFocus={(e) => ReactTooltip.show(e.target)} onBlur={(e) => ReactTooltip.hide(e.target)} data-tip data-for={\"server_session_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix}  labelText=\"SNI\" onChange={props.updateserver_session_redis_collections_servers_ssl_sni}/>\n          <ReactTooltip id={\"server_session_redis_collections_servers_ssl_sni_tooltip_id\" + idPrefix} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The Server Name Indication (SNI) value which is provided when establishing the SSL connection with the Redis server.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem server_session_redis_collections_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.server_session_redis_collections_servers_name || !props.server_session_redis_collections_servers_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServersessionrediscollectionsserversssltrustCertificatesAdd loadGrid={server_session_redis_collections_servers_ssl_trust_certificatesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates} server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersessionrediscollectionsserversssltrustCertificatesEdit  loadGrid={server_session_redis_collections_servers_ssl_trust_certificatesloadGrid} dataLoad={dataLoad} name={\"server_session_redis_collections_servers_ssl_trust_certificates\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates={updateserver_session_redis_collections_servers_ssl_trust_certificates_trust_certificates} server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates}\n            server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_valid}\n            server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text={server_session_redis_collections_servers_ssl_trust_certificates_trust_certificates_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersessionrediscollectionsserverssslclientCertificateAdd loadGrid={server_session_redis_collections_servers_ssl_client_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate={updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate} server_session_redis_collections_servers_ssl_client_certificate_client_certificate={server_session_redis_collections_servers_ssl_client_certificate_client_certificate}\n            server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid={server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServersessionrediscollectionsserverssslclientCertificateEdit  loadGrid={server_session_redis_collections_servers_ssl_client_certificateloadGrid} dataLoad={dataLoad} name={\"server_session_redis_collections_servers_ssl_client_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate={updateserver_session_redis_collections_servers_ssl_client_certificate_client_certificate} server_session_redis_collections_servers_ssl_client_certificate_client_certificate={server_session_redis_collections_servers_ssl_client_certificate_client_certificate}\n            server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid={server_session_redis_collections_servers_ssl_client_certificate_client_certificate_valid}\n            server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text={server_session_redis_collections_servers_ssl_client_certificate_client_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Serversessionrediscollections_serversAdd;\n"],"sourceRoot":""}