{"version":3,"file":"static/js/5716.90e5bfc8.chunk.js","mappings":"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","sources":["content/identityPage/identityoauthAdd.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n} from 'carbon-components-react';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, validateField, toggleDescription } from '../../helpers';\n\n\nconst IdentityoauthattributesDeleteModal = lazy(() => import('./identityoauthattributesDeleteModal'));\nconst IdentityoauthattributesAdd = lazy(() => import('./identityoauthattributesAdd'));\nconst IdentityoauthattributesEdit = lazy(() => import('./identityoauthattributesEdit'));\nconst IdentityoauthheadersDeleteModal = lazy(() => import('./identityoauthheadersDeleteModal'));\nconst IdentityoauthheadersAdd = lazy(() => import('./identityoauthheadersAdd'));\nconst IdentityoauthheadersEdit = lazy(() => import('./identityoauthheadersEdit'));\nconst IdentityoauthsslcertificateDeleteModal = lazy(() => import('./identityoauthsslcertificateDeleteModal'));\nconst IdentityoauthsslcertificateAdd = lazy(() => import('./identityoauthsslcertificateAdd'));\nconst IdentityoauthsslcertificateEdit = lazy(() => import('./identityoauthsslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"identity_oauth_auth_method_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_auth_method\"] = document.getElementById(\"identity_oauth_auth_method_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_oauth_client_id_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_client_id\"] = document.getElementById(\"identity_oauth_client_id_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_oauth_client_id_hdr_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_client_id_hdr\"] = document.getElementById(\"identity_oauth_client_id_hdr_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_oauth_client_secret_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_client_secret\"] = document.getElementById(\"identity_oauth_client_secret_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_oauth_introspection_endpoint_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_introspection_endpoint\"] = document.getElementById(\"identity_oauth_introspection_endpoint_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_oauth_mapped_identity_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_mapped_identity\"] = document.getElementById(\"identity_oauth_mapped_identity_id\" + idPrefix).value;\n    }\n    json[\"identity_oauth_multi_valued_scope\"] = document.getElementById(\"identity_oauth_multi_valued_scope_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"identity_oauth_name_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_name\"] = document.getElementById(\"identity_oauth_name_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"identity_oauth_proxy_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_proxy\"] = document.getElementById(\"identity_oauth_proxy_id\" + idPrefix).value;\n    }\n    json[\"identity_oauth_restricted\"] = document.getElementById(\"identity_oauth_restricted_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"identity_oauth_token_type_hint_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"identity_oauth_token_type_hint\"] = document.getElementById(\"identity_oauth_token_type_hint_id\" + idPrefix).value;\n    }\n    json[\"identity_oauth_ssl_certificate\"] = identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate;\n    json[\"identity_oauth_headers\"] = identity_oauth_headersrowData.identity_oauth_headers;\n    json[\"identity_oauth_attributes\"] = identity_oauth_attributesrowData.identity_oauth_attributes;\n      \n    loadGrid( json[\"identity_oauth_auth_method\"], json[\"identity_oauth_client_id\"], json[\"identity_oauth_client_id_hdr\"], json[\"identity_oauth_client_secret\"], json[\"identity_oauth_introspection_endpoint\"], json[\"identity_oauth_mapped_identity\"], json[\"identity_oauth_multi_valued_scope\"], json[\"identity_oauth_name\"], json[\"identity_oauth_proxy\"], json[\"identity_oauth_restricted\"], json[\"identity_oauth_token_type_hint\"], json[\"identity_oauth_ssl_certificate\"], json[\"identity_oauth_headers\"], json[\"identity_oauth_attributes\"], true); \n\n    handleClose(idPrefix, doClose);\n  };\n\n  const handleAdd = (setidentity_oauth_attributes, setidentity_oauth_headers, setidentity_oauth_ssl_certificate, idPrefix, doAdd, doClose) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n\n    document.getElementById(\"identity_oauth_auth_method_id\").value = \"\";\n    document.getElementById(\"identity_oauth_client_id_id\").value = \"\";\n    document.getElementById(\"identity_oauth_client_id_hdr_id\").value = \"\";\n    document.getElementById(\"identity_oauth_client_secret_id\").value = \"\";\n    document.getElementById(\"identity_oauth_introspection_endpoint_id\").value = \"\";\n    document.getElementById(\"identity_oauth_mapped_identity_id\").value = \"\";\n    document.getElementById(\"identity_oauth_multi_valued_scope_id\").checked = false;\n    document.getElementById(\"identity_oauth_name_id\").value = \"\";\n    document.getElementById(\"identity_oauth_proxy_id\").value = \"\";\n    document.getElementById(\"identity_oauth_restricted_id\").checked = false;\n    document.getElementById(\"identity_oauth_token_type_hint_id\").value = \"\";\n    identity_oauth_attributesrowData.identity_oauth_attributes = []\n    setidentity_oauth_attributes(identity_oauth_attributesrowData.identity_oauth_attributes);\n\n    identity_oauth_headersrowData.identity_oauth_headers = []\n    setidentity_oauth_headers(identity_oauth_headersrowData.identity_oauth_headers);\n\n    identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate = []\n    setidentity_oauth_ssl_certificate(identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate);\n\n\n    if(doAdd) {\n      doAdd();\n    }\n\n    handleClose(idPrefix,  doClose);\n  };\n\n  const handleClose = (idPrefix, doClose) => {\n    updateStyle(\"identity_div\" + idPrefix, \"display\", \"block\");\n    document.getElementById(\"addidentity_oauthPage\" + idPrefix).style.display = \"none\";\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"identity_oauth_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"identity_oauth_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst identity_oauth_attributesheaderData = [\n    {\n    header: 'Attribute',\n    key: 'attributes',\n  },\n\n];\n\nconst identity_oauth_attributesrowData = {identity_oauth_attributes: []};\n\nconst identity_oauth_attributeshandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"identity_oauth_attributes_attributes_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"identity_oauth_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addidentityoauth_attributesPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"identity_oauth_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst identity_oauth_headersheaderData = [\n    {\n    header: 'Name',\n    key: 'name',\n  },\n{\n    header: 'Source',\n    key: 'source',\n  },\n{\n    header: 'Value',\n    key: 'value',\n  },\n\n];\n\nconst identity_oauth_headersrowData = {identity_oauth_headers: []};\n\nconst identity_oauth_headershandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"identity_oauth_headers_name_id\" + idPrefix).value = \"\";\n    document.getElementById(\"identity_oauth_headers_source_id\" + idPrefix).value = \"\";\n    document.getElementById(\"identity_oauth_headers_value_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"identity_oauth_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addidentityoauth_headersPage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"identity_oauth_tab\" + idPrefix).style.display = \"none\";\n\n  };\nconst identity_oauth_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst identity_oauth_ssl_certificaterowData = {identity_oauth_ssl_certificate: []};\n\nconst identity_oauth_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"identity_oauth_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"identity_oauth_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addidentityoauthssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"identity_oauth_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\nconst Identity_oauthAdd = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n\n    const [identity_oauth_attributes, setidentity_oauth_attributes] = React.useState([]);\n    const [fetchedidentity_oauth_attributes, setFetchedidentity_oauth_attributes] = React.useState(false);\n\n    React.useEffect(() => {\n      identity_oauth_attributesloadGrid();\n    }, [fetchedidentity_oauth_attributes]);\n\n    const identity_oauth_attributesloadGrid = React.useCallback(async (identity_oauth_attributes_attributes, add) => {\n      try {\n        var attrs = [];\n        if(identity_oauth_attributes_attributes) {\n          if(add) {\n            for(var i = 0; i < identity_oauth_attributesrowData.identity_oauth_attributes.length; i++) {\n              var tempId = ((identity_oauth_attributesrowData.identity_oauth_attributes[i].attributes)?identity_oauth_attributesrowData.identity_oauth_attributes[i].attributes:\"\") + \"\";\n              if((window.identity_oauth_attributesediting != true && window.identity_oauth_attributesediting != \"true\") || tempId != window.identity_oauth_attributesrowId) {\n                attrs.push(identity_oauth_attributesrowData.identity_oauth_attributes[i]);\n              }\n            }\n            var newId = ((identity_oauth_attributes_attributes)?identity_oauth_attributes_attributes:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              attributes: identity_oauth_attributes_attributes,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < identity_oauth_attributesrowData.identity_oauth_attributes.length; i++) {\n              if(identity_oauth_attributesrowData.identity_oauth_attributes[i].attributes !== identity_oauth_attributes_attributes ) {\n                attrs.push(identity_oauth_attributesrowData.identity_oauth_attributes[i]);\n              }\n            }\n          }\n        } else {\n          attrs = identity_oauth_attributesrowData.identity_oauth_attributes;\n        }\n        identity_oauth_attributesrowData.identity_oauth_attributes = attrs;\n        const data = {identity_oauth_attributes: attrs};\n        setidentity_oauth_attributes(data.identity_oauth_attributes);\n\n        if(identity_oauth_attributes_attributes !== undefined && identity_oauth_attributes_attributes !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [identity_oauth_headers, setidentity_oauth_headers] = React.useState([]);\n    const [fetchedidentity_oauth_headers, setFetchedidentity_oauth_headers] = React.useState(false);\n\n    React.useEffect(() => {\n      identity_oauth_headersloadGrid();\n    }, [fetchedidentity_oauth_headers]);\n\n    const identity_oauth_headersloadGrid = React.useCallback(async (identity_oauth_headers_name, identity_oauth_headers_source, identity_oauth_headers_value, add) => {\n      try {\n        var attrs = [];\n        if(identity_oauth_headers_value || identity_oauth_headers_source || identity_oauth_headers_name) {\n          if(add) {\n            for(var i = 0; i < identity_oauth_headersrowData.identity_oauth_headers.length; i++) {\n              var tempId = ((identity_oauth_headersrowData.identity_oauth_headers[i].value)?identity_oauth_headersrowData.identity_oauth_headers[i].value:\"\") + ((identity_oauth_headersrowData.identity_oauth_headers[i].source)?identity_oauth_headersrowData.identity_oauth_headers[i].source:\"\") + ((identity_oauth_headersrowData.identity_oauth_headers[i].name)?identity_oauth_headersrowData.identity_oauth_headers[i].name:\"\") + \"\";\n              if((window.identity_oauth_headersediting != true && window.identity_oauth_headersediting != \"true\") || tempId != window.identity_oauth_headersrowId) {\n                attrs.push(identity_oauth_headersrowData.identity_oauth_headers[i]);\n              }\n            }\n            var newId = ((identity_oauth_headers_value)?identity_oauth_headers_value:\"\") + ((identity_oauth_headers_source)?identity_oauth_headers_source:\"\") + ((identity_oauth_headers_name)?identity_oauth_headers_name:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              name: identity_oauth_headers_name,\nsource: identity_oauth_headers_source,\nvalue: identity_oauth_headers_value,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < identity_oauth_headersrowData.identity_oauth_headers.length; i++) {\n              if(identity_oauth_headersrowData.identity_oauth_headers[i].value !== identity_oauth_headers_value  && identity_oauth_headersrowData.identity_oauth_headers[i].source !== identity_oauth_headers_source  && identity_oauth_headersrowData.identity_oauth_headers[i].name !== identity_oauth_headers_name ) {\n                attrs.push(identity_oauth_headersrowData.identity_oauth_headers[i]);\n              }\n            }\n          }\n        } else {\n          attrs = identity_oauth_headersrowData.identity_oauth_headers;\n        }\n        identity_oauth_headersrowData.identity_oauth_headers = attrs;\n        const data = {identity_oauth_headers: attrs};\n        setidentity_oauth_headers(data.identity_oauth_headers);\n\n        if(identity_oauth_headers_value !== undefined && identity_oauth_headers_value !== null  && identity_oauth_headers_source !== undefined && identity_oauth_headers_source !== null  && identity_oauth_headers_name !== undefined && identity_oauth_headers_name !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n    const [identity_oauth_ssl_certificate, setidentity_oauth_ssl_certificate] = React.useState([]);\n    const [fetchedidentity_oauth_ssl_certificate, setFetchedidentity_oauth_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      identity_oauth_ssl_certificateloadGrid();\n    }, [fetchedidentity_oauth_ssl_certificate]);\n\n    const identity_oauth_ssl_certificateloadGrid = React.useCallback(async (identity_oauth_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(identity_oauth_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate.length; i++) {\n              var tempId = ((identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i].certificate)?identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.identity_oauth_ssl_certificateediting != true && window.identity_oauth_ssl_certificateediting != \"true\") || tempId != window.identity_oauth_ssl_certificaterowId) {\n                attrs.push(identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i]);\n              }\n            }\n            var newId = ((identity_oauth_ssl_certificate_certificate)?identity_oauth_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: identity_oauth_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate.length; i++) {\n              if(identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i].certificate !== identity_oauth_ssl_certificate_certificate ) {\n                attrs.push(identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate;\n        }\n        identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate = attrs;\n        const data = {identity_oauth_ssl_certificate: attrs};\n        setidentity_oauth_ssl_certificate(data.identity_oauth_ssl_certificate);\n\n        if(identity_oauth_ssl_certificate_certificate !== undefined && identity_oauth_ssl_certificate_certificate !== null ) {\n            handleChange();\n\n        }\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n\n    const [identity_oauth_attributes_attributes, setidentity_oauth_attributes_attributes] = useState(''),\n    updateidentity_oauth_attributes_attributes = useCallback((evt) => {\n      setidentity_oauth_attributes_attributes(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(identity_oauth_attributesrowData.identity_oauth_attributes, setidentity_oauth_attributes_attributes_valid, setidentity_oauth_attributes_attributes_invalid_text, \"Identity Oauth Attributes\", \"attributes\", tempId);\n    }, []);\n\n    const [identity_oauth_attributes_attributes_valid, setidentity_oauth_attributes_attributes_valid] = useState(true);\n    const [identity_oauth_attributes_attributes_invalid_text, setidentity_oauth_attributes_attributes_invalid_text] = useState(\"\");\n\n\n    const [identity_oauth_auth_method, setidentity_oauth_auth_method] = useState('client_secret_post'),\n    updateidentity_oauth_auth_method = useCallback((evt) => setidentity_oauth_auth_method(evt.target.value), []);\n\n    const [identity_oauth_client_id, setidentity_oauth_client_id] = useState(''),\n    updateidentity_oauth_client_id = useCallback((evt) => setidentity_oauth_client_id(evt.target.value), []);\n\n    const [identity_oauth_client_id_hdr, setidentity_oauth_client_id_hdr] = useState(''),\n    updateidentity_oauth_client_id_hdr = useCallback((evt) => setidentity_oauth_client_id_hdr(evt.target.value), []);\n\n    const [identity_oauth_client_secret, setidentity_oauth_client_secret] = useState(''),\n    updateidentity_oauth_client_secret = useCallback((evt) => setidentity_oauth_client_secret(evt.target.value), []);\n\n    const [identity_oauth_headers_name, setidentity_oauth_headers_name] = useState(''),\n    updateidentity_oauth_headers_name = useCallback((evt) => {\n      setidentity_oauth_headers_name(evt.target.value);\n      var valueWdgt = document.getElementById(\"identity_oauth_headers_value_id\" + idPrefix);\n      var valueVal = (valueWdgt)?valueWdgt.value:\"\";\n      var sourceWdgt = document.getElementById(\"identity_oauth_headers_source_id\" + idPrefix);\n      var sourceVal = (sourceWdgt)?sourceWdgt.value:\"\";\n      var tempId = valueVal + sourceVal + evt.target.value;\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_value_valid, setidentity_oauth_headers_value_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_source_valid, setidentity_oauth_headers_source_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_name_valid, setidentity_oauth_headers_name_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n    }, []);\n\n    const [identity_oauth_headers_name_valid, setidentity_oauth_headers_name_valid] = useState(true);\n    const [identity_oauth_headers_name_invalid_text, setidentity_oauth_headers_name_invalid_text] = useState(\"\");\n\n\n    const [identity_oauth_headers_source, setidentity_oauth_headers_source] = useState(''),\n    updateidentity_oauth_headers_source = useCallback((evt) => {\n      setidentity_oauth_headers_source(evt.target.value);\n      var valueWdgt = document.getElementById(\"identity_oauth_headers_value_id\" + idPrefix);\n      var valueVal = (valueWdgt)?valueWdgt.value:\"\";\n      var nameWdgt = document.getElementById(\"identity_oauth_headers_name_id\" + idPrefix);\n      var nameVal = (nameWdgt)?nameWdgt.value:\"\";\n      var tempId = valueVal + evt.target.value + nameVal;\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_value_valid, setidentity_oauth_headers_value_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_name_valid, setidentity_oauth_headers_name_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_source_valid, setidentity_oauth_headers_source_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n    }, []);\n\n    const [identity_oauth_headers_source_valid, setidentity_oauth_headers_source_valid] = useState(true);\n    const [identity_oauth_headers_source_invalid_text, setidentity_oauth_headers_source_invalid_text] = useState(\"\");\n\n\n    const [identity_oauth_headers_value, setidentity_oauth_headers_value] = useState(''),\n    updateidentity_oauth_headers_value = useCallback((evt) => {\n      setidentity_oauth_headers_value(evt.target.value);\n      var sourceWdgt = document.getElementById(\"identity_oauth_headers_source_id\" + idPrefix);\n      var sourceVal = (sourceWdgt)?sourceWdgt.value:\"\";\n      var nameWdgt = document.getElementById(\"identity_oauth_headers_name_id\" + idPrefix);\n      var nameVal = (nameWdgt)?nameWdgt.value:\"\";\n      var tempId = evt.target.value + sourceVal + nameVal;\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_source_valid, setidentity_oauth_headers_source_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_name_valid, setidentity_oauth_headers_name_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n      validateField(identity_oauth_headersrowData.identity_oauth_headers, setidentity_oauth_headers_value_valid, setidentity_oauth_headers_value_invalid_text, \"Identity Oauth Headers\", \"unique values\", tempId);\n    }, []);\n\n    const [identity_oauth_headers_value_valid, setidentity_oauth_headers_value_valid] = useState(true);\n    const [identity_oauth_headers_value_invalid_text, setidentity_oauth_headers_value_invalid_text] = useState(\"\");\n\n\n    const [identity_oauth_introspection_endpoint, setidentity_oauth_introspection_endpoint] = useState(''),\n    updateidentity_oauth_introspection_endpoint = useCallback((evt) => setidentity_oauth_introspection_endpoint(evt.target.value), []);\n\n    const [identity_oauth_mapped_identity, setidentity_oauth_mapped_identity] = useState('{sub}'),\n    updateidentity_oauth_mapped_identity = useCallback((evt) => setidentity_oauth_mapped_identity(evt.target.value), []);\n\n    const [identity_oauth_multi_valued_scope, setidentity_oauth_multi_valued_scope] = useState(true),\n    updateidentity_oauth_multi_valued_scope = useCallback((evt) => setidentity_oauth_multi_valued_scope(evt), []);\n\n    const [identity_oauth_name, setidentity_oauth_name] = useState(''),\n    updateidentity_oauth_name = useCallback((evt) => setidentity_oauth_name(evt.target.value), []);\n\n    const [identity_oauth_proxy, setidentity_oauth_proxy] = useState(''),\n    updateidentity_oauth_proxy = useCallback((evt) => setidentity_oauth_proxy(evt.target.value), []);\n\n    const [identity_oauth_restricted, setidentity_oauth_restricted] = useState(false),\n    updateidentity_oauth_restricted = useCallback((evt) => setidentity_oauth_restricted(evt), []);\n\n    const [identity_oauth_ssl_certificate_certificate, setidentity_oauth_ssl_certificate_certificate] = useState(''),\n    updateidentity_oauth_ssl_certificate_certificate = useCallback((evt) => {\n      setidentity_oauth_ssl_certificate_certificate(evt.target.value);\n      var tempId = evt.target.value;\n      validateField(identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate, setidentity_oauth_ssl_certificate_certificate_valid, setidentity_oauth_ssl_certificate_certificate_invalid_text, \"Identity Oauth Ssl Certificate\", \"certificate\", tempId);\n    }, []);\n\n    const [identity_oauth_ssl_certificate_certificate_valid, setidentity_oauth_ssl_certificate_certificate_valid] = useState(true);\n    const [identity_oauth_ssl_certificate_certificate_invalid_text, setidentity_oauth_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [identity_oauth_token_type_hint, setidentity_oauth_token_type_hint] = useState('access_token'),\n    updateidentity_oauth_token_type_hint = useCallback((evt) => setidentity_oauth_token_type_hint(evt.target.value), []);\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < identity_oauth_attributesrowData.identity_oauth_attributes.length; i++) {\n        if(identity_oauth_attributesrowData.identity_oauth_attributes[i].id === window.identity_oauth_attributesrowId) {\n        setidentity_oauth_attributes_attributes((identity_oauth_attributesrowData.identity_oauth_attributes[i] !== undefined && identity_oauth_attributesrowData.identity_oauth_attributes[i].attributes !== undefined )?identity_oauth_attributesrowData.identity_oauth_attributes[i].attributes:\"\");\n        }\n      }\n\n      for(var i = 0; i < identity_oauth_headersrowData.identity_oauth_headers.length; i++) {\n        if(identity_oauth_headersrowData.identity_oauth_headers[i].id === window.identity_oauth_headersrowId) {\n        setidentity_oauth_headers_name((identity_oauth_headersrowData.identity_oauth_headers[i] !== undefined && identity_oauth_headersrowData.identity_oauth_headers[i].name !== undefined )?identity_oauth_headersrowData.identity_oauth_headers[i].name:\"\");\n        setidentity_oauth_headers_source((identity_oauth_headersrowData.identity_oauth_headers[i] !== undefined && identity_oauth_headersrowData.identity_oauth_headers[i].source !== undefined )?identity_oauth_headersrowData.identity_oauth_headers[i].source:\"\");\n        setidentity_oauth_headers_value((identity_oauth_headersrowData.identity_oauth_headers[i] !== undefined && identity_oauth_headersrowData.identity_oauth_headers[i].value !== undefined )?identity_oauth_headersrowData.identity_oauth_headers[i].value:\"\");\n        }\n      }\n\n      for(var i = 0; i < identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate.length; i++) {\n        if(identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i].id === window.identity_oauth_ssl_certificaterowId) {\n        setidentity_oauth_ssl_certificate_certificate((identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i] !== undefined && identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i].certificate !== undefined )?identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n    return (\n      <div>\n        \n        <div id={'addidentity_oauthPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n          <Tabs id= {\"identity_oauth_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"attributes_tab\" + idPrefix}>Attributes</Tab>\n                <Tab tabFor={\"headers_tab\" + idPrefix}>Headers</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"headers_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading identity_oauth_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Identity / OAuth : </span><br/>                  <h2>Headers Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div identity_oauth_div\" + idPrefix}>\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"identity_oauth_headers_tooltip_id\" + idPrefix} >Headers</h3><hr/>\n</div>\n          <ReactTooltip id={\"identity_oauth_headers_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Additional HTTP headers which can be included in the introspection  request.<br/></div></ReactTooltip>\n\n                <div id={\"identity_oauth_headersTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <DataTable id={\"identity_oauth_headersTable\" + idPrefix} isSortable\n                        headers={identity_oauth_headersheaderData}\n                        rows={identity_oauth_headersrowData.identity_oauth_headers}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {identity_oauth_headershandleAdd(idPrefix, [setidentity_oauth_headers_name(''),    setidentity_oauth_headers_name_valid(true),    setidentity_oauth_headers_source(''),    setidentity_oauth_headers_source_valid(true),    setidentity_oauth_headers_value(''),    setidentity_oauth_headers_value_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityoauthheadersDeleteModal row={row} loadGrid={identity_oauth_headersloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityoauthheadersEdit  data={identity_oauth_headersrowData.identity_oauth_headers} setData={setDataMain} row={row} loadGrid={identity_oauth_headersloadGrid} dataLoad={dataLoad} editing={true} name={\"identity_oauth_headers\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateidentity_oauth_headers_name={updateidentity_oauth_headers_name} identity_oauth_headers_name={identity_oauth_headers_name}\n            identity_oauth_headers_name_valid={identity_oauth_headers_name_valid}\n            identity_oauth_headers_name_invalid_text={identity_oauth_headers_name_invalid_text}\n            updateidentity_oauth_headers_source={updateidentity_oauth_headers_source} identity_oauth_headers_source={identity_oauth_headers_source}\n            identity_oauth_headers_source_valid={identity_oauth_headers_source_valid}\n            identity_oauth_headers_source_invalid_text={identity_oauth_headers_source_invalid_text}\n            updateidentity_oauth_headers_value={updateidentity_oauth_headers_value} identity_oauth_headers_value={identity_oauth_headers_value}\n            identity_oauth_headers_value_valid={identity_oauth_headers_value_valid}\n            identity_oauth_headers_value_invalid_text={identity_oauth_headers_value_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.identity_oauth_name || !props.identity_oauth_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"attributes_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading identity_oauth_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Identity / OAuth : </span><br/>                  <h2>Attributes Settings</h2><hr/>\n                </div>\n                <div className={\"iag--simple-div identity_oauth_div\" + idPrefix}>\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"identity_oauth_attributes_tooltip_id\" + idPrefix} >Attributes</h3><hr/>\n</div>\n          <ReactTooltip id={\"identity_oauth_attributes_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A list of JSON data elements from the introspection response token which should be included in or excluded from the credential as an extended attribute. See the Attributes Format table for a description of the expected format.<br/></div></ReactTooltip>\n\n                <div id={\"identity_oauth_attributesTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <DataTable id={\"identity_oauth_attributesTable\" + idPrefix} isSortable\n                        headers={identity_oauth_attributesheaderData}\n                        rows={identity_oauth_attributesrowData.identity_oauth_attributes}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {identity_oauth_attributeshandleAdd(idPrefix, [setidentity_oauth_attributes_attributes(''),    setidentity_oauth_attributes_attributes_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityoauthattributesDeleteModal row={row} loadGrid={identity_oauth_attributesloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityoauthattributesEdit  data={identity_oauth_attributesrowData.identity_oauth_attributes} setData={setDataMain} row={row} loadGrid={identity_oauth_attributesloadGrid} dataLoad={dataLoad} editing={true} name={\"identity_oauth_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateidentity_oauth_attributes_attributes={updateidentity_oauth_attributes_attributes} identity_oauth_attributes_attributes={identity_oauth_attributes_attributes}\n            identity_oauth_attributes_attributes_valid={identity_oauth_attributes_attributes_valid}\n            identity_oauth_attributes_attributes_invalid_text={identity_oauth_attributes_attributes_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.identity_oauth_name || !props.identity_oauth_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading identity_oauth_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Identity / OAuth : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div identity_oauth_div\" + idPrefix}>\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                <Select\n                  value={props.identity_oauth_auth_method}\n                   id={\"identity_oauth_auth_method_id\" + idPrefix}\n data-tooltip-id={\"identity_oauth_auth_method_tooltip_id\" + idPrefix}                   labelText=\"Authentication Method\"\n                  onChange={props.updateidentity_oauth_auth_method}>\n                  <SelectItem text=\"\" value=\"\" />\n                  <SelectItem text=\"client_secret_post\" value=\"client_secret_post\" />\n                  <SelectItem text=\"client_secret_basic\" value=\"client_secret_basic\" />\n                </Select>\n          <ReactTooltip id={\"identity_oauth_auth_method_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Introspection can be authenticated with BA or Forms. Specify the value `client_secret_post` to post the client credentials or `client_secret_basic` to provide the credentials via the Authorization header. If not provided will default to `client_secret_post`<br/></div></ReactTooltip>\n                </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_client_id}  id={\"identity_oauth_client_id_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_client_id_tooltip_id\" + idPrefix}  labelText=\"Client ID\" onChange={props.updateidentity_oauth_client_id}/>\n          <ReactTooltip id={\"identity_oauth_client_id_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The client identity which is used to authenticate to the introspection endpoint.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_client_id_hdr}  id={\"identity_oauth_client_id_hdr_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_client_id_hdr_tooltip_id\" + idPrefix}  labelText=\"Client ID Header\" onChange={props.updateidentity_oauth_client_id_hdr}/>\n          <ReactTooltip id={\"identity_oauth_client_id_hdr_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name of the HTTP header which contains the client identifier which is used to authenticate to the introspection endpoint.  This configuration entry is mutually exclusive with the client_id configuration entry.  If the client_id configuration entry is provided this configuration entry will be ignored.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_client_secret}  id={\"identity_oauth_client_secret_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_client_secret_tooltip_id\" + idPrefix}  labelText=\"Client Secret\" onChange={props.updateidentity_oauth_client_secret}/>\n          <ReactTooltip id={\"identity_oauth_client_secret_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The client secret which is used to authenticate to the introspection endpoint.  If a client_id field is not configured the secret will be treated as a bearer token, otherwise it will be used in a basic authentication header.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_introspection_endpoint}  id={\"identity_oauth_introspection_endpoint_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_introspection_endpoint_tooltip_id\" + idPrefix}  labelText=\"Introspection Endpoint\" onChange={props.updateidentity_oauth_introspection_endpoint}/>\n          <ReactTooltip id={\"identity_oauth_introspection_endpoint_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The fully qualified introspection endpoint for the OAuth provider.<br/><br/>For IBM Security Verify, this URL is usually in the format:<br/><br/>`https://&lt;verify-hostname&gt;/v1.0/endpoint/default/introspect`<br/><br/>For IBM Security Verify Access, this URL is usually in the format:<br/><br/>`https://&lt;verify-access-hostname&gt;/&lt;junction&gt;/sps/oauth/oauth20/introspect`<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_mapped_identity}  id={\"identity_oauth_mapped_identity_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_mapped_identity_tooltip_id\" + idPrefix}  labelText=\"Mapped Identity\" onChange={props.updateidentity_oauth_mapped_identity}/>\n          <ReactTooltip id={\"identity_oauth_mapped_identity_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A formatted string which is used to construct the credential principal name from elements of the introspection response token. Claims can be added to the identity string, surrounded by `&#123;}`, for example:<br/>  &#123;iss}/&#123;sub} - would construct a principal name like the following:<br/>  https://server.example.com/248289761001<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <Checkbox checked={props.identity_oauth_multi_valued_scope} id={\"identity_oauth_multi_valued_scope_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_multi_valued_scope_tooltip_id\" + idPrefix}  labelText=\"Multi Valued Scope\" onChange={props.updateidentity_oauth_multi_valued_scope}/>\n          <ReactTooltip id={\"identity_oauth_multi_valued_scope_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>By default the OAuth scope attribute is provided as a single space separated string.  By enabling this configuration option the scope attribute will instead be converted to a multi-value attribute.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  invalid={!props.identity_oauth_name_valid}  invalidText={props.identity_oauth_name_invalid_text}  value={props.identity_oauth_name}  id={\"identity_oauth_name_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_name_tooltip_id\" + idPrefix}  labelText=\"Name *\" onChange={props.updateidentity_oauth_name}/>\n          <ReactTooltip id={\"identity_oauth_name_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name which is used to identify and describe this endpoint.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_proxy}  id={\"identity_oauth_proxy_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_proxy_tooltip_id\" + idPrefix}  labelText=\"Proxy\" onChange={props.updateidentity_oauth_proxy}/>\n          <ReactTooltip id={\"identity_oauth_proxy_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>Specifies the proxy, if any, which is used to reach the OAuth provider. The proxy configuration entry should be in URL format. Eg: `http[s]://&lt;address&gt;:&lt;port&gt;`<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <Checkbox checked={props.identity_oauth_restricted} id={\"identity_oauth_restricted_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_restricted_tooltip_id\" + idPrefix}  labelText=\"Restricted\" onChange={props.updateidentity_oauth_restricted}/>\n          <ReactTooltip id={\"identity_oauth_restricted_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag which indicates whether this endpoint is restricted to certain resource servers or not.  If the endpoint is restricted only those resource servers which specifically mention this endpoint, using the identity/oauth element within the resource server definition, will be allowed to use this endpoint.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n          <TextInput  value={props.identity_oauth_token_type_hint}  id={\"identity_oauth_token_type_hint_id\" + idPrefix}  data-tooltip-id={\"identity_oauth_token_type_hint_tooltip_id\" + idPrefix}  labelText=\"Token Type Hint\" onChange={props.updateidentity_oauth_token_type_hint}/>\n          <ReactTooltip id={\"identity_oauth_token_type_hint_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A hint about the type of the token submitted for introspection.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.identity_oauth_name || !props.identity_oauth_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading identity_oauth_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Identity / OAuth : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the OAuth introspection connection.\n                </div>\n                <div className={\"iag--simple-div identity_oauth_div\" + idPrefix}>\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"identity_oauth_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"identity_oauth_ssl_certificate_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, any signer certificates required for the reverse proxy to trust the OAuth provider can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"identity_oauth_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <DataTable id={\"identity_oauth_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={identity_oauth_ssl_certificateheaderData}\n                        rows={identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {identity_oauth_ssl_certificatehandleAdd(idPrefix, [setidentity_oauth_ssl_certificate_certificate(''),    setidentity_oauth_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityoauthsslcertificateDeleteModal row={row} loadGrid={identity_oauth_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <IdentityoauthsslcertificateEdit  data={identity_oauth_ssl_certificaterowData.identity_oauth_ssl_certificate} setData={setDataMain} row={row} loadGrid={identity_oauth_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"identity_oauth_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateidentity_oauth_ssl_certificate_certificate={updateidentity_oauth_ssl_certificate_certificate} identity_oauth_ssl_certificate_certificate={identity_oauth_ssl_certificate_certificate}\n            identity_oauth_ssl_certificate_certificate_valid={identity_oauth_ssl_certificate_certificate_valid}\n            identity_oauth_ssl_certificate_certificate_invalid_text={identity_oauth_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem identity_oauth_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.identity_oauth_name || !props.identity_oauth_name_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityoauthattributesAdd loadGrid={identity_oauth_attributesloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateidentity_oauth_attributes_attributes={updateidentity_oauth_attributes_attributes} identity_oauth_attributes_attributes={identity_oauth_attributes_attributes}\n            identity_oauth_attributes_attributes_valid={identity_oauth_attributes_attributes_valid}\n            identity_oauth_attributes_attributes_invalid_text={identity_oauth_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityoauthattributesEdit  loadGrid={identity_oauth_attributesloadGrid} dataLoad={dataLoad} name={\"identity_oauth_attributes\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateidentity_oauth_attributes_attributes={updateidentity_oauth_attributes_attributes} identity_oauth_attributes_attributes={identity_oauth_attributes_attributes}\n            identity_oauth_attributes_attributes_valid={identity_oauth_attributes_attributes_valid}\n            identity_oauth_attributes_attributes_invalid_text={identity_oauth_attributes_attributes_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityoauthheadersAdd loadGrid={identity_oauth_headersloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateidentity_oauth_headers_name={updateidentity_oauth_headers_name} identity_oauth_headers_name={identity_oauth_headers_name}\n            identity_oauth_headers_name_valid={identity_oauth_headers_name_valid}\n            identity_oauth_headers_name_invalid_text={identity_oauth_headers_name_invalid_text}\n            updateidentity_oauth_headers_source={updateidentity_oauth_headers_source} identity_oauth_headers_source={identity_oauth_headers_source}\n            identity_oauth_headers_source_valid={identity_oauth_headers_source_valid}\n            identity_oauth_headers_source_invalid_text={identity_oauth_headers_source_invalid_text}\n            updateidentity_oauth_headers_value={updateidentity_oauth_headers_value} identity_oauth_headers_value={identity_oauth_headers_value}\n            identity_oauth_headers_value_valid={identity_oauth_headers_value_valid}\n            identity_oauth_headers_value_invalid_text={identity_oauth_headers_value_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityoauthheadersEdit  loadGrid={identity_oauth_headersloadGrid} dataLoad={dataLoad} name={\"identity_oauth_headers\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateidentity_oauth_headers_name={updateidentity_oauth_headers_name} identity_oauth_headers_name={identity_oauth_headers_name}\n            identity_oauth_headers_name_valid={identity_oauth_headers_name_valid}\n            identity_oauth_headers_name_invalid_text={identity_oauth_headers_name_invalid_text}\n            updateidentity_oauth_headers_source={updateidentity_oauth_headers_source} identity_oauth_headers_source={identity_oauth_headers_source}\n            identity_oauth_headers_source_valid={identity_oauth_headers_source_valid}\n            identity_oauth_headers_source_invalid_text={identity_oauth_headers_source_invalid_text}\n            updateidentity_oauth_headers_value={updateidentity_oauth_headers_value} identity_oauth_headers_value={identity_oauth_headers_value}\n            identity_oauth_headers_value_valid={identity_oauth_headers_value_valid}\n            identity_oauth_headers_value_invalid_text={identity_oauth_headers_value_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityoauthsslcertificateAdd loadGrid={identity_oauth_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateidentity_oauth_ssl_certificate_certificate={updateidentity_oauth_ssl_certificate_certificate} identity_oauth_ssl_certificate_certificate={identity_oauth_ssl_certificate_certificate}\n            identity_oauth_ssl_certificate_certificate_valid={identity_oauth_ssl_certificate_certificate_valid}\n            identity_oauth_ssl_certificate_certificate_invalid_text={identity_oauth_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <IdentityoauthsslcertificateEdit  loadGrid={identity_oauth_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"identity_oauth_ssl_certificate\"} idPrefix={idPrefix + \"_add\"} parentIdPrefix={idPrefix} \n            updateidentity_oauth_ssl_certificate_certificate={updateidentity_oauth_ssl_certificate_certificate} identity_oauth_ssl_certificate_certificate={identity_oauth_ssl_certificate_certificate}\n            identity_oauth_ssl_certificate_certificate_valid={identity_oauth_ssl_certificate_certificate_valid}\n            identity_oauth_ssl_certificate_certificate_invalid_text={identity_oauth_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n        </div>\n    );\n}\n\nexport default Identity_oauthAdd;\n"],"names":["IdentityoauthattributesDeleteModal","lazy","IdentityoauthattributesAdd","IdentityoauthattributesEdit","IdentityoauthheadersDeleteModal","IdentityoauthheadersAdd","IdentityoauthheadersEdit","IdentityoauthsslcertificateDeleteModal","IdentityoauthsslcertificateAdd","IdentityoauthsslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","identity_oauth_ssl_certificaterowData","identity_oauth_ssl_certificate","identity_oauth_headersrowData","identity_oauth_headers","identity_oauth_attributesrowData","identity_oauth_attributes","handleClose","handleAdd","setidentity_oauth_attributes","setidentity_oauth_headers","setidentity_oauth_ssl_certificate","doAdd","updateStyle","style","display","closeAdd","identity_oauth_attributesheaderData","header","key","identity_oauth_attributeshandleAdd","clearFields","i","length","eval","identity_oauth_headersheaderData","identity_oauth_headershandleAdd","identity_oauth_ssl_certificateheaderData","identity_oauth_ssl_certificatehandleAdd","Identity_oauthAdd","props","row","React","fetchedidentity_oauth_attributes","setFetchedidentity_oauth_attributes","identity_oauth_attributesloadGrid","async","identity_oauth_attributes_attributes","add","attrs","tempId","attributes","window","identity_oauth_attributesediting","identity_oauth_attributesrowId","push","newId","id","e","console","log","fetchedidentity_oauth_headers","setFetchedidentity_oauth_headers","identity_oauth_headersloadGrid","identity_oauth_headers_name","identity_oauth_headers_source","identity_oauth_headers_value","source","name","identity_oauth_headersediting","identity_oauth_headersrowId","fetchedidentity_oauth_ssl_certificate","setFetchedidentity_oauth_ssl_certificate","identity_oauth_ssl_certificateloadGrid","identity_oauth_ssl_certificate_certificate","certificate","identity_oauth_ssl_certificateediting","identity_oauth_ssl_certificaterowId","setidentity_oauth_attributes_attributes","useState","updateidentity_oauth_attributes_attributes","useCallback","evt","target","validateField","setidentity_oauth_attributes_attributes_valid","setidentity_oauth_attributes_attributes_invalid_text","identity_oauth_attributes_attributes_valid","identity_oauth_attributes_attributes_invalid_text","identity_oauth_auth_method","setidentity_oauth_auth_method","updateidentity_oauth_auth_method","identity_oauth_client_id","setidentity_oauth_client_id","updateidentity_oauth_client_id","identity_oauth_client_id_hdr","setidentity_oauth_client_id_hdr","updateidentity_oauth_client_id_hdr","identity_oauth_client_secret","setidentity_oauth_client_secret","updateidentity_oauth_client_secret","setidentity_oauth_headers_name","updateidentity_oauth_headers_name","valueWdgt","valueVal","sourceWdgt","setidentity_oauth_headers_value_valid","setidentity_oauth_headers_value_invalid_text","setidentity_oauth_headers_source_valid","setidentity_oauth_headers_source_invalid_text","setidentity_oauth_headers_name_valid","setidentity_oauth_headers_name_invalid_text","identity_oauth_headers_name_valid","identity_oauth_headers_name_invalid_text","setidentity_oauth_headers_source","updateidentity_oauth_headers_source","nameWdgt","nameVal","identity_oauth_headers_source_valid","identity_oauth_headers_source_invalid_text","setidentity_oauth_headers_value","updateidentity_oauth_headers_value","sourceVal","identity_oauth_headers_value_valid","identity_oauth_headers_value_invalid_text","identity_oauth_introspection_endpoint","setidentity_oauth_introspection_endpoint","updateidentity_oauth_introspection_endpoint","identity_oauth_mapped_identity","setidentity_oauth_mapped_identity","updateidentity_oauth_mapped_identity","identity_oauth_multi_valued_scope","setidentity_oauth_multi_valued_scope","updateidentity_oauth_multi_valued_scope","identity_oauth_name","setidentity_oauth_name","updateidentity_oauth_name","identity_oauth_proxy","setidentity_oauth_proxy","updateidentity_oauth_proxy","identity_oauth_restricted","setidentity_oauth_restricted","updateidentity_oauth_restricted","setidentity_oauth_ssl_certificate_certificate","updateidentity_oauth_ssl_certificate_certificate","setidentity_oauth_ssl_certificate_certificate_valid","setidentity_oauth_ssl_certificate_certificate_invalid_text","identity_oauth_ssl_certificate_certificate_valid","identity_oauth_ssl_certificate_certificate_invalid_text","identity_oauth_token_type_hint","setidentity_oauth_token_type_hint","updateidentity_oauth_token_type_hint","fetcheddata","setFetcheddata","dataLoad","setDataMain","functionName","data","_jsx","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","tabIndex","ReactTooltip","clickable","place","effect","maxWidth","marginLeft","marginBottom","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Button","onClick","Table","_objectSpread","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","setData","editing","parentIdPrefix","disabled","identity_oauth_name_valid","_ref2","Select","labelText","onChange","SelectItem","text","TextInput","Checkbox","invalid","invalidText","identity_oauth_name_invalid_text","_ref3"],"sourceRoot":""}