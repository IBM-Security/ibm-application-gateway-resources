{"version":3,"file":"static/js/4612.2112cae9.chunk.js","mappings":"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","sources":["content/resource_serversPage/serversEdit.js","../node_modules/carbon-components-react/es/components/Icon/Icon.js"],"sourcesContent":["import React, { useCallback, useState, lazy, Suspense } from 'react';\nimport {\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  SelectItem,\n  Checkbox,\n  DataTable,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableContainer,\n  TableCell,\n  Table,\n  TableBody,\n  TableToolbar,\n  TableToolbarContent,\n  Icon,\n} from 'carbon-components-react';\n\nimport {\n    iconEdit, iconEditSolid, iconEditOutline,\n  } from 'carbon-icons';\n\nimport Collapsible from 'react-collapsible';\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs';\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\n\nimport { safeLoad, getDivHeight, jsonToYaml, updateStyle, updateStyle2, editProps, validateField, toggleDescription } from '../../helpers';\n\n\nconst ServerssslcertificateDeleteModal = lazy(() => import('./serverssslcertificateDeleteModal'));\nconst ServerssslcertificateAdd = lazy(() => import('./serverssslcertificateAdd'));\nconst ServerssslcertificateEdit = lazy(() => import('./serverssslcertificateEdit'));\n\n\n  const handleChange = () => {\n  };\n\n  const handleSave = (loadGrid, idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    var json = {};\n      \n    if(document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_host\"] = document.getElementById(\"resource_servers_servers_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_port\"] = document.getElementById(\"resource_servers_servers_port_id\" + idPrefix).value;\n    json[\"resource_servers_servers_priority\"] = document.getElementById(\"resource_servers_servers_priority_id\" + idPrefix).value;\n    if(document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_ssl_server_dn\"] = document.getElementById(\"resource_servers_servers_ssl_server_dn_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_url_style_case_insensitive\"] = document.getElementById(\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix).checked.toString();\n    json[\"resource_servers_servers_url_style_windows\"] = document.getElementById(\"resource_servers_servers_url_style_windows_id\" + idPrefix).checked.toString();\n    if(document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_uuid\"] = document.getElementById(\"resource_servers_servers_uuid_id\" + idPrefix).value;\n    }\n    if(document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value.endsWith(\":\") !== true) {\n      json[\"resource_servers_servers_virtual_host\"] = document.getElementById(\"resource_servers_servers_virtual_host_id\" + idPrefix).value;\n    }\n    json[\"resource_servers_servers_ssl_certificate\"] = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n      \n    loadGrid( json[\"resource_servers_servers_host\"], json[\"resource_servers_servers_port\"], json[\"resource_servers_servers_priority\"], json[\"resource_servers_servers_ssl_server_dn\"], json[\"resource_servers_servers_url_style_case_insensitive\"], json[\"resource_servers_servers_url_style_windows\"], json[\"resource_servers_servers_uuid\"], json[\"resource_servers_servers_virtual_host\"], json[\"resource_servers_servers_ssl_certificate\"], true); \n\n    handleClose(idPrefix, objectName,  tbName, parentIdPrefix,  doClose);\n  };\n\n  const handleAdd = (rowId, dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  loadGrids, data, setData) => {\n\n    var oName = (objectName)?objectName:\"\";\n    window[oName + \"editing\"] = true;\n    window[oName + \"rowId\"] = rowId;\n\n    if(loadGrids) {\n      for(var i = 0; i < loadGrids.length; i++) {\n        loadGrids[i](objectName, data, setData);\n      }\n    }\n\n    dataLoad();\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"none\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"none\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"block\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"none\";\n\n  };\n\n  const handleClose = (idPrefix, objectName,  tbName, parentIdPrefix,  doClose) => {\n\n    var oName = (objectName)?objectName:\"\";\n    delete(window[oName + \"editing\"]);\n    delete(window[oName + \"rowId\"]);\n\n    var pName = oName;\n    if(pName.endsWith(\"_servers\")) {\n        var len = \"_servers\".length;\n        pName = pName.slice(0, -len);\n    }\n\n    if(tbName !== undefined && tbName !== \"\") {\n      document.getElementById(tbName).style.display = \"flex\";\n    }\n\n    updateStyle(pName + \"_div\" + parentIdPrefix, \"display\", \"block\");\n    document.getElementById(\"editserversPage\" + idPrefix).style.display = \"none\";\n    document.getElementById(pName + \"_tab\" + parentIdPrefix).style.display = \"flex\";\n\n\n\n      if(doClose) {\n        doClose();\n      }\n  };\n\n  const closeAdd = (idPrefix) => {\n\n      if(idPrefix === undefined) idPrefix = \"\";\n\n      updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"block\");\n      document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"flex\";\n\n  };\n\nconst resource_servers_servers_ssl_certificateheaderData = [\n    {\n    header: 'Certificate',\n    key: 'certificate',\n  },\n\n];\n\nconst resource_servers_servers_ssl_certificaterowData = {resource_servers_servers_ssl_certificate: []};\n\nconst resource_servers_servers_ssl_certificatehandleAdd = (idPrefix, clearFields) => {\n    if(idPrefix === undefined) idPrefix = \"\";\n\n    // Set the fields to empty\n    if(clearFields) {\n      for(var i = 0; i < clearFields.length; i++) {\n        eval(clearFields[i]);\n      }\n    }\n\n    document.getElementById(\"resource_servers_servers_ssl_certificate_certificate_id\" + idPrefix).value = \"\";\n    // Hide the tab page\n    updateStyle(\"resource_servers_servers_div\" + idPrefix, \"display\", \"none\");\n    // Show the add page\n    document.getElementById(\"addserversssl_certificatePage\" + idPrefix).style.display = \"block\";\n    // Hide the remaining fields\n    document.getElementById(\"resource_servers_servers_tab\" + idPrefix).style.display = \"none\";\n\n  };\n\n    const getEditData = (objectName, data, setData) => {\n      var oName = (objectName)?objectName:\"\"\n\n      var yamlText = window.iagyaml;\n      var json = {};\n      if(yamlText !== null && yamlText !== undefined) {\n        json = safeLoad(yamlText);\n        if(json === undefined || json === null) {\n          json = {};\n        }\n      }\n\n    resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = [];\n    if(data && setData) {\n      for(var i = 0; i < data.length; i++) {\n        var tempId = ((data[i].port)?data[i].port:\"\") + ((data[i].host)?data[i].host:\"\");\n        if(tempId === window[oName + \"rowId\"]) {\n            if(data[i] !== undefined && data[i].ssl !== undefined && data[i].ssl.certificate !== undefined ) {\n              if(typeof data[i].ssl.certificate === \"string\") {\n                var newItem = {};\n                newItem[\"id\"] = data[i].ssl.certificate;\n                newItem[\"certificate\"] = data[i].ssl.certificate;\n                resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n              } else {\n                for(var i2 = 0; i2 < data[i].ssl.certificate.length; i2++) {\n                  var newItem = {};\n                  if(data[i].ssl.certificate[i2].id) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].id;\n                  } else if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"id\"] = data[i].ssl.certificate[i2];\n                  }\n                  if(data[i].ssl.certificate[i2].certificate) {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2].certificate;\n                  } else {\n                    newItem[\"certificate\"] = data[i].ssl.certificate[i2];\n                  }\n                  resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.push(newItem);\n                }\n              }\n              setData(\"setresource_servers_servers_ssl_certificate\", resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate);\n            }\n        }\n      }\n    } else {\n      if(json !== undefined && json.resource_servers !== undefined ) {\n      }\n    }\n  };\nconst ServersEdit = (props) => {\n\n    var row = props.row;\n    const loadGrid = props.loadGrid;\n    const doClose = props.doClose;\n    const idPrefix = (props.idPrefix)?props.idPrefix:\"\";\n    const parentIdPrefix = (props.parentIdPrefix)?props.parentIdPrefix:\"\";\n    const objectName = (props.name)?props.name:\"\";\n    const tbName = (props.toolbarName)?props.toolbarName:\"\";\n\n    var rowId = (row !== undefined)?row.id:\"\";\n\n    const [resource_servers_servers_ssl_certificate, setresource_servers_servers_ssl_certificate] = React.useState([]);\n    const [fetchedresource_servers_servers_ssl_certificate, setFetchedresource_servers_servers_ssl_certificate] = React.useState(false);\n\n    React.useEffect(() => {\n      resource_servers_servers_ssl_certificateloadGrid();\n    }, [fetchedresource_servers_servers_ssl_certificate]);\n\n    const resource_servers_servers_ssl_certificateloadGrid = React.useCallback(async (resource_servers_servers_ssl_certificate_certificate, add) => {\n      try {\n        var attrs = [];\n        if(resource_servers_servers_ssl_certificate_certificate) {\n          if(add) {\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              var tempId = ((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate)?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\") + \"\";\n              if((window.resource_servers_servers_ssl_certificateediting != true && window.resource_servers_servers_ssl_certificateediting != \"true\") || tempId != window.resource_servers_servers_ssl_certificaterowId) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n            var newId = ((resource_servers_servers_ssl_certificate_certificate)?resource_servers_servers_ssl_certificate_certificate:\"\") + \"\";\n            attrs.push({\n              id: newId,\n              certificate: resource_servers_servers_ssl_certificate_certificate,\n            });\n          } else {\n            // Must be a delete\n            for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n              if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== resource_servers_servers_ssl_certificate_certificate ) {\n                attrs.push(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i]);\n              }\n            }\n          }\n        } else {\n          attrs = resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate;\n        }\n        resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate = attrs;\n        const data = {resource_servers_servers_ssl_certificate: attrs};\n        setresource_servers_servers_ssl_certificate(data.resource_servers_servers_ssl_certificate);\n\n\n      } catch (e) {\n        console.log(e);\n      }\n      return true;\n    });\n\n\n    const [resource_servers_servers_host, setresource_servers_servers_host] = useState(''),\n    updateresource_servers_servers_host = useCallback((evt) => setresource_servers_servers_host(evt.target.value), []);\n\n    const [resource_servers_servers_port, setresource_servers_servers_port] = useState(443),\n    updateresource_servers_servers_port = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_priority, setresource_servers_servers_priority] = useState(9),\n    updateresource_servers_servers_priority = useCallback((evt) => {}, []);\n\n    const [resource_servers_servers_ssl_certificate_certificate, setresource_servers_servers_ssl_certificate_certificate] = useState(''),\n    updateresource_servers_servers_ssl_certificate_certificate = useCallback((evt) => setresource_servers_servers_ssl_certificate_certificate(evt.target.value), []);\n    const [resource_servers_servers_ssl_certificate_certificate_valid, setresource_servers_servers_ssl_certificate_certificate_valid] = useState(true);\n    const [resource_servers_servers_ssl_certificate_certificate_invalid_text, setresource_servers_servers_ssl_certificate_certificate_invalid_text] = useState(\"\");\n\n\n    const [resource_servers_servers_ssl_server_dn, setresource_servers_servers_ssl_server_dn] = useState(''),\n    updateresource_servers_servers_ssl_server_dn = useCallback((evt) => setresource_servers_servers_ssl_server_dn(evt.target.value), []);\n\n    const [resource_servers_servers_url_style_case_insensitive, setresource_servers_servers_url_style_case_insensitive] = useState(false),\n    updateresource_servers_servers_url_style_case_insensitive = useCallback((evt) => setresource_servers_servers_url_style_case_insensitive(evt), []);\n\n    const [resource_servers_servers_url_style_windows, setresource_servers_servers_url_style_windows] = useState(false),\n    updateresource_servers_servers_url_style_windows = useCallback((evt) => setresource_servers_servers_url_style_windows(evt), []);\n\n    const [resource_servers_servers_uuid, setresource_servers_servers_uuid] = useState(''),\n    updateresource_servers_servers_uuid = useCallback((evt) => setresource_servers_servers_uuid(evt.target.value), []);\n\n    const [resource_servers_servers_virtual_host, setresource_servers_servers_virtual_host] = useState(''),\n    updateresource_servers_servers_virtual_host = useCallback((evt) => setresource_servers_servers_virtual_host(evt.target.value), []);\n\n\n\n    const [fetcheddata, setFetcheddata] = React.useState(false);\n    React.useEffect(() => {\n      dataLoad();\n    }, [fetcheddata]);\n    const dataLoad = () => {\n\n      for(var i = 0; i < resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate.length; i++) {\n        if(resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].id === window.resource_servers_servers_ssl_certificaterowId) {\n        setresource_servers_servers_ssl_certificate_certificate((resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i] !== undefined && resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate !== undefined )?resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate[i].certificate:\"\");\n        }\n      }\n\n\n      return true;\n    };\n\n    const setDataMain = (functionName, data) => {\n      if(functionName && data) {\n        eval(functionName)(data);\n      }\n    };\n\n  if(props.editing == true) {\n    return (\n      <Icon {...editProps.editIcon()} onClick={() => {handleAdd(rowId, props.dataLoad, idPrefix, objectName,  tbName, parentIdPrefix,  [getEditData], props.data, props.setData); }} title={\"TODO\"} />    );\n  } else {\n    return (\n      <div>\n        <div id={'editserversPage' + idPrefix} style={{display:'none'}} className=\"bx--col bx--no-gutter\">\n\n\n          <Tabs id= {\"resource_servers_servers_tab\" + idPrefix} defaultTab={\"General_tab\" + idPrefix} vertical className=\"vertical-tabs\" style={{overflow:'auto'}}>\n              <TabList>\n                <Tab tabFor={\"General_tab\" + idPrefix}>General</Tab>\n                <Tab tabFor={\"ssl_tab\" + idPrefix}>SSL</Tab>\n                <Tab tabFor={\"url_style_tab\" + idPrefix}>URL Style</Tab>\n              </TabList>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"url_style_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>URL Style Settings</h2><hr/>\n                  This entry defines how the resource server URLs are handled.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>URL Style</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_case_insensitive} id={\"resource_servers_servers_url_style_case_insensitive_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix}  labelText=\"Case Insensitive\" onChange={props.updateresource_servers_servers_url_style_case_insensitive}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_case_insensitive_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <Checkbox checked={props.resource_servers_servers_url_style_windows} id={\"resource_servers_servers_url_style_windows_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix}  labelText=\"Windows\" onChange={props.updateresource_servers_servers_url_style_windows}/>\n          <ReactTooltip id={\"resource_servers_servers_url_style_windows_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>A boolean flag indicating whether or not to forbid requests to URLs that appear to be Windows style file name aliases. If this entry is set to `true` it will also enforce that URLs are case insensitive.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"General_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>General Settings</h2><hr/>\n                  Specifies the general settings associated with this component\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_host}  id={\"resource_servers_servers_host_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_host_tooltip_id\" + idPrefix}  labelText=\"Host *\" onChange={props.updateresource_servers_servers_host}/>\n          <ReactTooltip id={\"resource_servers_servers_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The name or IP address of the server.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_port} id={\"resource_servers_servers_port_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_port_tooltip_id\" + idPrefix}  min={0}  max={65535}  label=\"Port *\" onChange={props.updateresource_servers_servers_port}/>\n          <ReactTooltip id={\"resource_servers_servers_port_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The port on which the server is listening.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <NumberInput value={props.resource_servers_servers_priority} id={\"resource_servers_servers_priority_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix}  min={1}  max={9}  label=\"Priority\" onChange={props.updateresource_servers_servers_priority}/>\n          <ReactTooltip id={\"resource_servers_servers_priority_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The priority group for this server. The load balancing algorithm in IAG will forward client requests to any currently available  server with the highest priority.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_uuid}  id={\"resource_servers_servers_uuid_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix}  labelText=\"Uuid\" onChange={props.updateresource_servers_servers_uuid}/>\n          <ReactTooltip id={\"resource_servers_servers_uuid_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>The UUID for this server. The UUID of the server is used if this  is a stateful resource server to ensure that client requests are always handled by the same server. This field is optional and will be automatically generated if not provided.<br/>The UUID only needs to be manually set when multiple instances  of IAG are handling the same stateful traffic. That is, so that  each IAG instance is using the same UUIDs for the same servers.<br/></div></ReactTooltip>\n        </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_virtual_host}  id={\"resource_servers_servers_virtual_host_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix}  labelText=\"Virtual Host\" onChange={props.updateresource_servers_servers_virtual_host}/>\n          <ReactTooltip id={\"resource_servers_servers_virtual_host_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If the resource server resides on a virtual host, this parameter can be used to specify the hostname which the reverse proxy should present in the host header for requests to this resource server. If this resource server definition is for a virtual host, this will be inherited from the resource server definition and should not be specified.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n              <TabPanel style={{width:'100%', overflow:'auto'}} tabId={\"ssl_tab\" + idPrefix}>\n                <div className=\"iag_sublevel_tabs\" style={{height:'60vh', overflow:'auto'}}>\n                <div className= {\"iag_form_elem iag_tab_heading resource_servers_servers_div\" + idPrefix}>\n                  <span className=\"iag_breadcrumb\">Resource Servers / Servers : </span><br/>                  <h2>SSL Settings</h2><hr/>\n                  SSL settings for the server.\n                </div>\n                <div className={\"iag--simple-div resource_servers_servers_div\" + idPrefix}>\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3>SSL</h3><hr/>\n</div>\n                <div className=\"iag-wdgt-container\" style={{marginLeft:\"20px\",marginBottom:\"10px\"}}>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n  <h3 tabIndex=\"0\"  data-tooltip-id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} >Certificate</h3><hr/>\n</div>\n          <ReactTooltip id={\"resource_servers_servers_ssl_certificate_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>If required, a signer certificate required for the reverse proxy to trust the resource server can be specified here in PEM format.<br/></div></ReactTooltip>\n\n                <div id={\"resource_servers_servers_ssl_certificateTableDiv\" + idPrefix} style={{marginLeft:\"10px\",marginBottom:\"10px\"}}>\n                  <div className={\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <DataTable id={\"resource_servers_servers_ssl_certificateTable\" + idPrefix} isSortable\n                        headers={resource_servers_servers_ssl_certificateheaderData}\n                        rows={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate}\n                        render={({\n                          rows,\n                          headers,\n                          getHeaderProps,\n                          getRowProps,\n                          getTableProps,\n                          getToolbarProps,\n                          onInputChange,\n                          getTableContainerProps\n                    }) => (\n                      <TableContainer>\n                        <TableToolbar aria-label=\"data table toolbar\">\n                          <TableToolbarContent>\n                            <Button onClick={() => {resource_servers_servers_ssl_certificatehandleAdd(idPrefix, [setresource_servers_servers_ssl_certificate_certificate(''),    setresource_servers_servers_ssl_certificate_certificate_valid(true),]);}}>Add</Button>\n                          </TableToolbarContent>\n                        </TableToolbar>\n                        <Table size='normal' {...getTableProps()}>\n                          <TableHead>\n                            <TableRow>\n                              {headers.map(header => (\n                                <TableHeader {...getHeaderProps({ header })}>\n                                  {header.header}\n                                </TableHeader>\n                              ))}\n                              <TableHeader>\n                                  Actions\n                              </TableHeader>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {rows.map(row => (\n                              <TableRow key={row.id}>\n                                {row.cells.map(cell => (\n                                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                                ))}\n                                <TableCell>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateDeleteModal row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} />\n                                  </Suspense>\n                                  <Suspense fallback={<div></div>}>\n                                    <ServerssslcertificateEdit  data={resource_servers_servers_ssl_certificaterowData.resource_servers_servers_ssl_certificate} setData={setDataMain} row={row} loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} editing={true} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                                    />\n                                  </Suspense>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>)}\n                    />\n                  </div>\n                </div>\n\n                <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n          <TextInput  value={props.resource_servers_servers_ssl_server_dn}  id={\"resource_servers_servers_ssl_server_dn_id\" + idPrefix}  data-tooltip-id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix}  labelText=\"Server DN\" onChange={props.updateresource_servers_servers_ssl_server_dn}/>\n          <ReactTooltip id={\"resource_servers_servers_ssl_server_dn_tooltip_id\" + idPrefix} clickable={true} place=\"top\" effect=\"solid\" ><div style={{ maxWidth: 300 }}>This option can be used to ensure that the resource server presents a specific certificate.<br/></div></ReactTooltip>\n        </div>\n\n                </div>\n\n                </div>\n                </div>\n                  <div className= {\"iag_form_elem resource_servers_servers_div\" + idPrefix}>\n                    <Button onClick={() => { handleClose(idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Cancel</Button>\n                    <Button disabled={(!props.resource_servers_servers_port || !props.resource_servers_servers_port_valid) || (!props.resource_servers_servers_host || !props.resource_servers_servers_host_valid)} onClick={() => { handleSave(loadGrid, idPrefix,  objectName,  tbName, parentIdPrefix,  doClose); }}>Save</Button>\n                  </div>\n              </TabPanel>\n          </Tabs>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateAdd loadGrid={resource_servers_servers_ssl_certificateloadGrid} doClose={() => {closeAdd(idPrefix);}} idPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n                  <Suspense fallback={<div></div>}>\n                    <ServerssslcertificateEdit  loadGrid={resource_servers_servers_ssl_certificateloadGrid} dataLoad={dataLoad} name={\"resource_servers_servers_ssl_certificate\"} idPrefix={idPrefix + \"_edit\"} parentIdPrefix={idPrefix} \n            updateresource_servers_servers_ssl_certificate_certificate={updateresource_servers_servers_ssl_certificate_certificate} resource_servers_servers_ssl_certificate_certificate={resource_servers_servers_ssl_certificate_certificate}\n            resource_servers_servers_ssl_certificate_certificate_valid={resource_servers_servers_ssl_certificate_certificate_valid}\n            resource_servers_servers_ssl_certificate_certificate_invalid_text={resource_servers_servers_ssl_certificate_certificate_invalid_text}\n                    />\n                  </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ServersEdit;\n","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"className\", \"iconTitle\", \"description\", \"fill\", \"fillRule\", \"height\", \"name\", \"icon\", \"role\", \"style\", \"width\", \"iconRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport icons from 'carbon-icons';\n/**\n * The icons list object from `carbon-icons`.\n * @type {object}\n */\n\nvar iconsList = icons;\n/**\n * Returns a single icon Object\n * @param {string} name - \"name\" property of icon\n * @param {object} [iconsObj=icons] - JSON Array of Objects\n * @example\n * // Returns a single icon Object\n * this.findIcon('copy-code', icons.json);\n */\n\nexport function findIcon(name) {\n  var iconsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : iconsList;\n  var icon = iconsObj.filter(function (obj) {\n    return obj.name === name;\n  });\n\n  if (icon.length === 0) {\n    return false;\n  } else if (icon.length > 1) {\n    throw new Error('Multiple icons found...');\n  } else {\n    return icon[0];\n  }\n}\n/**\n * Sets the icons list object from `carbon-icons`.\n * Doing so instead of having this module directly import `carbon-icons`\n * avoids the icons list being included in applications' bundles if only limited set of icons is in use.\n * @param {object} list The icons list from `carbon-icons`.\n */\n\nexport function setIconsList(list) {\n  iconsList = list;\n}\n/**\n * Returns \"svgData\" Object\n * @param {string} iconName - \"name\" property of icon\n * @example\n * // Returns svgData Object for given iconName\n * this.getSvgData('copy-code');\n */\n\nexport function getSvgData(iconName) {\n  var icon = findIcon(iconName);\n  return icon ? icon.svgData : false;\n}\n/**\n * @param {object} svgData - JSON Object for an SVG icon\n * @returns {ReactElement} Elements/Nodes for SVG\n * @example\n * // Returns SVG elements\n * const svgData = getSvgData('copy-code');\n * svgShapes(svgData);\n */\n\nexport function svgShapes(svgData) {\n  var svgElements = Object.keys(svgData).filter(function (key) {\n    return svgData[key];\n  }).map(function (svgProp) {\n    var data = svgData[svgProp];\n\n    if (svgProp === 'circles') {\n      return data.map(function (circle, index) {\n        var circleProps = {\n          cx: circle.cx,\n          cy: circle.cy,\n          r: circle.r,\n          key: \"circle\".concat(index)\n        };\n        return /*#__PURE__*/React.createElement(\"circle\", _extends({\n          key: index\n        }, circleProps));\n      });\n    } else if (svgProp === 'paths') {\n      return data.map(function (path, index) {\n        return /*#__PURE__*/React.createElement(\"path\", {\n          d: path.d,\n          key: \"key\".concat(index)\n        });\n      });\n    } else if (svgProp === 'polygons') {\n      return data.map(function (polygon, index) {\n        return /*#__PURE__*/React.createElement(\"polygon\", {\n          points: polygon.points,\n          key: \"key\".concat(index)\n        });\n      });\n    }\n\n    return '';\n  });\n  return svgElements;\n}\nexport function isPrefixed(name) {\n  if (process.env.NODE_ENV !== \"production\") {\n    !(typeof name === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[Icon] icon name is missing. You likely forgot to specify the icon, ' + 'or are using older (pre-`7.x`) version of `carbon-icons` library. ' + 'To specify the icon, use either `icon` (data) or `name` (icon name) properties.') : invariant(false) : void 0;\n  }\n\n  return name && name.split('--')[0] === 'icon';\n}\n\nvar Icon = function Icon(_ref) {\n  var className = _ref.className,\n      iconTitle = _ref.iconTitle,\n      description = _ref.description,\n      fill = _ref.fill,\n      fillRule = _ref.fillRule,\n      height = _ref.height,\n      name = _ref.name,\n      icon = _ref.icon,\n      role = _ref.role,\n      style = _ref.style,\n      width = _ref.width,\n      iconRef = _ref.iconRef,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var props = _objectSpread({\n    className: className,\n    fill: fill,\n    fillRule: fillRule,\n    height: height || icon.height,\n    name: isPrefixed ? name : \"icon--\".concat(name),\n    role: role,\n    style: style,\n    viewBox: icon.viewBox,\n    width: width || icon.width,\n    ref: iconRef\n  }, other);\n\n  var svgContent = icon ? svgShapes(icon.svgData) : '';\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, props, {\n    \"aria-label\": description\n  }), /*#__PURE__*/React.createElement(\"title\", null, typeof iconTitle === 'undefined' ? description : iconTitle), svgContent);\n};\n\nIcon.propTypes = {\n  /**\n   * The CSS class name.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon description.\n   */\n  description: PropTypes.string.isRequired,\n\n  /**\n   * The `<svg>` `fill` attribute.\n   */\n  fill: PropTypes.string,\n\n  /**\n   * The `<svg>` `fillRule` attribute.\n   */\n  fillRule: PropTypes.string,\n\n  /**\n   * The `<svg>` `height` attribute.\n   */\n  height: PropTypes.string,\n\n  /**\n   * The icon data.\n   */\n  icon: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    viewBox: PropTypes.string.isRequired,\n    svgData: PropTypes.object.isRequired\n  }),\n\n  /**\n   * The `ref` callback for the icon.\n   */\n  iconRef: PropTypes.func,\n\n  /**\n   * The icon title.\n   */\n  iconTitle: PropTypes.string,\n\n  /**\n   * The name of the icon.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The `role` attribute.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The CSS styles.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The `<svg>` `viewbox` attribute.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * The `<svg>` `width` attribute.\n   */\n  width: PropTypes.string\n};\nIcon.defaultProps = {\n  fillRule: 'evenodd',\n  role: 'img'\n};\nexport { icons };\nexport default Icon;"],"names":["ServerssslcertificateDeleteModal","lazy","ServerssslcertificateAdd","ServerssslcertificateEdit","handleChange","handleSave","loadGrid","idPrefix","objectName","tbName","parentIdPrefix","doClose","undefined","json","document","getElementById","value","endsWith","checked","toString","resource_servers_servers_ssl_certificaterowData","resource_servers_servers_ssl_certificate","handleClose","handleAdd","rowId","dataLoad","loadGrids","data","setData","oName","window","i","length","pName","slice","style","display","updateStyle","closeAdd","resource_servers_servers_ssl_certificateheaderData","header","key","resource_servers_servers_ssl_certificatehandleAdd","clearFields","eval","getEditData","yamlText","iagyaml","safeLoad","port","host","ssl","certificate","newItem","push","i2","id","resource_servers","ServersEdit","props","row","name","toolbarName","setresource_servers_servers_ssl_certificate","React","fetchedresource_servers_servers_ssl_certificate","setFetchedresource_servers_servers_ssl_certificate","resource_servers_servers_ssl_certificateloadGrid","async","resource_servers_servers_ssl_certificate_certificate","add","attrs","tempId","resource_servers_servers_ssl_certificateediting","resource_servers_servers_ssl_certificaterowId","newId","e","console","log","resource_servers_servers_host","setresource_servers_servers_host","useState","updateresource_servers_servers_host","useCallback","evt","target","resource_servers_servers_port","setresource_servers_servers_port","updateresource_servers_servers_port","resource_servers_servers_priority","setresource_servers_servers_priority","updateresource_servers_servers_priority","setresource_servers_servers_ssl_certificate_certificate","updateresource_servers_servers_ssl_certificate_certificate","resource_servers_servers_ssl_certificate_certificate_valid","setresource_servers_servers_ssl_certificate_certificate_valid","resource_servers_servers_ssl_certificate_certificate_invalid_text","setresource_servers_servers_ssl_certificate_certificate_invalid_text","resource_servers_servers_ssl_server_dn","setresource_servers_servers_ssl_server_dn","updateresource_servers_servers_ssl_server_dn","resource_servers_servers_url_style_case_insensitive","setresource_servers_servers_url_style_case_insensitive","updateresource_servers_servers_url_style_case_insensitive","resource_servers_servers_url_style_windows","setresource_servers_servers_url_style_windows","updateresource_servers_servers_url_style_windows","resource_servers_servers_uuid","setresource_servers_servers_uuid","updateresource_servers_servers_uuid","resource_servers_servers_virtual_host","setresource_servers_servers_virtual_host","updateresource_servers_servers_virtual_host","fetcheddata","setFetcheddata","setDataMain","functionName","editing","_jsx","Icon","_objectSpread","editProps","editIcon","onClick","title","children","_jsxs","className","Tabs","defaultTab","vertical","overflow","TabList","Tab","tabFor","TabPanel","width","tabId","height","marginLeft","marginBottom","Checkbox","labelText","onChange","ReactTooltip","clickable","place","effect","maxWidth","Button","disabled","resource_servers_servers_port_valid","resource_servers_servers_host_valid","TextInput","NumberInput","min","max","label","tabIndex","DataTable","isSortable","headers","rows","render","_ref","getHeaderProps","getRowProps","getTableProps","getToolbarProps","onInputChange","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Table","size","TableHead","TableRow","map","TableHeader","TableBody","cells","cell","TableCell","Suspense","fallback","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","isPrefixed","split","svgData","iconTitle","description","fill","fillRule","icon","role","iconRef","other","_objectWithoutProperties","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","concat","viewBox","ref","svgContent","svgProp","circle","index","circleProps","cx","cy","r","_extends","path","d","polygon","points","propTypes","PropTypes","isRequired","defaultProps"],"sourceRoot":""}