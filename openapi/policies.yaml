# (c) Copyright International Business Machines Corp. 2020
# The source code for this program is not published or otherwise divested
# of its trade secrets, irrespective of what has been deposited with the
# U.S. Copyright Office.

policies:
  description: >
    The 'policies' node defines the configuration of path based policies for
    the IBM Application Gateway.
  type: object
  properties:

    http_transformations:
      description: >
        The gateway can transform inbound requests from clients before
        forwarding them to the application or outgoing responses from the
        application before returning them to the client. Refer to the
        documentation for information about how to author HTTP transformation
        rules XSL documents.
      type: object
      properties:

        request:
          description: >
            This node defines the transformations which will take place on
            requests. This entry is an array and can be used to specify multiple
            transformations.
            Example: policies:
                         http_transformations:
                             request:
                                 - name: resource_1_rule
                                   host: www.test.com
                                   paths: 
                                     - *
                                   method: GET
                                   rule: "@http_trans_rule.xsl"
          type: array
          items:
            type: object
            properties:

              name:
                description: >
                  The name which is associated with this transformation.
                type: string
              host:
                description: >
                  The host (obtained from the host header in the request) for
                  which this transformation will take place. If no host header
                  is specified all hosts will be matched.
                type: string
              paths:
                description: >
                  The paths for which this transformation will take place. If the wildcard
                  "*" is specified all paths will be matched. This entry is an array and can 
                  be used to specify multiple paths.
                type: array
                items:
                  type: string
              method:
                description: >
                  The HTTP method for which this transformation will take
                  place. If the wildcard "*" is specified all methods will be matched.
                type: string
              rule:
                description: >
                  The HTTP transformation rule.
                type: string

        response:
          description: >
            This node defines the transformations which will take place on
            responses. This entry is an array and can be used to specify multiple
            transformations.
            Example: policies:
                         http_transformations:
                             response:
                                 - name: resource_1_rule
                                   host: www.test.com
                                   paths: 
                                     - "/resource_1"
                                     - "/alt/resource_1"
                                   method: GET
                                   rule: "@http_trans_rule.xsl"
                                   attributes:
                                     - AZN_CRED_PRINCIPAL_NAME
          type: array
          items:
            type: object
            properties:

              name:
                description: >
                  The name which is associated with this transformation.
                type: string
              host:
                description: >
                  The host (obtained from the host header in the request) for
                  which this transformation will take place. If no host header
                  is specified all hosts will be matched.
                type: string
              paths:
                description: >
                  The paths for which this transformation will take place. If the wildcard
                  "*" is specified all paths will be matched.  This entry is an array and can 
                  be used to specify multiple paths.
                type: array
                items:
                  type: string
              method:
                description: >
                  The HTTP method for which this transformation will take
                  place. If the wildcard "*" is specified all methods will be matched.
                type: string
              rule:
                description: >
                  The HTTP transformation rule.
                type: string
              attributes:
                description: >
                  The credential attributes which will be included in the XML
                  input document, used when evaluating the HTTP transformation
                  rule.  The attributes will be stored in the 
                  HTTPResponse/credential/attributes/attribute path of the 
                  XML document.
                type: array
                items:
                  type: string

    cors:
      description: |
        The reverse proxy can support cross-origin resource sharing with
        CORS aware clients. 

        Each defined policy must at a minimum contain:
          * name
          * method
          * policy:allow_origins 
        
        This entry is an array and can be used to specify multiple CORS policies.
        Example: policies:
                     cors:
                         - name: cors_policy_A
                           host: www.test.com
                           paths: 
                             - "/test"
                             - "/development"
                           method: GET
                           policy: 
                               allow_origins: 
                                   - www.test.com
                                   - www.example.com
                               handle_pre_flight: true
                               allow_headers: 
                                   - test_header
                                   - test_header2
                               max_age: 600
                               allow_methods: 
                                   - update
                                   - create
                               allow_credentials: true
                               expose_headers: 
                                   - test_header
                                   - test_header2

      type: array
      items:
        type: object
        properties:

          name:
            description: >
              The name which is associated with this CORS policy.
            type: string

          host:
            description: >
              The host (obtained from the host header in the request) for
              which this CORS policy will be applied. If no host header
              is specified all hosts will be matched.
            type: string

          paths:
            description: >
              The paths for which this CORS policy will be applied. This entry 
              is an array and can be used to specify multiple paths.
            type: array
            items:
              type: string

          method:
            description: >
              The HTTP method for which this CORS policy will be applied.
            type: string

          policy:
            description: >
              The definition of the CORS policy.
            type: object
            properties:

              allow_origins:
                description: >
                  A list of origins which are permitted to make cross-origin
                  requests. To allow cross-origin requests from any origin,
                  add a single entry '*'.
                type: array
                items:
                  type: string

              handle_pre_flight:
                description: >
                  The reverse proxy can respond to pre-flight requests using
                  the information from this policy. If set to false,
                  pre-flight requests will be forwarded to the protected
                  application.
                type: boolean

              allow_headers:
                description: >
                  Headers that are indicated as allowed in responses to
                  pre-flight requests. Specifying no allow_header entries will
                  indicate to clients that all headers are permitted.
                  Not case-sensitive.
                  Only valid if handle_pre_flight is set to true.
                type: array
                items:
                  type: string

              max_age:
                description: >
                  Maximum time (in seconds) a client should cache the
                  results of a pre-flight request.
                  A value of -1 indicates to clients that they should not cache,
                  0 indicates that clients may cache at their own discretion.
                  Only valid if handle_pre_flight is set to true.
                type: number
                minimum: -1
                maximum: unlimited

              allow_methods:
                description: >
                   Methods that are indicated as allowed in responses to
                   pre-flight requests.
                   Specifying no allow_method entries will indicate to
                   clients that all methods are permitted.
                   Case-sensitive.
                   Only valid if handle_pre_flight is set to true.
                type: array
                items:
                  type: string

              allow_credentials:
                description: >
                  Indicates to clients that authentication is required when
                  accessing this resource.
                type: boolean

              expose_headers:
                description: >
                  Indicates to clients which headers they expose from the
                  response.
                type: array
                items:
                  type: string

    rate_limiting:
      description: |
        The gateway can apply rate limiting to incoming requests. This entry defines
        the rate limiting policies and where they will be applied. Refer to the documentation
        for information about how to author a rate-limiting policy.

        This entry is an array and can be used to define multiple policies.
        Example: policies:
                     rate_limiting:
                         - name: rate_policy_A
                           methods: 
                               - GET
                               - POST
                           paths: 
                               - "/test*"
                               - "/release*"
                           rule: |
                               ip: true
                               capacity: 3
                               interval: 60
                               reaction: TEMPLATE
      type: array
      items:
        type: object
        properties:

          name:
            description: >
              The name to be associated with this rate limiting rule.
            type: string

          methods:
            description: >
              The methods to which this rate limiting rule will be
              applied. If the wildcard "*" is specified all methods will be matched.
            type: array
            items:
              type: string

          paths:
            description: >
              The paths to which this rate limiting rule will be applied. The path
              supports wildcards. This entry is an array and can be used to specify
              multiple paths. Note that the policy will be duplicated and applied
              for each specified path, multiple paths do not share a common
              request bucket. To share a common request bucket for multiple paths,
              provide a single path pattern which matches all required paths.
            type: array
            items:
              type: string

          rule:
            description: >
              The rate limiting rule.
            type: string

    content_injection:
      description: |
        The gateway can inject content into responses. This entry defines the content
        and when injection should take place. Content injection is performed based on the request path
        and a specific location within the response. 

        This entry is an array and can define multiple content injection points.
        Example: policies:
                     content_injection:
                         - name: content_injection_1
                           paths: 
                             - "/test"
                             - "/test2"
                           location: "<h3>*"
                           content: |
                               <hr/>
                               <h4>Add heading4 after heading3</h4>
                               <hr/>
      type: array
      items:
        type: object
        properties:

          name:
            description: >
              A name to be associated with this content injection rule.
            type: string

          paths:
            description: >
              The path for which content injection will take place. This entry 
              is an array and can be used to specify multiple paths.
            type: array
            items:
              type: string

          full_line_match:
            description: >
              Should the location match a full line, or should it match 
              any string in the response?  When a full line match is configured
              the content will be inserted prior to the matching line.  When a
              partial line match is configured the content will be inserted 
              immediately prior to the matching string.
            type: boolean
            default: true

          location:
            description: >
              The location where the content should be injected. If a full
              line match is being used the location is pattern matched against 
              a line in the response using the '*.' wildcard characters.  The 
              maximum length of a line which can be matched is 8192 bytes.
            type: string

          replace_match:
            description: >
              If a partial line match is being used this configuration entry
              will control whether the matching string is replaced with
              the supplied content, or whether the supplied content is
              inserted prior to the matching string.  This configuration
              entry will be ignored if full line matches are being used.
            type: boolean
            default: false

          content:
            description: >
              The data which is to be injected.
            type: string

    authorization:
      description: >
        The gateway can apply authorization rules to incoming requests.
        This entry defines a list of matching requests, rules and actions
        to perform if matches are found.
        The rules can be either:
          * Defined directly here in an entry.
          * Defined in the authorization section and reference by name here in an entry.

        This entry defines authorization rules directly.
        There are also two pre-defined rules which can be used:
          * "anyuser" : Which allows access to any user, even if they are not authenticated.
          * "anyauth" : Which allows access to any authenticated user.

        Example: policies:
                     authorization:
                         - name: policyA
                           host: www.test.com
                           paths: 
                             - /test*
                           methods: 
                               - GET
                               - POST
                           rule: (any groupIds = "administrator")
                           action:permit
                         - name: policyB
                           host: www.example.com
                           paths: 
                             - /example*
                           methods:
                               - DELETE
                           rule: anyuser
                           action: deny
                           obligation:
                             oidc:
                               acr_values: "administrator mfa"
                               prompt: login

      type: array
      items:
        type: object
        properties:

          name:
            description: >
              A name for this policy, which is used to refer to this
              policy in audit events.
            type: string

          host:
            description: >
              The host (obtained from the host header in the request) for
              which this policy will be applied. If no host header
              is specified all hosts will be matched.
            type: string

          paths:
            description: >
              The paths which this policy will be applied. Each path
              may contain the '*?' pattern matching characters. This entry 
              is an array and can be used to specify multiple paths.
            type: array
            items:
              type: string

          methods:
            description: >
              The method(s) which this policy applies to. If this is not
              defined, the policy will apply to all methods.
            type: array
            items:
              type: string

          rule:
            description: >
              If a rule string is not defined here, the gateway
              will look for a named rule (with the same name as this
              policy) in the authorization section of the configuration
              YAML. Refer to the authorization section of this template
              for an explanation of rule syntax. The predefined rules anyuser
              or anyauth can also be referenced here.
            type: string

          action:
            description: >
              Defines the action to perform if the rule matches. If the action
              is obligate, the obligation property must also be set for this
              authorization rule.
            type: string
            enum:
              - permit
              - deny
              - obligate

          obligation:
            description: >
              If the action for this rule is obligate, this obligation must
              be defined to indicate that authentication should take place 
              again with specific parameters.
            type: object
            properties:

              oidc:
                description: >
                  Authentication parameters which can be used when using an
                  OIDC identity scenario. These parameters are passed as query
                  string parameters when the authorization endpoint is 
                  requested.

                  Example:  policies:
                              authorization:
                              - name: mfa_required
                                rule: 'acr = "urn:ibm:security:policy:id:2"'
                                paths: 
                                  - "/sensitive"
                                action: "permit"

                              - name: mfa_required_obligate
                                rule: 'acr != "urn:ibm:security:policy:id:2"'
                                paths: 
                                  - "/sensitive"
                                action: "obligate"
                                obligation:
                                  oidc:
                                    acr_values: "urn:ibm:security:policy:id:2"
                                    prompt: "login"
                type: object
                properties:

                  acr_values:
                    description: >
                      A string of ACR (Authentication Context Class References)
                      to pass to the identity provider. Refer to "acr_values" 
                      in section 3.1.2 of the OpenID Connect Core specification
                      for further information. 

                      Valid ACRs are defined by the identity provider. Refer
                      to your identity provider for further information about
                      the ACRs which it supports.
                    type: string

                  prompt:
                    description: >
                      A string of prompt options to pass to the identity 
                      provider. Refer to "prompt" in section 3.1.2 of the 
                      OpenID Connect Core specification for further 
                      information. 

                      Prompt options are optional and may not be supported by 
                      all identity providers. Refer to your identity provider
                      for further information about support prompt values.
                    type: string

