# Copyright contributors to the Application Gateway project

services:
  description: >
    The `services` node defines services within the Application Gateway configuration.
  type: object
  properties:
    credential:
      description: >
        This configuration is used to describe an external credential service
        which IAG can use to retrieve credentials for use in single sign-on to
        protected applications.

        Each credential service must contain:
          * name
          * enc_key
          * host
          * url_pattern
          * user_attribute

        This entry is an array and can be used to specify multiple credential
        services.


        Example:

        services:
          credential:
            - name: myCredService
              enc_key: "@vault-rsa.pem"
              host: ibm_app_gw.ice.ibmcloud.com
              proxy: "proxy.ibm.com:3128"
              url_pattern: "/v1.0/pwdvault/{user}/resources/{resource}"
              ssl:
                certificate:
                  - "@vault-ibm-com.crt"
                server_dn: cn=vault
                sni: vault.verify.ibm.com
              user_attribute: "AZN_PRINCIPAL_ID"
              user_attribute_encoding: url
              authentication:
                sso:
                  client_id: 36bxxxx-xxxx-xxxx-xxxx-xxxxxxxxxae5
                  client_secret: ctZxxxxqQs
                  endpoint: https://ibm_app_gw.ice.ibmcloud.com/v1.0/endpoint/default/token
                  payload: form
      type: array
      items:
        type: object
        properties:
          name:
            description: >
              The name which is associated with this credential service.
            type: string
            x-uuid: true
            x-required: true
          host:
            description: >
              The hostname of the endpoint where the credentials will be
              retrieved from.
            type: string
          port:
            description: >
              The port of the endpoint where the credentials will be retrieved
              from.
            type: string
          proxy:
            description: >
              The proxy server which will be used when connecting to the
              credential service. The configuration entry should be of the
              form: `<server>:<port>`
            type: string
          url_pattern:
            description: >
              The path of the endpoint where the credentials will be retrieved
              from. This must contain the {user} and {resource} macros.
              When communicating with the credential service, IAG will
              substitute `{resource}` for the resource name provided in the
              configuration which refers to this credential service.
            type: string
            x-name: URL Pattern
          user_attribute:
            description: >
              The name of the credential attribute which is used to populate
              the {user} macro in the URL used when communicating with the
              credential service.
            type: string
            default: AZN_PRINCIPAL_ID
          user_attribute_encoding:
            description: >
              The type of encoding to perform on the user_attribute for
              inclusion in the URL to communicate with the credential service.
                - If this value is `url`, the user attribute value will be URL Encoded.
                - If this value is `base64url`, the user attribute value will be converted to lower case and Base64 Encoded for URL.
            type: string
            default: url
            enum:
              - url
              - base64url
          enc_key:
            description: >
              The key which will be used to encrypt and decrypt credential
              data. This key should be an RSA or ECDSA key for which the
              private and public parts are available.
            type: string
            x-name: Encryption Key
          ssl:
            description: >
              SSL settings for the credential service connection.
            type: object
            x-name: SSL
            properties:
              certificate:
                description: >
                  PEM based personal certificate files which will be used when
                  communicating with the resource server.  These certificate
                  files should include the private key, a certificate signed
                  with the private key, and the signer certificate or signer
                  certificate chain (if required).
                type: array
                items:
                  type: string
                  x-uuid: true
                  x-required: true
              server_dn:
                description: >
                  Specifies the accepted DN of the certificate presented by the
                  credential service. If this entry is empty, any DN will be
                  accepted.
                type: string
                x-name: Server DN
              sni:
                description: >
                  The server name (SNI) which will be indicated when
                  establishing a connection to the credential service. If this
                  entry is empty, no name will be indicated.
                type: string
                x-name: SNI
          authentication:
            description: >
              Controls how IAG will authenticate itself when communicating with
              the credential service. Only one of the following may be used at
              any time.
            type: object
            properties:
              sso:
                description: >
                  Uses the OAuth client credential flow to retrieve an access
                  token to use when communicating with to the credential
                  service.
                type: object
                x-name: SSO
                properties:
                  endpoint:
                    description: >
                      The endpoint which will be called to obtain an access
                      token which is used in requests to the credential service.

                      The endpoint should conform to the OAuth client
                      credential flow (OAuth 2.0 RFC 6749, section 4.4).
                    type: string
                  client_id:
                    description: >
                      The client identifier to use during the OAuth client
                      credential flow.
                    type: string
                    x-name: Client ID
                  client_secret:
                    description: >
                      The client identifier to use during the OAuth client
                      credential flow.
                    type: string
                  payload:
                    description: >
                      Specifies how the client id and secret will be posted
                      to the authentication endpoint.
                        - If this value is `form`, the client id and secret will be included in forms POST data.
                        - If this value is `basic`, a basic authentication header will be constructed using the client id and secret.
                    type: string
                    default: basic
                    enum:
                      - basic
                      - form
              access_token:
                description: >
                  Uses an access token presented in the authorization header
                  as a bearer token when communicating with the credential
                  service.
                type: object
                properties:
                  token:
                    description: >
                      The literal access token that will be passed as a bearer
                      token.

                      Alternatively, if surrounded by {}, this field can name
                      a credential attribute for which the value of will be
                      used as a bearer token.
                    type: string
              ba:
                description: >
                  Uses basic authentication when communicating with the
                  credential service.
                type: object
                x-name: Basic Authentication
                properties:
                  username:
                    description: >
                      The username to be used to perform basic authentication
                      to the credential service.
                    type: string
                  password:
                    description: >
                      The password to be used to perform basic authentication
                      to the credential service.
                    type: string
    kerberos:
      description: >
        This configuration is used to describe a Kerberos configuration file
        which IAG can use to perform Kerberos Constrained Delegation as a means of
        authentication to a protected application.

        The Kerberos service must contain:
          * keytab
          * keytab_spn
          * realms
          * libdefaults

        `keytab_spn` and `keytab` must correspond to the service principal name
        and generated key table for a user which IAG will authenticate itself
        as. This user must have permission to perform delegated authentication.

        This entry is an object and can be used to specify a single kerberos
        service.


        Example:

        services:
          kerberos:
            keytab: "@ibm-app-gateway.keytab"
            keytab_spn: HTTP/ibm-app-gateway@IBM.COM
            realms:
              - name: IBM.COM
                kdc: ibm.com
            libdefaults:
              properties:
                - name: default_tgs_enctypes
                  value: "rc4-hmac des-cbc-md5 des-cbc-crc aes256-cts"
                - name: default_tkt_enctypes
                  value: "rc4-hmac des-cbc-md5 des-cbc-crc aes256-cts"
      type: object
      properties:
        keytab:
          description: >
            The Kerberos key table file which IAG will use to authenticate with the server.
          type: string
        keytab_spn:
          description: >
            The service principal name of the impersonating user when creating a Kerberos token.
            The service principal name can be determined by executing the Microsoft utility
            `setspn` (that is, setspn -L user, where user is the identity of the IAG
            account).
          type: string
          x-name: Keytab SPN
        realms:
          description: >
            Realm-specific contact information and settings associated with the Microsoft Windows Server to use
            for performing Kerberos impersonation.
          type: array
          items:
            type: object
            properties:
              name:
                description: >
                  The name of the Kerberos Realm being configured.
                type: string
                x-uuid: true
                x-required: true
              kdc:
                description: >
                  The name or address of a host running a KDC for that realm. An optional port number, separated
                  from the hostname by a colon, may be included.
                type: string
                x-name: KDC
              properties:
                description: >
                  Advanced additional properties to be added to the Realm configuration.
                  These properties correspond to the properties in the [realms] &lt;realm name&gt; section of krb5.conf.
                type: array
                items:
                  type: object
                  properties:
                    name:
                      description: >
                        Name of the entry to be written into the realms section of the Kerberos configuration.
                      type: string
                      x-uuid: true
                      x-required: true
                    value:
                      description: >
                        Value of the entry to be written into the realms section of the Kerberos configuration.
                      type: string
              hostname:
                description: >
                  The hostname for this realm.
                type: string
        libdefaults:
          description: >
            Advanced additional properties to be added to the Kerberos library configuration.
            These properties correspond to the properties in the [libdefaults] section of krb5.conf.
          type: object
          x-name: libdefaults
          properties:
            properties:
              description: >
                The properties to be added to the Kerberos libdefaults configuration. Each entry consists of a name
                and a value.
              type: array
              items:
                type: object
                properties:
                  name:
                    description: >
                      Name of the entry to be written into the libdefaults section of the Kerberos configuration.
                    type: string
                    x-uuid: true
                    x-required: true
                  value:
                    description: >
                      Value of the entry to be written into the libdefaults section of the Kerberos configuration.
                    type: string

        capaths:
          description: >
            Authentication paths for non-hierarchical cross-realm.
          type: array
          x-name: capaths
          items:
            type: object
            properties:
              client_realm:
                description: >
                  The client realm for this authentication path.
                type: string
                x-uuid: true
                x-required: true
              realms:
                description: >
                  The realms associated with this capath.
                type: array
                items:
                  type: object
                  properties:
                    server_realm:
                      description: >
                        The server realm for this capath.
                      type: string
                      x-uuid: true
                      x-required: true
                    inter_realm:
                      description: >
                        The inter realm for this capath.
                      type: string

    redis:
      description: >
        Used to define the global configuration and server collections for 
        Redis.


        Example:

        services:
          redis:
            default_collection: redis-a
            key_prefix: iag-test-
            collections:
              - connect_timeout: 20
                cross_domain_support:
                  master_authn_server_url: https://mas.ibm.com
                  master_session_code_lifetime: 150
                health_check_interval: 200
                idle_timeout: 100
                io_timeout: 300
                matching_host: www.webseal.ibm.com
                max_pooled_connections: 200
                name: test-collection-session
                servers:
                - host: redis-a.ibm.com
                  name: redis-a
                  password: passw0rd
                  username: testuser
                  port: 6380
                  ssl:
                    client_certificate: "@redis-a-client.pem"
                    sni: redis-a.ibm.com
                    trust_certificates: "@redis-a-ca.pem"
              - connect_timeout: 10
                health_check_interval: 200
                idle_timeout: 100
                io_timeout: 300
                max_pooled_connections: 200
                name: test-collection-ratelimiting
                servers:
                - host: redis-b.ibm.com
                  name: redis-b
                  password: passw0rd
                  username: user
                  port: 6380
                  ssl:
                    trust_certificates: "@redis-b-ca.pem"

      type: object
      properties:
        key_prefix:
          description: >
            The key prefix for all data which is stored on the Redis server.
          type: string
        default_collection:
          description: >
            The name of the default collection of Redis servers to be used.
          type: string
        collections:
          description: >
            Used to define the configuration for a collection of replicated
            Redis servers.
          type: array
          items:
            type: object
            properties:

              name:
                description: >
                  The name of the redis collection.
                type: string
                x-uuid: true
                x-required: true
              matching_host:
                description: >
                  Any specific hosts (obtained from the Host header of the
                  HTTP request) for which this collection should be used.

                  This entry is only applicable to Redis collections being used 
                  for storing session data.
                type: string
              max_pooled_connections:
                description: >
                  The maximum number of pooled connections to a Redis
                  server.
                type: number
                minimum: 0
                maximum: unlimited
                default: 50
              idle_timeout:
                description: >
                  The maximum number of seconds a pooled connection can
                  remain idle before the connection is closed.
                type: number
                minimum: 0
                maximum: unlimited
                default: 10
              connect_timeout:
                description: >
                  The maximum number of seconds to wait for a connection
                  to be established with a Redis server.
                type: number
                minimum: 0
                maximum: unlimited
                default: 2
              io_timeout:
                description: >
                  The maximum number of seconds to wait for a valid
                  response from a Redis server.
                type: number
                minimum: 0
                maximum: unlimited
                default: 30
                x-name: IO Timeout
              health_check_interval:
                description: >
                  The interval (in seconds) between health check requests
                  sent to the Redis server.
                type: number
                minimum: 1
                maximum: unlimited
                default: 10
              cross_domain_support:
                description: >
                  Specifies the configuration information associated with
                  the sharing of sessions across multiple DNS domains.

                  These entries are only applicable to Redis collections being used 
                  for storing session data.
                type: object
                properties:

                  master_authn_server_url:
                    description: >
                      The base URL of the master authentication server for
                      this collection of Redis servers.  The master
                      authentication server, if specified, will be
                      responsible for the generation of all new sessions
                      for this collection.  The entry
                      should be of the format: `http{s}://server{:port}`.
                    type: string
                    x-name: Master Authentication Server URL
                  master_session_code_lifetime:
                    description: >
                      The maximum number of seconds that a session code,
                      used when communicating the session information from
                      the master authentication server, will remain valid.
                    type: number
                    minimum: 1
                    maximum: unlimited
                    default: 30

              servers:
                description: >
                  Used to define the configuration for the individual
                  Redis servers within the collection.
                type: array
                items:
                  type: object
                  properties:

                    name:
                      description: >
                        A label, or name, which is used to identify this
                        server.
                      type: string
                      x-uuid: true
                      x-required: true
                    host:
                      description: >
                        The server name or IP address of the Redis server.
                      type: string
                    port:
                      description: >
                        The port on which the Redis server is listening
                        for requests.
                      type: number
                      minimum: 1
                      maximum: unlimited
                      default: 6379
                    username:
                      description: >
                        The name of the user which is used when
                        authenticating to the Redis server.
                      type: string
                    password:
                      description: >
                        The password which is used to access the Redis
                        server.
                      type: string
                    ssl:
                      description: >
                        The SSL information associated with the Redis
                        server.
                      type: object
                      x-name: SSL
                      properties:

                        trust_certificates:
                          description: >
                            The PEM based certificates which are to be
                            trusted when communicating with the Redis
                            server.  The trusted certificates should
                            include the CA certificate for the Redis server
                            certificate, as well as any intermediate
                            certificates used to sign the client
                            certificate (if mutual authentication is in
                            use).  SSL/TLS will not be used when
                            communicating with the Redis server if no
                            trust certificates are specified.

                          type: array
                          items:
                            type: string
                            x-uuid: true
                            x-required: true
                            x-name: Trust Certificate

                        client_certificate:
                          description: >
                            The PEM based personal certificate files which
                            will be used when performing mutual
                            authentication with the resource server.  These
                            certificate files should include the private
                            key, a certificate signed with the private key,
                            and the signer certificate or signer
                            certificate chain (if required).

                          type: array
                          items:
                            type: string
                            x-uuid: true
                            x-required: true

                        sni:
                          description: >
                            The Server Name Indication (SNI) value which
                            is provided when establishing the SSL connection
                            with the Redis server.
                          type: string
                          x-name: SNI