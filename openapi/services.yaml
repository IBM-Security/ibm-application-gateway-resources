# (c) Copyright International Business Machines Corp. 2020
# The source code for this program is not published or otherwise divested
# of its trade secrets, irrespective of what has been deposited with the
# U.S. Copyright Office.

services:
  description: >
    The 'services' node defines services within WebSEAL configuration.
  type: object
  properties:
    credential:
      description: |
        This configuration is used to describe an external credential service 
        which IAG can use to retrieve credentials for use in single sign-on to 
        protected applications.

        Each credential service must contain:
          * name
          * enc_key
          * host
          * url_pattern
          * user_attribute 
        
        This entry is an array and can be used to specify multiple credential 
        services.

        Example: services:
                   credential:
                     - name: myCredService
                       enc_key: "@vault-rsa.pem"
                       host: ibm_app_gw.ice.ibmcloud.com
                       proxy: "proxy.ibm.com:3128"
                       url_pattern: "/v1.0/pwdvault/{user}/resources/{resource}"
                       ssl:
                         certificate: 
                           - "@vault-ibm-com.crt"
                         server_dn: cn=vault
                         sni: vault.verify.ibm.com
                       user_attribute: "AZN_PRINCIPAL_ID"
                       authentication:
                         sso:
                           client_id: 36bxxxx-xxxx-xxxx-xxxx-xxxxxxxxxae5
                           client_secret: ctZxxxxqQs
                           endpoint: https://ibm_app_gw.ice.ibmcloud.com/v1.0/endpoint/default/token
                           payload: form
      type: array
      items:
        type: object
        properties:
          name:
            description: >
              The name which is associated with this credential service.
            type: string
          host:
            description: >
              The hostname of the endpoint where the credentials will be 
              retrieved from.
            type: string
          port:
            description: >
              The port of the endpoint where the credentials will be retrieved 
              from.
            type: string
          proxy:
            description: >
              The proxy server which will be used when connecting to the 
              credential service. The configuration entry should be of the 
              form: '&lt;server&gt;:&lt;port&gt;'
            type: string
          url_pattern:
            description: >
              The path of the endpoint where the credentials will be retrieved 
              from. This must contain the {user} and {resource} macros.

              When communicating with the credential service, IAG will 
              substitute '{resource}' for the resource name provided in the
              configuration which refers to this credential service.
            type: string
          user_attribute:
            description: >
              The name of the credential attribute which is used to populate 
              the {user} macro in the URL used when communicating with the
              credential service.
            type: string
            default: AZN_PRINCIPAL_ID
          enc_key:
            description: >
              The key which will be used to encrypt and decrypt credential
              data. This key should be an RSA or ECDSA key for which the 
              private and public parts are available.
            type: string
          ssl:
            description: >
              SSL settings for the credential service connection.
            type: object
            properties:
              certificate:
                description: >
                  PEM based personal certificate files which will be used when
                  communicating with the resource server.  These certificate 
                  files should include the private key, a certificate signed 
                  with the private key, and the signer certificate or signer 
                  certificate chain (if required).
                type: array
                items:
                  type: string
              server_dn:
                description: >
                  Specifies the accepted DN of the certificate presented by the 
                  credential service. If this entry is empty, any DN will be 
                  accepted.
                type: string
              sni:
                description: >
                  The server name (SNI) which will be indicated when 
                  establishing a connection to the credential service. If this 
                  entry is empty, no name will be indicated.
                type: string
          authentication:
            description: >
              Controls how IAG will authenticate itself when communicating with
              the credential service. Only one of the following may be used at
              any time.
            type: object
            properties:
              ba:
                description: >
                  Uses basic authentication when communicating with the 
                  credential service.
                type: object
                properties:
                  username:
                    description: >
                      The username to be used to perform basic authentication 
                      to the credential service.
                    type: string
                  password:
                    description: >
                      The password to be used to perform basic authentication 
                      to the credential service.
                    type: string
              access_token:
                description: >
                  Uses an access token presented in the authorization header
                  as a bearer token when communicating with the credential
                  service.
                type: object
                properties:
                  token:
                    description: >
                      The literal access token that will be passed as a bearer 
                      token.

                      Alternatively, if surrounded by {}, this field can name
                      a credential attribute for which the value of will be
                      used as a bearer token.
                    type: string
              sso:
                description: >
                  Uses the OAuth client credential flow to retrieve an access
                  token to use when communicating with to the credential 
                  service.
                type: object
                properties:
                  endpoint:
                    description: >
                      The endpoint which will be called to obtain an access 
                      token which is used in requests to the credential service. 

                      The endpoint should conform to the OAuth client 
                      credential flow (OAuth 2.0 RFC 6749, section 4.4).
                    type: string
                  client_id:
                    description: >
                      The client identifier to use during the OAuth client 
                      credential flow.
                    type: string
                  client_secret:
                    description: >
                      The client identifier to use during the OAuth client 
                      credential flow.
                    type: string
                  payload:
                    description: >
                      Specifies how the client id and secret will be posted 
                      to the authentication endpoint.
                        - If this value is 'form', the client id and secret 
                          will be included in forms POST data.
                        - If this value is 'basic', a basic authentication 
                          header will be constructed using the client id and 
                          secret.
                    type: string
                    default: basic




