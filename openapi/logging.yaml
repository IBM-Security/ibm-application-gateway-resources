# Copyright contributors to the Application Gateway project

logging:
  description: >
    The `logging` node defines the configuration entries which are
    used to manage the various logging capabilities of the IBM Application
    Gateway.
  type: object
  properties:

    json_logging:
      description: >
        A boolean which indicates whether the logging will be
        in JSON format or not. If not specified logging will not be
        in JSON format.


        Example:

        logging:
          json_logging: true
      type: boolean
      default: false
      x-name: JSON Logging

    components:
      description: >
        Specifies an array of auditing components to be enabled.


        Example:

        logging:
          components:
            - audit.authn
            - audit.azn
      type: array
      items:
        description: >
          The name of the auditing component(s).
        type: string
        enum:
          - audit.authn
          - audit.azn
        x-uuid: true
        x-required: true
        x-name: Component

    request_log:
      description: |
        Defines and enables request logging.

        ### Log Format
        The following directives can be added to the format property to customize the log format:

        Directive | Description
        --------- | -----------
        %a | Client IP Address.
        %A | Local IP Address.
        %b | Bytes in the response excluding HTTP headers in CLF format: `-` instead of 0 when no bytes are returned.
        %B | Bytes in the response excluding HTTP headers.
        %{attribute}C | Attribute from the credential named `attribute`.
        %{cookie}e | Contents of the Cookie `cookie` in the request.
        %{cookie}E | Contents of the Cookie `cookie` in the response.
        %d | Transaction identifier, or session sequence number.
        %F | Time taken to serve the request in microseconds.
        %h | Client host.
        %H | Request protocol.
        %{header}i | Contents of the Header `header` in the request.
        %j | The name of the resource server servicing the request.
        %J | The length of time, in microseconds, that the resource server server spent processing the request. This will include the time that it took to send the request to the server, the length of time that it took the server to process the request, and the length of time that it took to read and process the response header.
        %l | Client logname (RFC 1314) (default -).
        %m | Request method (i.e. GET, POST, HEAD).
        %{header}o | Contents of the Header `header` in the response.
        %M | The time, in Common Log Format, at which the request was received with millisecond precision.
        %p | Port over which the request was received.
        %q | The decoded query string (prepended with `?` or empty).
        %Q | The raw query string (prepended with `?` or empty).
        %r | First line of the request with decoded URL.
        %R | First line of the request with decoded URL including HTTP://HOSTNAME.
        %s | Response status.
        %S | The hostname of the backend server which serviced this request.
        %t | Time in Common Log Format format.
        %{format}t | The time in the given format.
        %T | Time taken to serve the request in seconds, or part thereof.
        %u | Remote user.
        %U | The URL requested.
        %v | Canonical ServerName of the server servicing the request.
        %z | The decoded path string.
        %Z | The raw path string.


        Example:

        logging:
          request_log:
            file:
              file_name: request.log
            format: "%t %a %R"
      type: object
      properties:
        file:
          description: >
            By default the request log events will be written to the console
            of the container.  By setting the `file` configuration the
            request log events can instead be written to a local file.
          type: object
          properties:
            file_name:
              description: >
                The name of the generated log file.  If the file name
                is supplied without any path information the file will be
                written to the `/var/iag/logs` directory.  If the file name
                contains path information the hosting directory must be created
                and available before the container is started.
              type: string
            max_file_size:
              description: >
                The maximum size (in MB) that the file can reach before it
                is rolled over.
              type: number
              minimum: 1
              maximum: unlimited
              default: 1
            max_rollover_files:
              description: >
                The maximum number of rollover files to be kept on disk.  When
                the number of rollover log files reaches the specified
                threshold, the oldest log file is deleted.
              type: number
              default: 1
              minimum: 1
              maximum: unlimited
            compress:
              description: >
                A boolean which indicates whether rolled over log files should
                be automatically compressed to conserve disk space.
              type: boolean
              default: true

        format:
          description: >
            The format of the events written to the request log.
            See the [Log Format](#log-format) table above for the available directives.
          type: string
          default: '"%h %u %t %r %s %b"'

    tracing:
      type: array
      description: >
        Specifies an array of trace components to be enabled.
        Tracing can be used to assist with problem determination in
        the environment.


        Example:

        logging:
          tracing:
            - file_name: http_trans.log
              component: pdweb.http.transformation
              level: 9
            - file_name: http.log
              component: pdweb.http
              level: 5
              max_file_size: 12
              max_rollover_files: 10
              compress: true
      items:
        type: object
        properties:
          component:
            description: >
              The name of the tracing component to be enabled. Refer to
              the troubleshooting documentation for the full list of component names.
            type: string
            x-uuid: true
            x-required: true
          file_name:
            description: >
              The name of the generated log file.  If the file name
              is supplied without any path information the file will be
              written to the `/var/iag/logs` directory.  If the file name
              contains path information the hosting directory must be created
              and available before the container is started.
            type: string
            x-required: true
            x-uuid: true
          level:
            description: >
              The level of detail to be gathered by the tracing component in the range 0 to 9.
              Level 1 specifies the least detailed output and level 9 specifies the most
              detailed output. Level 0 will disable tracing for the component.
            type: number
            minimum: 0
            maximum: 9
            default: 0
          max_file_size:
            description: >
              The maximum size (in MB) that the file can reach before it
              is rolled over.
            type: number
            minimum: 1
            maximum: unlimited
            default: 1
          max_rollover_files:
            description: >
              The maximum number of rollover files to be kept on disk.  When
              the number of rollover log files reaches the specified
              threshold, the oldest log file is deleted.
            type: number
            default: 1
            minimum: 1
            maximum: unlimited
          compress:
            description: >
              A boolean which indicates whether rolled over log files should
              be automatically compressed to conserve disk space.
            type: boolean
            default: true

    transaction:
      description: >
        Defines and enables transaction logging. This
        logging can be used to pinpoint performance issues in the
        environment.


        Example:

        logging:
          transaction:
            file_name: trans.log
            max_file_size: 1024
            max_files: 5
            compress: true
      type: object
      properties:
        file_name:
          description: >
            The name of the generated log file.  If the file name is supplied
            without any path information the file will be written to the
            `/var/iag/logs` directory.  If the file name contains path
            information the hosting directory must be created and available
            before the container is started.
          type: string
          x-required: true
        max_file_size:
          description: >
            The maximum size of the log file (in kilobytes) before it is rolled over.
            If not specified the file size is 262144 KB (256MB).
          type: number
          minimum: 1
          maximum: unlimited
          default: 262144
        max_files:
          description: >
            The maximum number of files to be created, including rollover files.
            If not specified the max number of files is unlimited.
          type: number
          minimum: 1
          maximum: unlimited
          default: 1
        compress:
          description: >
            A boolean which indicates whether the generated
            file should be compressed. If not specified the files will not be
            compressed.
          type: boolean
          default: false

    statistics:
      description: >
        Configures the statistic collection and publishing capability for the
        gateway.  The statistics for the configured components will be
        published to the specified statsd server over UDP.  Statistics can be
        used to monitor the environment, or assist with problem determination
        in the environment.


        Example:

        logging:
          statistics:
            server: 127.0.0.1
            port: 8125
            frequency: 20
            components:
              - iag.authn
      type: object
      properties:
        server:
          description: >
            The server on which the statsd server is listening for requests.
          type: string
          x-required: true
        port:
          description: >
            The port on which the statsd server is listening for requests.
          type: number
          default: 8125
          minimum: 0
          maximum: 65535
        frequency:
          description: >
            The frequency (in seconds) that statistics are sent from the
            memory buffer to the statsd server.
          type: number
          minimum: 1
          maximum: unlimited
          default: 1
          x-required: true
        components:
          type: array
          description: >
            Specifies an array of statistic components to be enabled.  Refer to
            the troubleshooting documentation for a full description of the
            available component names.
          items:
            type: string
            x-uuid: true
            x-required: true
            x-name: Component
          enum:
            - iag.authn
            - iag.http2
            - iag.https
            - iag.redis
            - iag.resource_server
            - iag.sescache
            - iag.threads
            - iag.websocket

