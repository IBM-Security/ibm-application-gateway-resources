apiVersion: v1
kind: Template

# Metadata associated with this template (for example, the template name)
metadata:
  name: ibm-app-gateway
  annotations:
    openshift.io/display-name: IBM Application Gateway
    iconClass: icon-sso
    description: >-
      The IBM Application Gateway (IAG) provides a containerized secure Web 
      Reverse proxy which is designed to sit in front of your application, 
      seamlessly adding authentication and authorization protection to your 
      application.

objects:

# Our deployment definition, which is used to describe the IAG container.
- apiVersion: apps/v1
  kind: Deployment

  # Matadata associated with the container.
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}

  spec:
    replicas: ${REPLICAS}
    progressDeadlineSeconds: 600
    revisionHistoryLimit: 10

    selector:
      matchLabels:
        app: ${APP_NAME}

    # The strategy used to replace old Pods by new ones.
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate

    # Details associated with the creation of an IAG container.
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          
      spec:
        # The name of the service account which has the required
        # capabilities enabled for the IAG container.
        serviceAccountName: ${SERVICE_ACCOUNT}

        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ${APP_NAME}
                topologyKey: kubernetes.io/hostname

        containers:
        - name: ${APP_NAME}

          env:
          # The language to be used for console error messages.
          - name: LANG
            value: ${LANGUAGE}

          #### Start of Custom Object section.
          # The name of the custom object which holds our configuration
          # information.
          # - name: CONFIG_CUSTOM_OBJECT_NAME
          #   value: ${CUSTOM_OBJECT}
          #### End of Custom Object section.
          
          # The fully qualified name of the IAG image.
          image: docker.io/ibmcom/ibm-application-gateway:${IAG_VERSION}

          # The ports on which the IAG container will be listening for
          # requests.
          ports:
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP

          resources: {}

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          # The liveness and readiness probes are used by Kubernetes 
          # to obtain the health of the container.  Our health is 
          # governed by the ability to connect to the IAG server.
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 5
            periodSeconds: 10

          #### Start of ConfigMap section.
          # The volume which contains the IAG configuration data.
          volumeMounts:
          - mountPath: /var/iag/config
            name: ${APP_NAME}-config
          #### End of ConfigMap section.

        #### Start of ConfigMap section.
        # The config map which contains the IAG configuration data.
        volumes:
        - name: ${APP_NAME}-config
          configMap:
            name: ${CONFIG_MAP}
        #### End of ConfigMap section.

        # Sundry spec configuration data.
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30

# The route which is used to access the IAG service.  The route will be based
# on the supplied DNS name.
- apiVersion: v1
  kind: Route

  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}

  spec:
    host: ${DNS_NAME}
    port:
      targetPort: ${APP_NAME}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None

# The service which is used to access the runtime interface of the IAG pod.
- apiVersion: v1
  kind: Service

  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}

  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: ${APP_NAME}
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: ${APP_NAME}
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: NodePort
  status:
    loadBalancer: {}

# Configuration parameters associated with this template.
parameters:
  - description: The name which will be given to the IBM Application Gateway application.
    name: APP_NAME
    value: iag
  - description: The IBM Application Gateway version/tag which is to be deployed.
    name: IAG_VERSION
    value: "20.04"
  - description: The fully qualified DNS name which will be used for routing.
    name: DNS_NAME
    value: application.ibm.com
  - description: The service account which will be used when running the pod.
    name: SERVICE_ACCOUNT
    value: iag
  - description: The language in which the console error messages will be displayed.
    name: LANG
    value: C
  - description: The number of replicas of the application to create.
    name: REPLICAS
    value: "1"
  #### Start of ConfigMap section.
  - description: The ConfigMap which holds the configuration of the container.
    name: CONFIG_MAP
    value: iag-config
  #### End of ConfigMap section.
  #### Start of Custom Object section.
  #  - description: The name of the Custom Object which holds the configuration of the container.
  #  name: CUSTOM_OBJECT
  #  value: iag-config
  #### End of Custom Object section.

